(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    949151,      18946]
NotebookOptionsPosition[    923789,      18497]
NotebookOutlinePosition[    924213,      18514]
CellTagsIndexPosition[    924170,      18511]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "Title",
 CellChangeTimes->{{3.891079744454832*^9, 3.891079750747484*^9}, 
   3.9034385649547453`*^9},ExpressionUUID->"bba135c1-1b87-4023-a078-\
05d68db284b8"],

Cell["Question 1", "Title",
 CellChangeTimes->{{3.891075139151396*^9, 
  3.891075149385798*^9}},ExpressionUUID->"3e381f8e-d70c-412e-bb04-\
8e27ea1f3855"],

Cell[CellGroupData[{

Cell["PART i)", "Chapter",
 CellChangeTimes->{{3.891075409533866*^9, 
  3.891075423078356*^9}},ExpressionUUID->"339a6338-f072-41b6-ba99-\
cc816240d263"],

Cell[CellGroupData[{

Cell["State equation matrices :", "Subsubsection",
 CellChangeTimes->{{3.499465660621138*^9, 3.499465667806138*^9}, {
   3.499465831449138*^9, 3.499465870669138*^9}, 3.500138749973727*^9, 
   3.827348834784186*^9},ExpressionUUID->"da001964-6d6e-4844-9473-\
b4a338cfd353"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"10", "1"},
      {"1", 
       RowBox[{"-", "2"}]}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"B", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0"},
      {"1"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"Cm", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "1"}
     }], "\[NoBreak]", ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.499465677990138*^9, 3.4994657728491383`*^9}, {
   3.499465880348138*^9, 3.4994658982371383`*^9}, {3.499545934486638*^9, 
   3.499545936127253*^9}, {3.4996133242595*^9, 3.4996133468705*^9}, {
   3.5001387604577274`*^9, 3.5001387644067273`*^9}, {3.500139026498727*^9, 
   3.5001391576047273`*^9}, {3.5001509096659307`*^9, 3.500150945478201*^9}, {
   3.5002204377679434`*^9, 3.5002204416812835`*^9}, 3.5002207318384132`*^9, 
   3.5002210204935093`*^9, 3.5002227575883107`*^9, {3.5002228224384737`*^9, 
   3.5002228254949036`*^9}, {3.8256546495324306`*^9, 3.825654908420382*^9}, {
   3.827504948077918*^9, 3.827504968763987*^9}, 3.827505017573382*^9, 
   3.8275050968702707`*^9, {3.827505126992127*^9, 3.827505169497069*^9}, {
   3.827505206083665*^9, 3.827505218469022*^9}, {3.891075226996727*^9, 
   3.891075297914411*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"bc133d32-4b33-4fe2-9777-c853750240ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Controllability :", "Subsubsection",
 CellChangeTimes->{{3.4983387404190674`*^9, 3.4983387481313353`*^9}, 
   3.499469278938138*^9},ExpressionUUID->"6c3cd564-264b-4125-83ad-\
61d995c5f9cd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "A", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "B", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "Cm", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<n = \>\"", ",", " ", "n", ",", "\"\<\\t r = \>\"", ",", "r", ",", 
   "\"\<\\t m = \>\"", ",", "m"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"B", ",", 
     RowBox[{"A", ".", "B"}], ",", " ", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<P = \>\"", ",", 
   RowBox[{"MatrixForm", "[", "P", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Rank of P: \>\"", ",", 
   RowBox[{"MatrixRank", "[", "P", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"MatrixRank", "[", "P", "]"}], "\[Equal]", "n"}], ",", 
   RowBox[{"Print", "[", "\"\<System is controllable.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<System is uncontrollable.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4983305924875946`*^9, 3.498330683320029*^9}, {
   3.4983321952876253`*^9, 3.4983322039264607`*^9}, {3.4983398155608044`*^9, 
   3.4983398321125107`*^9}, {3.4985283030655284`*^9, 
   3.4985283034565673`*^9}, {3.4991127430219283`*^9, 
   3.4991127445687933`*^9}, {3.499123273351288*^9, 3.4991232755385065`*^9}, {
   3.4994628656491385`*^9, 3.4994628668781385`*^9}, {3.499466294886138*^9, 
   3.499466296496138*^9}, {3.499466356627138*^9, 3.4994663655381384`*^9}, {
   3.4994689334181385`*^9, 3.4994689372531385`*^9}, {3.4994689735071383`*^9, 
   3.499469010084138*^9}, {3.499469300839138*^9, 3.4994693046971383`*^9}, 
   3.499469615700138*^9, {3.4996133573455*^9, 3.4996133623645*^9}, {
   3.500139161857727*^9, 3.5001391679037275`*^9}, {3.5001391993607273`*^9, 
   3.5001392416767273`*^9}, {3.500150325575919*^9, 3.5001503281227775`*^9}, 
   3.5002204806293745`*^9, {3.5002210283318915`*^9, 3.500221255797643*^9}, {
   3.6070916753283014`*^9, 3.607091705208289*^9}, {3.825654935550046*^9, 
   3.82565496803389*^9}, {3.891075328002129*^9, 3.89107533174335*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"ba0a1d9f-8425-4844-80bd-192559fb0eaf"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"n = \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\"\\t r = \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"\\t m = \"\>", "\[InvisibleSpace]", "1"}],
  SequenceForm["n = ", 2, "\t r = ", 1, "\t m = ", 1],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5001392154647274`*^9, 3.500139649600727*^9, 3.500143687786727*^9, {
   3.500150304857301*^9, 3.5001503289821467`*^9}, 3.500152096665727*^9, 
   3.5001749784860735`*^9, 3.500217138386717*^9, 3.500219329568324*^9, 
   3.5002204500633183`*^9, 3.500220481089421*^9, {3.5002207266028895`*^9, 
   3.5002207341426435`*^9}, 3.500220813138075*^9, {3.500221024231883*^9, 
   3.5002211408799047`*^9}, {3.5002211804831705`*^9, 3.5002212561816816`*^9}, 
   3.5002227614447913`*^9, 3.5002228286662207`*^9, 3.543161627487864*^9, 
   3.54316736434019*^9, 3.5436897277629747`*^9, 3.5436916820263815`*^9, 
   3.571684644779931*^9, 3.5716866312035537`*^9, 3.5716885846048927`*^9, 
   3.5716886620776396`*^9, 3.571688897669196*^9, 3.6070894795107417`*^9, 
   3.60709004975576*^9, 3.6070911763984137`*^9, 3.6070917060993786`*^9, 
   3.607258206497511*^9, 3.607258877348611*^9, 3.607263152378869*^9, 
   3.637933942511698*^9, 3.6385340673017273`*^9, 3.8256549806152973`*^9, 
   3.827349024540448*^9, 3.827505320259314*^9, 3.8910753375162077`*^9},
 CellLabel->
  "During evaluation of \
In[95]:=",ExpressionUUID->"f7bfcd21-cef2-4a3e-ae0b-2a57d18b389a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"P = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1"},
       {"1", 
        RowBox[{"-", "2"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["P = ", 
   MatrixForm[{{0, 1}, {1, -2}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5001392154647274`*^9, 3.500139649600727*^9, 3.500143687786727*^9, {
   3.500150304857301*^9, 3.5001503289821467`*^9}, 3.500152096665727*^9, 
   3.5001749784860735`*^9, 3.500217138386717*^9, 3.500219329568324*^9, 
   3.5002204500633183`*^9, 3.500220481089421*^9, {3.5002207266028895`*^9, 
   3.5002207341426435`*^9}, 3.500220813138075*^9, {3.500221024231883*^9, 
   3.5002211408799047`*^9}, {3.5002211804831705`*^9, 3.5002212561816816`*^9}, 
   3.5002227614447913`*^9, 3.5002228286662207`*^9, 3.543161627487864*^9, 
   3.54316736434019*^9, 3.5436897277629747`*^9, 3.5436916820263815`*^9, 
   3.571684644779931*^9, 3.5716866312035537`*^9, 3.5716885846048927`*^9, 
   3.5716886620776396`*^9, 3.571688897669196*^9, 3.6070894795107417`*^9, 
   3.60709004975576*^9, 3.6070911763984137`*^9, 3.6070917060993786`*^9, 
   3.607258206497511*^9, 3.607258877348611*^9, 3.607263152378869*^9, 
   3.637933942511698*^9, 3.6385340673017273`*^9, 3.8256549806152973`*^9, 
   3.827349024540448*^9, 3.827505320259314*^9, 3.8910753375205297`*^9},
 CellLabel->
  "During evaluation of \
In[95]:=",ExpressionUUID->"28abcbe2-fcd8-47bd-b218-8060e5b8b457"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Rank of P: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["Rank of P: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5001392154647274`*^9, 3.500139649600727*^9, 3.500143687786727*^9, {
   3.500150304857301*^9, 3.5001503289821467`*^9}, 3.500152096665727*^9, 
   3.5001749784860735`*^9, 3.500217138386717*^9, 3.500219329568324*^9, 
   3.5002204500633183`*^9, 3.500220481089421*^9, {3.5002207266028895`*^9, 
   3.5002207341426435`*^9}, 3.500220813138075*^9, {3.500221024231883*^9, 
   3.5002211408799047`*^9}, {3.5002211804831705`*^9, 3.5002212561816816`*^9}, 
   3.5002227614447913`*^9, 3.5002228286662207`*^9, 3.543161627487864*^9, 
   3.54316736434019*^9, 3.5436897277629747`*^9, 3.5436916820263815`*^9, 
   3.571684644779931*^9, 3.5716866312035537`*^9, 3.5716885846048927`*^9, 
   3.5716886620776396`*^9, 3.571688897669196*^9, 3.6070894795107417`*^9, 
   3.60709004975576*^9, 3.6070911763984137`*^9, 3.6070917060993786`*^9, 
   3.607258206497511*^9, 3.607258877348611*^9, 3.607263152378869*^9, 
   3.637933942511698*^9, 3.6385340673017273`*^9, 3.8256549806152973`*^9, 
   3.827349024540448*^9, 3.827505320259314*^9, 3.8910753375255632`*^9},
 CellLabel->
  "During evaluation of \
In[95]:=",ExpressionUUID->"586cddcf-7c10-424d-b4ae-6eb7fe839af0"],

Cell[BoxData["\<\"System is controllable.\"\>"], "Print",
 CellChangeTimes->{
  3.5001392154647274`*^9, 3.500139649600727*^9, 3.500143687786727*^9, {
   3.500150304857301*^9, 3.5001503289821467`*^9}, 3.500152096665727*^9, 
   3.5001749784860735`*^9, 3.500217138386717*^9, 3.500219329568324*^9, 
   3.5002204500633183`*^9, 3.500220481089421*^9, {3.5002207266028895`*^9, 
   3.5002207341426435`*^9}, 3.500220813138075*^9, {3.500221024231883*^9, 
   3.5002211408799047`*^9}, {3.5002211804831705`*^9, 3.5002212561816816`*^9}, 
   3.5002227614447913`*^9, 3.5002228286662207`*^9, 3.543161627487864*^9, 
   3.54316736434019*^9, 3.5436897277629747`*^9, 3.5436916820263815`*^9, 
   3.571684644779931*^9, 3.5716866312035537`*^9, 3.5716885846048927`*^9, 
   3.5716886620776396`*^9, 3.571688897669196*^9, 3.6070894795107417`*^9, 
   3.60709004975576*^9, 3.6070911763984137`*^9, 3.6070917060993786`*^9, 
   3.607258206497511*^9, 3.607258877348611*^9, 3.607263152378869*^9, 
   3.637933942511698*^9, 3.6385340673017273`*^9, 3.8256549806152973`*^9, 
   3.827349024540448*^9, 3.827505320259314*^9, 3.89107533752943*^9},
 CellLabel->
  "During evaluation of \
In[95]:=",ExpressionUUID->"b3bb7ed6-0026-4106-af3e-11be165b7ca7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Observability :", "Subsubsection",
 CellChangeTimes->{{3.498338806959312*^9, 3.4983388121541452`*^9}, 
   3.499469274971138*^9},ExpressionUUID->"ba90af5b-869f-40fd-b51d-\
a9ab721e8d3f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Q", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Cm", "\[Transpose]"}], ",", 
     RowBox[{
      RowBox[{"A", "\[Transpose]"}], ".", 
      RowBox[{"Cm", "\[Transpose]"}]}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Q = \>\"", ",", 
   RowBox[{"MatrixForm", "[", "Q", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<rank(Q) = \>\"", ",", 
   RowBox[{"MatrixRank", "[", "Q", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"MatrixRank", "[", "Q", "]"}], "\[Equal]", "n"}], ",", 
   RowBox[{"Print", "[", "\"\<System is observable.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<System is not observable.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4983311045061817`*^9, 3.498331130678686*^9}, {
   3.4983311933435607`*^9, 3.4983312358644543`*^9}, {3.498335316576216*^9, 
   3.498335323310548*^9}, {3.4983398554190598`*^9, 3.4983398759643917`*^9}, {
   3.4985356764672146`*^9, 3.4985356883968616`*^9}, {3.499469246166138*^9, 
   3.499469285864138*^9}, {3.4994693254201384`*^9, 3.4994693408541384`*^9}, {
   3.4994693800921383`*^9, 3.499469393154138*^9}, {3.499469423848138*^9, 
   3.499469429871138*^9}, {3.4996133963325*^9, 3.4996134067395*^9}, {
   3.5001392372927275`*^9, 3.5001392565237274`*^9}, {3.500150338982083*^9, 
   3.5001503506226335`*^9}, {3.825655516326894*^9, 3.825655596151441*^9}, 
   3.891075383380086*^9},
 CellLabel->
  "In[103]:=",ExpressionUUID->"4bab9cc1-e6af-43bf-9ad8-6c8963a51a45"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Q = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "11"},
       {"1", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Q = ", 
   MatrixForm[{{1, 11}, {1, -1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4994692864201384`*^9, 3.499469342049138*^9, 3.499469393903138*^9, 
   3.499469430596138*^9, 3.4994732151491385`*^9, 3.499546158453955*^9, {
   3.4996133866415*^9, 3.4996134072504997`*^9}, 3.5001392570967274`*^9, 
   3.5001396540647273`*^9, 3.5001436894647274`*^9, {3.5001503455914154`*^9, 
   3.5001503516226273`*^9}, 3.5001520987457275`*^9, 3.500174987931018*^9, 
   3.50021714081896*^9, 3.500220452110523*^9, 3.5002204833456464`*^9, {
   3.500220722268456*^9, 3.5002207362168508`*^9}, 3.500221032264285*^9, 
   3.5002212609301567`*^9, 3.5002227639601526`*^9, 3.5002228306444187`*^9, 
   3.5431616315332685`*^9, 3.543167410557461*^9, 3.54316773103158*^9, 
   3.5436897309972982`*^9, 3.571684644849938*^9, 3.5716866313025637`*^9, 
   3.5716885846418967`*^9, 3.571688665437976*^9, 3.5716889026206913`*^9, 
   3.607089482746065*^9, 3.6070900517849636`*^9, 3.6070911777065444`*^9, 
   3.607091749380706*^9, 3.6072583415163765`*^9, 3.6072588781598167`*^9, 
   3.607263337984869*^9, 3.638534181104107*^9, 3.825655536648032*^9, 
   3.825655602662107*^9, 3.8273490468082523`*^9, 3.8275053293669252`*^9, 
   3.891075386570373*^9},
 CellLabel->
  "During evaluation of \
In[103]:=",ExpressionUUID->"0c995bed-a7ff-47b5-be37-a2c2196ae095"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"rank(Q) = \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["rank(Q) = ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.4994692864201384`*^9, 3.499469342049138*^9, 3.499469393903138*^9, 
   3.499469430596138*^9, 3.4994732151491385`*^9, 3.499546158453955*^9, {
   3.4996133866415*^9, 3.4996134072504997`*^9}, 3.5001392570967274`*^9, 
   3.5001396540647273`*^9, 3.5001436894647274`*^9, {3.5001503455914154`*^9, 
   3.5001503516226273`*^9}, 3.5001520987457275`*^9, 3.500174987931018*^9, 
   3.50021714081896*^9, 3.500220452110523*^9, 3.5002204833456464`*^9, {
   3.500220722268456*^9, 3.5002207362168508`*^9}, 3.500221032264285*^9, 
   3.5002212609301567`*^9, 3.5002227639601526`*^9, 3.5002228306444187`*^9, 
   3.5431616315332685`*^9, 3.543167410557461*^9, 3.54316773103158*^9, 
   3.5436897309972982`*^9, 3.571684644849938*^9, 3.5716866313025637`*^9, 
   3.5716885846418967`*^9, 3.571688665437976*^9, 3.5716889026206913`*^9, 
   3.607089482746065*^9, 3.6070900517849636`*^9, 3.6070911777065444`*^9, 
   3.607091749380706*^9, 3.6072583415163765`*^9, 3.6072588781598167`*^9, 
   3.607263337984869*^9, 3.638534181104107*^9, 3.825655536648032*^9, 
   3.825655602662107*^9, 3.8273490468082523`*^9, 3.8275053293669252`*^9, 
   3.8910753865742702`*^9},
 CellLabel->
  "During evaluation of \
In[103]:=",ExpressionUUID->"65d326aa-00da-45af-a160-f25a13575afc"],

Cell[BoxData["\<\"System is observable.\"\>"], "Print",
 CellChangeTimes->{
  3.4994692864201384`*^9, 3.499469342049138*^9, 3.499469393903138*^9, 
   3.499469430596138*^9, 3.4994732151491385`*^9, 3.499546158453955*^9, {
   3.4996133866415*^9, 3.4996134072504997`*^9}, 3.5001392570967274`*^9, 
   3.5001396540647273`*^9, 3.5001436894647274`*^9, {3.5001503455914154`*^9, 
   3.5001503516226273`*^9}, 3.5001520987457275`*^9, 3.500174987931018*^9, 
   3.50021714081896*^9, 3.500220452110523*^9, 3.5002204833456464`*^9, {
   3.500220722268456*^9, 3.5002207362168508`*^9}, 3.500221032264285*^9, 
   3.5002212609301567`*^9, 3.5002227639601526`*^9, 3.5002228306444187`*^9, 
   3.5431616315332685`*^9, 3.543167410557461*^9, 3.54316773103158*^9, 
   3.5436897309972982`*^9, 3.571684644849938*^9, 3.5716866313025637`*^9, 
   3.5716885846418967`*^9, 3.571688665437976*^9, 3.5716889026206913`*^9, 
   3.607089482746065*^9, 3.6070900517849636`*^9, 3.6070911777065444`*^9, 
   3.607091749380706*^9, 3.6072583415163765`*^9, 3.6072588781598167`*^9, 
   3.607263337984869*^9, 3.638534181104107*^9, 3.825655536648032*^9, 
   3.825655602662107*^9, 3.8273490468082523`*^9, 3.8275053293669252`*^9, 
   3.891075386579372*^9},
 CellLabel->
  "During evaluation of \
In[103]:=",ExpressionUUID->"e5276b73-3ea5-4ea2-b9d2-892ed9d855ba"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenvalues", "[", "A", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.4994695055691385`*^9, 3.499469508871138*^9}, {
  3.5001392830647273`*^9, 3.500139283496727*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"2ca1b0a8-3246-46a6-9bd5-91cf0a25d88d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10.082762530298218`", ",", 
   RowBox[{"-", "2.0827625302982193`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.499469509476138*^9, 3.499473219876138*^9, 3.4995461964693365`*^9, 
   3.4996146168445*^9, {3.5001392787427273`*^9, 3.5001392842757273`*^9}, 
   3.5001436915757275`*^9, 3.5001503844817915`*^9, 3.5001521010327272`*^9, 
   3.500174991364361*^9, 3.5002171427236977`*^9, 3.500220454588771*^9, 
   3.5002204856778793`*^9, 3.500221035048563*^9, 3.5002212637104344`*^9, 
   3.500222765854327*^9, 3.543161634079523*^9, 3.5431674324473853`*^9, 
   3.543689733881587*^9, 3.5716846450919623`*^9, {3.571686631419575*^9, 
   3.57168663357279*^9}, 3.5716885846728997`*^9, 3.571688667453177*^9, 
   3.571688904333863*^9, 3.6070900532951145`*^9, 3.6070911800397778`*^9, 
   3.6072588774578123`*^9, 3.6379339567546797`*^9, 3.638534070276025*^9, 
   3.825655085958432*^9, 3.827349063295669*^9, 3.827505336682509*^9, 
   3.89107538934407*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"94874c3a-5ef9-40ff-9139-66275d1b7c6b"]
}, Open  ]],

Cell["\<\
One of the eigenvalue is positive. Thus, the system is unstable. \
\>", "Text",
 CellChangeTimes->{{3.825655217941132*^9, 3.825655240527062*^9}, 
   3.8256554536365147`*^9, {3.8256569870816097`*^9, 3.825656989832748*^9}, {
   3.8275053587911*^9, 3.8275053869854517`*^9}, 
   3.89107539934864*^9},ExpressionUUID->"9746d1e2-55c7-4bb8-8cea-\
0f0c3eceb01d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PART ii)", "Chapter",
 CellChangeTimes->{{3.8910754267985*^9, 
  3.8910754337288113`*^9}},ExpressionUUID->"9cd60dcb-8c1b-4ac0-ba03-\
fe1a5dc2c4b0"],

Cell[CellGroupData[{

Cell[TextData[{
 "I will use the following approach:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", 
     RowBox[{"(", "0", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["Q", 
       RowBox[{"-", "1"}]], 
      RowBox[{"y", "(", "0", ")"}]}], "-", 
     SuperscriptBox["Q", 
      RowBox[{"-", "1"}]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "73023fbb-c795-43d7-a0c5-fd4333348667"],
 " T u(0)"
}], "Subsubsection",
 CellChangeTimes->{{3.8910763304285307`*^9, 
  3.8910764441778183`*^9}},ExpressionUUID->"150a7411-e06b-4f72-9c54-\
afc71c5b6af2"],

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Cm.b equals to\>\"", ",", 
   RowBox[{"Cm", ".", "B"}]}], " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TT", "=", " ", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"1", "0"}
      }], "\[NoBreak]", ")"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"T", " ", "matrix", " ", "in", " ", "the", " ", "course", " ", 
    RowBox[{"notes", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"TT", " ", "//", "MatrixForm"}]}], "Text",
 CellChangeTimes->{{3.8910757667305937`*^9, 3.891075948591778*^9}, 
   3.891077453349841*^9},
 CellLabel->
  "In[155]:=",ExpressionUUID->"152c33a6-5279-4394-bca9-94256ec3caae"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Cm.b equals to\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}]}],
  SequenceForm["Cm.b equals to", {{1}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.89107594921448*^9, 3.891077012666832*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"7c252e69-524b-4bdd-a3e3-471501ce0ecc"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8910757964814367`*^9, {3.891075854000143*^9, 3.891075884279438*^9}, 
   3.8910759492185783`*^9, 3.8910770126709146`*^9},
 CellLabel->
  "Out[157]//MatrixForm=",ExpressionUUID->"9b01e84a-7719-43d5-9923-\
2e4d77f68da4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", "0", ")"}], "="}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8f52ddce-2fcd-41f4-a749-d12cd0ff6b51"],
 Cell[BoxData[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"y", "[", "0", "]"}]},
     {
      RowBox[{
       RowBox[{"y", "'"}], "[", "0", "]"}]}
    }], "\[NoBreak]", ")"}]],ExpressionUUID->
  "1c4dfef7-b611-4e89-9449-428cf152b051"],
 ", u0=",
 Cell[BoxData[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"u", "[", "0", "]"}]},
     {
      RowBox[{
       RowBox[{"u", "'"}], "[", "0", "]"}]}
    }], "\[NoBreak]", ")"}]],ExpressionUUID->
  "e547e464-8cee-4a33-8c97-52f90097d548"]
}], "Subsubsection",
 CellChangeTimes->{{3.891076515511845*^9, 3.8910765276414433`*^9}, {
  3.891076606839541*^9, 3.891076657007297*^9}, {3.891076691994267*^9, 
  3.891076693120165*^9}},ExpressionUUID->"15ab7fa5-9ed9-4641-b6df-\
615f5d19f11f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Y0", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"3"},
      {"1"}
     }], "\[NoBreak]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U0", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1"},
      {"0"}
     }], "\[NoBreak]", ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8910761361431007`*^9, 3.891076149593164*^9}, {
  3.891076220757978*^9, 3.891076269811193*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"2a705312-8606-4c77-8808-5ebac20ba8a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Inverse", "[", "Q", "]"}], ".", "Y0"}], "-", 
    RowBox[{
     RowBox[{"Inverse", "[", "Q", "]"}], ".", "TT", ".", "U0"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<x[0]=\>\"", ",", " ", 
   RowBox[{"X0", " ", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8910759561414833`*^9, 3.891075997180642*^9}, {
  3.8910760619430532`*^9, 3.891076092461913*^9}, {3.8910762770729437`*^9, 
  3.891076296275634*^9}, {3.891076698769226*^9, 3.891076718566958*^9}, {
  3.891076988116968*^9, 3.8910770027460203`*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"3f0b6ba7-fda5-4ab1-84a8-273dee9c5415"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x[0]=\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "4"]},
       {
        FractionBox["1", "4"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["x[0]=", 
   MatrixForm[{{
      Rational[1, 4]}, {
      Rational[1, 4]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.891076718904765*^9, {3.8910770046543713`*^9, 3.8910770237367983`*^9}},
 CellLabel->
  "During evaluation of \
In[158]:=",ExpressionUUID->"a6ac240e-cb20-4cf3-a2a0-fb32916e3417"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PART iii) Transfer Function", "Chapter",
 CellChangeTimes->{{3.8910754267985*^9, 3.8910754337288113`*^9}, {
  3.891076733563178*^9, 3.891076735159108*^9}, {3.8910771172624197`*^9, 
  3.8910771226752853`*^9}},ExpressionUUID->"272ac748-c923-48c0-acd9-\
200d48c10193"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inn", "=", 
   RowBox[{"IdentityMatrix", "[", "n", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.843822480817786*^9, 3.843822500793*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"86ab9d2e-7b40-455f-a872-001a0683e498"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "s", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cm", ".", 
         RowBox[{"Inverse", "[", 
          RowBox[{
           RowBox[{"s", " ", "Inn"}], "-", "A"}], "]"}], ".", "B"}], "//", 
        "Flatten"}], " ", "//", "Simplify"}], ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<G(s) = \>\"", ",", 
   RowBox[{"G", "[", "s", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8438224614161167`*^9, 3.8438225172514687`*^9}, {
  3.843822561291489*^9, 3.8438226158061996`*^9}, {3.8438226789707546`*^9, 
  3.8438226818722715`*^9}, {3.8910767659652567`*^9, 3.8910767680997953`*^9}, {
  3.8910769149211903`*^9, 3.8910769266125097`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"d54a6d1e-4865-48d7-883d-241ff1d217e6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"G(s) = \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "9"}], "+", "s"}], 
    RowBox[{
     RowBox[{"-", "21"}], "-", 
     RowBox[{"8", " ", "s"}], "+", 
     SuperscriptBox["s", "2"]}]]}],
  SequenceForm[
  "G(s) = ", (-9 + $CellContext`s)/(-21 - 
   8 $CellContext`s + $CellContext`s^2)],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8438226162799916`*^9, 3.8438226824971943`*^9, 3.891076760564905*^9, 
   3.891076793704918*^9, {3.891076916782052*^9, 3.8910769304084263`*^9}},
 CellLabel->
  "During evaluation of \
In[148]:=",ExpressionUUID->"182573ad-533c-42eb-b165-9773f39027b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Denominator", "[", 
      RowBox[{"G", "[", "s", "]"}], "]"}], "\[Equal]", "0"}], ",", "s"}], 
   "]"}], "//", "Flatten"}]], "Input",
 CellChangeTimes->{{3.8438244884334145`*^9, 3.8438245117648673`*^9}, {
  3.891076770022068*^9, 3.8910767705781393`*^9}, {3.891076927967944*^9, 
  3.891076928089221*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"e12efbd8-88ef-4a51-b2e9-99fa6e888cec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"s", "\[Rule]", 
    RowBox[{"4", "-", 
     SqrtBox["37"]}]}], ",", 
   RowBox[{"s", "\[Rule]", 
    RowBox[{"4", "+", 
     SqrtBox["37"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8438245131574764`*^9, 3.891076794815485*^9, 
  3.891076932000854*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"6e980051-6d2a-4e0e-b8cc-8129be6e4672"]
}, Open  ]],

Cell["System is unstable!", "Text",
 CellChangeTimes->{{3.8438245192915144`*^9, 3.843824527405981*^9}, {
   3.891076799731284*^9, 3.891076806368726*^9}, 
   3.891076936959387*^9},ExpressionUUID->"a7adc581-e53b-461d-b376-\
3308d7e53000"]
}, Open  ]],

Cell[TextData[StyleBox["Part iv) Controllable and Observable Canonical Form", \
"Chapter"]], "Subtitle",
 CellChangeTimes->{{3.891077048790244*^9, 3.891077073975822*^9}, {
  3.8910801831449614`*^9, 
  3.891080184938038*^9}},ExpressionUUID->"e61907b7-a434-446c-8dee-\
d6b456c81a1a"],

Cell[TextData[StyleBox["I did this part by hand . Please check the papers \
given to you  (Page 1).", "Section"]], "Chapter",
 CellChangeTimes->{{3.891077419352027*^9, 3.89107746410602*^9}, {
  3.89107784705881*^9, 
  3.8910778516219587`*^9}},ExpressionUUID->"f81cb770-6225-4a55-9e65-\
166043790704"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Question 2", "Title",
 CellChangeTimes->{{3.891077855354103*^9, 3.891077858118411*^9}, 
   3.891077906283684*^9},ExpressionUUID->"235d3190-e3f4-4b94-9544-\
0f9f3ca0970c"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.843826310133705*^9, 3.8438263122970943`*^9}, {
  3.891078128390048*^9, 3.891078128450417*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"5275c599-f7df-4359-8806-c8457959e7c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "s", "]"}], "=", 
   RowBox[{"(", GridBox[{
      {
       FractionBox["1", 
        RowBox[{"s", "+", "2"}]], 
       FractionBox[
        RowBox[{"s", "-", "1"}], 
        RowBox[{"s", "+", "1"}]]},
      {
       FractionBox[
        RowBox[{"3", "s"}], 
        RowBox[{"s", "+", "2"}]], 
       FractionBox["2", 
        RowBox[{"s", "+", "1"}]]}
     }], ")"}]}], ";", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<G(s) = \>\"", ",", 
    RowBox[{"G", "[", "s", "]"}], ",", 
    "\"\<\\n\!\(\*SubscriptBox[\(\[Limit]\), \(s \[Rule] \[Infinity]\)]\) \
G(s) = \>\"", ",", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"G", "[", "s", "]"}], ",", 
      RowBox[{"s", "\[Rule]", "\[Infinity]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.843826314924031*^9, 3.8438263419241667`*^9}, {
  3.843834214344849*^9, 3.843834352412995*^9}, {3.891078118501341*^9, 
  3.891078118562502*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"cd9b2cb6-80f1-4a06-9d28-0c5b6edcd712"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"G(s) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", "+", "s"}]], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", "s"}], 
        RowBox[{"1", "+", "s"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "s"}], 
        RowBox[{"2", "+", "s"}]], ",", 
       FractionBox["2", 
        RowBox[{"1", "+", "s"}]]}], "}"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(\[Limit]\\), \\(s \
\[Rule] \[Infinity]\\)]\\) G(s) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}]}], "}"}]}],
  SequenceForm[
  "G(s) = ", {{(2 + $CellContext`s)^(-1), (-1 + $CellContext`s)/(
     1 + $CellContext`s)}, {
    3 $CellContext`s/(2 + $CellContext`s), 2/(1 + $CellContext`s)}}, 
   "\n\!\(\*SubscriptBox[\(\[Limit]\), \(s \[Rule] \[Infinity]\)]\) G(s) = ", \
{{0, 1}, {3, 0}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.843834258128446*^9, {3.8438343418137627`*^9, 3.8438343529286537`*^9}, 
   3.891078145305862*^9, 3.891079250176281*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"d9adc0f4-1d6a-4207-8a08-7b5c02e500b4"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"G", "(", "s", ")"}], TraditionalForm]],ExpressionUUID->
  "99f21c84-9df4-4f10-b25d-3a5395e820fa"],
 " is not strictly proper. We need to convert that before continue."
}], "Text",
 CellChangeTimes->{{3.843834413923951*^9, 3.8438344313886104`*^9}, {
  3.891078210479706*^9, 3.891078212233954*^9}, {3.891078329792688*^9, 
  3.8910783445796328`*^9}},ExpressionUUID->"c4d88f8e-7505-428e-9f4d-\
8a322daa3f62"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DD", "=", 
   RowBox[{"(", GridBox[{
      {"0", "1"},
      {"3", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", "s", "]"}], "=", 
   RowBox[{
    RowBox[{"DD", "-", 
     RowBox[{"G", "[", "s", "]"}]}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<H(s) = \>\"", ",", 
   RowBox[{
    RowBox[{"H", "[", "s", "]"}], "//", "MatrixForm"}], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(\[Limit]\), \(s \[Rule] \[Infinity]\)]\) H(s) \
= \>\"", ",", 
   RowBox[{
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"H", "[", "s", "]"}], ",", 
      RowBox[{"s", "\[Rule]", "\[Infinity]"}]}], "]"}], "//", 
    "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.843834433487981*^9, 3.8438345522068443`*^9}, {
  3.843834645820428*^9, 3.843834649801318*^9}, {3.843835578842514*^9, 
  3.84383565678234*^9}, {3.8910781363523817`*^9, 3.8910781364381104`*^9}, {
  3.891078215604508*^9, 3.8910782161515493`*^9}, {3.891078322974045*^9, 
  3.891078366019808*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"5962f7e6-09ca-41a2-aab2-f1265b6afe55"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"H(s) = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"2", "+", "s"}]]}], 
        FractionBox["2", 
         RowBox[{"1", "+", "s"}]]},
       {
        FractionBox["6", 
         RowBox[{"2", "+", "s"}]], 
        RowBox[{"-", 
         FractionBox["2", 
          RowBox[{"1", "+", "s"}]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(\[Limit]\\), \\(s \
\[Rule] \[Infinity]\\)]\\) H(s) = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["H(s) = ", 
   MatrixForm[{{(-1)/(2 + $CellContext`s), 2/(1 + $CellContext`s)}, {
     6/(2 + $CellContext`s), (-2)/(1 + $CellContext`s)}}], 
   "\n\!\(\*SubscriptBox[\(\[Limit]\), \(s \[Rule] \[Infinity]\)]\) H(s) = ", 
   
   MatrixForm[{{0, 0}, {0, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8438345529942446`*^9, 3.8438346508325815`*^9, {3.843835653827285*^9, 
   3.8438356579696913`*^9}, 3.8910781493277683`*^9, {3.8910783267246017`*^9, 
   3.89107836626204*^9}, 3.891079251781776*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"457b9fd7-886e-4103-86ca-e150d88b74da"]
}, Open  ]],

Cell["Now H (s) is strictly proper!", "Text",
 CellChangeTimes->{{3.891078369341647*^9, 
  3.89107838731215*^9}},ExpressionUUID->"5f1e1ea5-0709-4f7e-b6f1-\
7b0c9f8e03ea"],

Cell[CellGroupData[{

Cell["\<\
ExtendedHermiteForm and other helpful functions given in course documents:\
\>", "Subsubsection",
 CellChangeTimes->{{3.6514318500504794`*^9, 3.6514318566828585`*^9}, {
  3.6514318919868083`*^9, 3.6514319022311306`*^9}, {3.891075105114663*^9, 
  3.8910751282046137`*^9}},ExpressionUUID->"afad8da3-0763-487d-b1e1-\
d6c38f2ff36d"],

Cell[TextData[{
 "ExtendedHermiteForm[",
 StyleBox["A",
  FontSlant->"Italic"],
 ",",
 StyleBox["s",
  FontSlant->"Italic"],
 "] yields the Hermite form ",
 StyleBox["H",
  FontSlant->"Italic"],
 " of a matrix",
 StyleBox[" A",
  FontSlant->"Italic"],
 " of polynomials in ",
 StyleBox["s",
  FontSlant->"Italic"],
 ". The result is a list {",
 StyleBox["H",
  FontSlant->"Italic"],
 ",",
 StyleBox["U",
  FontSlant->"Italic"],
 "} such that ",
 StyleBox["H",
  FontSlant->"Italic"],
 "=",
 StyleBox["U.A",
  FontSlant->"Italic"],
 " with ",
 StyleBox["U",
  FontSlant->"Italic"],
 " unimodular"
}], "Text",
 CellChangeTimes->{{3.651431910302951*^9, 3.6514319496654406`*^9}, {
  3.651851013793321*^9, 3.651851049375512*^9}, {3.891075064124434*^9, 
  3.891075070662866*^9}},ExpressionUUID->"3e403288-fcac-49ac-96c7-\
d3c4f48a0b10"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"myBlockDiagonalMatrix", "[", 
    RowBox[{"b", ":", 
     RowBox[{"{", 
      RowBox[{"__", "?", "MatrixQ"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "c", ",", 
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", "i", ",", "j"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r", ",", "c"}], "}"}], "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Dimensions", "/@", "b"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"c", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "n"}], "}"}]}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindMin", "[", 
     RowBox[{"at_", ",", "kt_", ",", "xt_", ",", "pt_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "=", "at"}], ",", 
        RowBox[{"k", "=", "kt"}], ",", 
        RowBox[{"x", "=", "xt"}], ",", 
        RowBox[{"p", "=", "pt"}], ",", "i", ",", "rgmin", ",", "degmin"}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"i", "=", "k"}], ";", 
          RowBox[{"rgmin", "=", "k"}], ";", 
          RowBox[{"degmin", "=", 
           RowBox[{"+", "Infinity"}]}]}], ",", 
         RowBox[{"i", "\[LessEqual]", "p"}], ",", 
         RowBox[{"i", "++"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=!=", "0"}], "&&", 
            RowBox[{
             RowBox[{"Exponent", "[", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}], "<", 
             "degmin"}]}], ",", 
           RowBox[{
            RowBox[{"rgmin", "=", "i"}], ";", "\[IndentingNewLine]", 
            RowBox[{"degmin", "=", 
             RowBox[{"Exponent", "[", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}]}]}]}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", "rgmin"}]}], "]"}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Variabile", "[", "at_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "=", "at"}], ",", "xt"}], "}"}], ",", 
      RowBox[{
       RowBox[{"xt", "=", 
        RowBox[{"Variables", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"xt", "===", 
          RowBox[{"{", "}"}]}], ",", "d", ",", 
         RowBox[{"xt", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtPolQ", "[", 
     RowBox[{"lt_List", ",", 
      RowBox[{"xt_", ":", 
       RowBox[{"{", "}"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", "=", "xt"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "===", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Variables", "[", "lt", "]"}], "]"}], ">", "1"}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"General", "::", "badarg"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "$Failed", "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"x", "===", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"x", "=", 
            RowBox[{"Variabile", "[", "lt", "]"}]}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "If", " ", "all", " ", "the", " ", "components", " ", "of", " ", "lt",
          " ", "are", " ", "polynomials", " ", "in", " ", "x"}], "*)"}], 
       RowBox[{
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"PolynomialQ", "[", 
             RowBox[{"#", ",", "x"}], "]"}], "&"}], "/@", 
           RowBox[{"Flatten", "[", "lt", "]"}]}]}], "]"}], "||", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"or", " ", "in", " ", 
           RowBox[{"x", "^", 
            RowBox[{"-", "1"}]}]}], ",", 
          RowBox[{"the", " ", "function", " ", "returns", " ", "True"}], ",", 
          
          RowBox[{"False", " ", 
           RowBox[{"otherwise", ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "Substituting", " ", "all", " ", "the", " ", "symbols", " ", 
               RowBox[{"x", "^", 
                RowBox[{"-", "n"}]}]}], "\[Rule]", 
              RowBox[{
               RowBox[{"x", "^", "n"}], " ", "we", " ", "can", " ", "use", 
               " ", "PolynomialQ", " ", "also", " ", "in", " ", "this", " ", 
               "case"}]}], ")"}]}]}]}], "*)"}], 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"PolynomialQ", "[", 
             RowBox[{"#", ",", "x"}], "]"}], "&"}], "/@", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Expand", "[", "lt", "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"x", "^", 
                  RowBox[{"(", 
                   RowBox[{"n", ":", "_"}], ")"}]}], ")"}], "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"x", "^", 
                  RowBox[{"-", "n"}]}], ")"}]}], ",", 
               RowBox[{"x", "\[Rule]", 
                RowBox[{"x", "^", 
                 RowBox[{"-", "1"}]}]}]}], "}"}]}], "]"}]}]}], "]"}]}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtendedHermiteForm", "[", 
    RowBox[{"at_", ",", 
     RowBox[{"xt_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "=", "at"}], ",", "p", ",", "m", ",", 
        RowBox[{"x", "=", "xt"}], ",", "u", ",", "v", ",", "k", ",", "kcl", 
        ",", "i", ",", "j", ",", "q", ",", "deg", ",", "esp", ",", "coef", 
        ",", "rg", ",", "rmin", ",", "upc", ",", "lpc", ",", 
        RowBox[{"ch", "=", "False"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "===", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Variables", "[", "a", "]"}], "]"}], ">", "1"}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"General", "::", "badarg"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "$Failed", "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"x", "===", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"x", "=", 
            RowBox[{"Variabile", "[", "a", "]"}]}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"ExtPolQ", "[", 
           RowBox[{"a", ",", "x"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"General", "::", "pol"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"PolynomialQ", "[", 
               RowBox[{"#", ",", "x"}], "]"}], "&"}], "/@", 
             RowBox[{"Flatten", "[", "a", "]"}]}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"a", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "^", 
                RowBox[{"(", 
                 RowBox[{"n", ":", "_"}], ")"}]}], ")"}], "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"x", "^", 
                RowBox[{"-", "n"}]}], ")"}]}], "}"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ch", "=", "True"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{"Initialize", " ", "the", " ", "variables"}], "*)"}], 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p", ",", "m"}], "}"}], "=", 
        RowBox[{"Dimensions", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"u", "=", 
        RowBox[{"IdentityMatrix", "[", "p", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Main", " ", "loop", " ", "on", " ", "k", " ", 
         RowBox[{"(", 
          RowBox[{"and", " ", "kcl"}], ")"}]}], "*)"}], 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "=", "1"}], ";", 
          RowBox[{"kcl", "=", "1"}]}], ",", 
         RowBox[{
          RowBox[{"k", "\[LessEqual]", "p"}], "&&", 
          RowBox[{"kcl", "\[LessEqual]", "m"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Find", " ", "the", " ", "first", " ", "non"}], "-", 
           RowBox[{
           "zero", " ", "element", " ", "in", " ", "row", " ", "k"}]}], 
          "*)"}], 
         RowBox[{
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"k", ",", "p"}], "]"}], ",", "kcl"}], "]"}], "]"}], 
              "===", 
              RowBox[{"Table", "[", 
               RowBox[{"0", ",", 
                RowBox[{"{", 
                 RowBox[{"p", "-", "k", "+", "1"}], "}"}]}], "]"}]}], "&&", 
             RowBox[{"kcl", "<", "m"}]}], ",", 
            RowBox[{"kcl", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "With", " ", "this", " ", "loop", " ", "we", " ", "eliminate", " ",
             "all", " ", "the", " ", "elements", " ", "in", " ", "column", 
            " ", "kcl", " ", "below", " ", "position", " ", "k"}], "*)"}], 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"k", "\[Equal]", "p"}], ",", "False", ",", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"k", "+", "1"}], ",", "p"}], "]"}], ",", "kcl"}], 
                 "]"}], "]"}], "=!=", 
               RowBox[{"Table", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"{", 
                  RowBox[{"p", "-", "k"}], "}"}]}], "]"}]}]}], "]"}], ",", 
            RowBox[{"(*", 
             RowBox[{
             "Put", " ", "the", " ", "least", " ", "degree", " ", "element", 
              " ", "within", " ", "column", " ", "kcl", " ", "in", " ", 
              "position", " ", 
              RowBox[{"(", 
               RowBox[{"k", ",", "kcl"}], ")"}]}], "*)"}], 
            RowBox[{
             RowBox[{"rmin", "=", 
              RowBox[{"FindMin", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Transpose", "[", "a", "]"}], "[", 
                 RowBox[{"[", "kcl", "]"}], "]"}], ",", "k", ",", "x", ",", 
                "p"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"rmin", "\[NotEqual]", "k"}], ",", 
               RowBox[{
                RowBox[{"a", "=", 
                 RowBox[{"a", "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "rmin", "]"}], "]"}], "\[Rule]", 
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
                    RowBox[{"a", "[", 
                    RowBox[{"[", "rmin", "]"}], "]"}]}]}], "}"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"u", "=", 
                 RowBox[{"u", "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "rmin", "]"}], "]"}], "\[Rule]", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "rmin", "]"}], "]"}]}]}], "}"}]}]}]}]}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
               "Lower", " ", "the", " ", "degree", " ", "of", " ", "non"}], 
               "-", 
               RowBox[{
               "zero", " ", "polynomials", " ", "in", " ", "column", " ", 
                "kcl", " ", "below", " ", 
                RowBox[{"a", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", ",", "kcl"}], "]"}], "]"}]}]}], "*)"}], 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"i", "=", 
                RowBox[{"k", "+", "1"}]}], ",", 
               RowBox[{"i", "\[LessEqual]", "p"}], ",", 
               RowBox[{"i", "++"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "kcl"}], "]"}], "]"}], "=!=", "0"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"lpc", "=", 
                   RowBox[{"PolynomialQuotient", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "kcl"}], "]"}], "]"}], ",", 
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "kcl"}], "]"}], "]"}], ",", "x"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"a", "=", 
                   RowBox[{"ReplacePart", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"Together", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "*", "lpc"}]}], "]"}], 
                    ",", "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"u", "=", 
                   RowBox[{"ReplacePart", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"Expand", "[", 
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "*", "lpc"}]}], "]"}], 
                    ",", "i"}], "]"}]}]}]}], "]"}]}], "]"}]}]}], "]"}], ";", 
          RowBox[{"(*", "Endwhile", "*)"}], 
          RowBox[{"(*", 
           RowBox[{
           "In", " ", "column", " ", "kcl", " ", "lower", " ", "the", " ", 
            "degree", " ", "of", " ", "polynomials", " ", "above", " ", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "kcl"}], "]"}], "]"}], " ", "having", " ", 
            "the", " ", "degree", " ", "higher", " ", "than", " ", "that", 
            " ", "of", " ", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "kcl"}], "]"}], "]"}]}], "*)"}], 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "kcl"}], "]"}], "]"}], "=!=", "0"}], ",", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", "k"}], ",", 
              RowBox[{"i", "++"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "kcl"}], "]"}], "]"}], "=!=", "0"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Exponent", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "kcl"}], "]"}], "]"}], ",", "x"}], 
                    "]"}], "\[GreaterEqual]", 
                   RowBox[{"Exponent", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "kcl"}], "]"}], "]"}], ",", "x"}], 
                    "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"lpc", "=", 
                    RowBox[{"PolynomialQuotient", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "kcl"}], "]"}], "]"}], ",", 
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "kcl"}], "]"}], "]"}], ",", "x"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"a", "=", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"Together", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "*", "lpc"}]}], "]"}], 
                    ",", "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"u", "=", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"Expand", "[", 
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "*", "lpc"}]}], "]"}], 
                    ",", "i"}], "]"}]}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Make", " ", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "kcl"}], "]"}], "]"}], " ", "monic"}], "*)"}], 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "kcl"}], "]"}], "]"}], "=!=", "0"}], ",", 
            RowBox[{
             RowBox[{"lpc", "=", 
              RowBox[{"Coefficient", "[", 
               RowBox[{
                RowBox[{"a", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", ",", "kcl"}], "]"}], "]"}], ",", "x", ",", 
                RowBox[{"Exponent", "[", 
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", ",", "kcl"}], "]"}], "]"}], ",", "x"}], 
                 "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"lpc", "=!=", "1"}], ",", 
               RowBox[{
                RowBox[{"a", "=", 
                 RowBox[{"ReplacePart", "[", 
                  RowBox[{"a", ",", 
                   RowBox[{"Expand", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "/", "lpc"}], "]"}], ",", 
                   "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"u", "=", 
                 RowBox[{"ReplacePart", "[", 
                  RowBox[{"u", ",", 
                   RowBox[{"Expand", "[", 
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "/", "lpc"}], "]"}], ",", 
                   "k"}], "]"}]}]}]}], "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"kcl", "++"}]}]}], "]"}], ";", 
       RowBox[{"(*", "Endfor", "*)"}], 
       RowBox[{"(*", 
        RowBox[{
        "Put", " ", "all", " ", "the", " ", "zero", " ", "rows", " ", "in", 
         " ", "the", " ", "last", " ", "positions"}], "*)"}], 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "<", "p"}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "===", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", "m", "}"}]}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"i", "=", "p"}], ";", "\[IndentingNewLine]", 
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"a", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "===", 
                RowBox[{"Table", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"{", "m", "}"}]}], "]"}]}], "&&", 
               RowBox[{"i", ">", "k"}]}], ",", 
              RowBox[{"i", "=", 
               RowBox[{"i", "-", "1"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", ">", "k"}], ",", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"j", "=", "k"}], ",", 
                RowBox[{"j", "\[LessEqual]", "i"}], ",", 
                RowBox[{"j", "++"}], ",", 
                RowBox[{
                 RowBox[{"a", "=", 
                  RowBox[{"ReplacePart", "[", 
                   RowBox[{"a", ",", 
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "+", "1"}], "]"}], "]"}], ",", "j"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"u", "=", 
                  RowBox[{"ReplacePart", "[", 
                   RowBox[{"u", ",", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "+", "1"}], "]"}], "]"}], ",", "j"}], 
                   "]"}]}]}]}], "]"}]}], "]"}], ";"}]}], "]"}]}], 
        RowBox[{"(*", "endif", "*)"}], "]"}], ";", 
       RowBox[{"(*", "endfor", "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{"ch", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "u"}], "}"}], "=", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "u"}], "}"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "^", 
               RowBox[{"(", 
                RowBox[{"n", ":", "_"}], ")"}]}], "\[Rule]", 
              RowBox[{"x", "^", 
               RowBox[{"-", "n"}]}]}], ",", 
             RowBox[{"x", "\[Rule]", 
              RowBox[{"x", "^", 
               RowBox[{"-", "1"}]}]}]}], "}"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"a", ",", "u"}], "}"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"MatrixQ", "[", "at", "]"}], "||", 
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"General", "::", "mtrx"}], ",", 
       "\"\<ExtendedHermiteForm\>\""}], "]"}]}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.651431841999446*^9, {3.6514320897734404`*^9, 3.6514321000877295`*^9}, {
   3.651432214076404*^9, 3.651432217383689*^9}, {3.6514323171864653`*^9, 
   3.6514323248618793`*^9}, {3.6514326703507795`*^9, 
   3.6514326733022547`*^9}, {3.6518508391971908`*^9, 
   3.6518508412634673`*^9}, {3.651851104355658*^9, 3.6518511051388874`*^9}, 
   3.783733887002005*^9, 3.890128066574518*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"b370129e-8584-4e96-9016-9389ef679ec3"],

Cell[BoxData[
 TemplateBox[{
  "SetDelayed", "write", 
   "\:f3b5Tag BlockDiagonalMatrix in \!\(BlockDiagonalMatrix[b : \
{__?MatrixQ}]\) is Protected.\:f3b5", 2, 203, 10, 23985850225408363824, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.890127962147509*^9, 
  3.89012810874358*^9},ExpressionUUID->"b29a0b43-5c34-4e21-a00d-5d8440df2073"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Part i) Minimal MFD", "Chapter",
 CellChangeTimes->{{3.843819103141686*^9, 3.8438191198833704`*^9}, {
  3.843819968061833*^9, 3.8438200354268904`*^9}, {3.8438223998284264`*^9, 
  3.843822420889537*^9}, {3.8438226246073723`*^9, 3.843822625510685*^9}, {
  3.8438242484076247`*^9, 3.84382426085061*^9}, {3.8438348856117787`*^9, 
  3.8438348969697275`*^9}, {3.8910797793251*^9, 
  3.891079782569298*^9}},ExpressionUUID->"3f141117-53ac-495f-a480-\
4d77083e7853"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"N1", "[", "s", "]"}], "=", 
   RowBox[{"Numerator", "[", 
    RowBox[{"H", "[", "s", "]"}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"D1", "[", "s", "]"}], "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"s", "+", "2"}], "0"},
      {"0", 
       RowBox[{"s", "+", "1"}]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<N(s) = \>\"", ",", 
   RowBox[{"N1", "[", "s", "]"}], ",", "\"\<\\tD(s) = \>\"", ",", 
   RowBox[{"D1", "[", "s", "]"}], ",", 
   "\"\<\\tH(s) = N(s)\!\(\*SuperscriptBox[\(D\), \(-1\)]\)(s) = \>\"", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"N1", "[", "s", "]"}], ".", 
     RowBox[{"Inverse", "[", 
      RowBox[{"D1", "[", "s", "]"}], "]"}]}], "//", "Simplify"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8438349777574387`*^9, 3.843835091344923*^9}, {
  3.843835134833397*^9, 3.843835147179453*^9}, {3.8438352087387385`*^9, 
  3.8438352588279505`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"59625358-4d06-4357-a84e-d62c840b3a29"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N(s) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"\\tD(s) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", "s"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"1", "+", "s"}]}], "}"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"\\tH(s) = N(s)\\!\\(\\*SuperscriptBox[\\(D\\), \
\\(-1\\)]\\)(s) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{"2", "+", "s"}]]}], ",", 
       FractionBox["2", 
        RowBox[{"1", "+", "s"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["6", 
        RowBox[{"2", "+", "s"}]], ",", 
       RowBox[{"-", 
        FractionBox["2", 
         RowBox[{"1", "+", "s"}]]}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "N(s) = ", {{-1, 2}, {6, -2}}, 
   "\tD(s) = ", {{2 + $CellContext`s, 0}, {0, 1 + $CellContext`s}}, 
   "\tH(s) = N(s)\!\(\*SuperscriptBox[\(D\), \(-1\)]\)(s) = ", {{(-1)/(
     2 + $CellContext`s), 2/(1 + $CellContext`s)}, {
    6/(2 + $CellContext`s), (-2)/(1 + $CellContext`s)}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.843835094469783*^9, 3.8438351476167583`*^9, {3.8438352110263557`*^9, 
   3.843835259208744*^9}, 3.891078183861353*^9, 3.8910783982063627`*^9, 
   3.89107925694599*^9},
 CellLabel->
  "During evaluation of \
In[10]:=",ExpressionUUID->"d780e90d-136e-4c16-9a86-bc379d7f6faa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DN", "[", "s_", "]"}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"D1", "[", "s", "]"}], ",", 
     RowBox[{"N1", "[", "s", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"\"\<D(s)\>\""},
      {"\"\<N(s)\>\""}
     }], "\[NoBreak]", ")"}], ",", "\"\< = \>\"", ",", 
   RowBox[{"DN", "[", "s", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h", "[", "s", "]"}], ",", 
      RowBox[{"U", "[", "s", "]"}]}], "}"}], "=", 
    RowBox[{"ExtendedHermiteForm", "[", 
     RowBox[{
      RowBox[{"DN", "[", "s", "]"}], ",", "s"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Wg", "=", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"h", "[", "s", "]"}], ",", 
     RowBox[{"Min", "[", 
      RowBox[{"Dimensions", "[", 
       RowBox[{"h", "[", "s", "]"}], "]"}], "]"}]}], "]"}]}], ";", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<\!\(\*SubscriptBox[\(W\), \(g\)]\) = \>\"", ",", "Wg"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{3.84383579566187*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"621d4ecc-8cce-4be1-853c-54c05524f8e7"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "\<\"D(s)\"\>", "}"}], ",", 
     RowBox[{"{", "\<\"N(s)\"\>", "}"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\" = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", "s"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"1", "+", "s"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}]}],
  SequenceForm[{{"D(s)"}, {"N(s)"}}, 
   " = ", {{2 + $CellContext`s, 0}, {0, 1 + $CellContext`s}, {-1, 2}, {
    6, -2}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.843835757026925*^9, 3.8438357978037057`*^9, 
  3.891078189491193*^9, 3.8910783995687037`*^9, 3.891079258544092*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"6c604bda-b1fc-40e4-9a0d-db3bb8b9a985"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(W\\), \\(g\\)]\\) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}],
  SequenceForm["\!\(\*SubscriptBox[\(W\), \(g\)]\) = ", {{1, 0}, {0, 1}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.843835757026925*^9, 3.8438357978037057`*^9, 
  3.891078189491193*^9, 3.8910783995687037`*^9, 3.891079258548959*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"0e9d313f-75de-4711-8d8b-a96a06f6bee9"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["W", "g"], "=", "I"}], TraditionalForm]],ExpressionUUID->
  "3577f1ba-8a6a-44c8-b7aa-b7953820bdef"],
 ", the realization is minimal."
}], "Text",
 CellChangeTimes->{{3.8438358013723836`*^9, 3.843835850923015*^9}, {
  3.8438358892499847`*^9, 3.843835889937587*^9}, {3.891080146727702*^9, 
  3.8910801526393633`*^9}},ExpressionUUID->"4ae84b38-eeaf-4abe-8965-\
9f31fd35947d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<det(D(s)) = \>\"", ",", 
   RowBox[{"Det", "[", 
    RowBox[{"D1", "[", "s", "]"}], "]"}], ",", 
   "\"\<\\nThe minimum number of states is \>\"", ",", 
   RowBox[{"Exponent", "[", 
    RowBox[{
     RowBox[{"Det", "[", 
      RowBox[{"D1", "[", "s", "]"}], "]"}], ",", "s"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.8438359081349955`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"b2c4192d-a29a-4aea-b955-266f37ffbad3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"det(D(s)) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"2", "+", 
    RowBox[{"3", " ", "s"}], "+", 
    SuperscriptBox["s", "2"]}], 
   "\[InvisibleSpace]", "\<\"\\nThe minimum number of states is \"\>", 
   "\[InvisibleSpace]", "2"}],
  SequenceForm[
  "det(D(s)) = ", 2 + 3 $CellContext`s + $CellContext`s^2, 
   "\nThe minimum number of states is ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.84383589506872*^9, 3.8438359087287335`*^9}, 
   3.8910781937532587`*^9, 3.891078401773779*^9, 3.891079260350185*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"31609539-b30e-4a18-ab90-7259081416c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Controller form of right MFD", "Subsection",
 CellChangeTimes->{{3.843819103141686*^9, 3.8438191198833704`*^9}, {
  3.843819968061833*^9, 3.8438200354268904`*^9}, {3.8438223998284264`*^9, 
  3.843822420889537*^9}, {3.8438226246073723`*^9, 3.843822625510685*^9}, {
  3.8438242484076247`*^9, 3.84382426085061*^9}, {3.8438348856117787`*^9, 
  3.8438348969697275`*^9}, {3.8438359551355033`*^9, 
  3.8438359808425*^9}},ExpressionUUID->"54f70995-683b-4ad7-aabe-60e6248fbb71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Build", " ", "up", " ", 
  StyleBox["S",
   FontSlant->"Italic"], 
  RowBox[{"(", "s", ")"}], " ", "and", " ", 
  RowBox[{
   FormBox[
    SubscriptBox["D", "hc"],
    TraditionalForm], ":"}]}]], "Subsubsection",
 CellChangeTimes->{{3.777917754789135*^9, 
  3.777917768926075*^9}},ExpressionUUID->"98dc63fa-bc8b-49b3-b43e-\
c3cd8c8a844e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<D(s) = \>\"", ",", 
   RowBox[{
    RowBox[{"D1", "[", "s", "]"}], "//", "Expand"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.777917782020051*^9, 3.7779177885782595`*^9}, {
  3.777917821525508*^9, 3.7779179267956066`*^9}, {3.777918670370057*^9, 
  3.77791867260973*^9}, {3.777919245949049*^9, 3.777919257451863*^9}, {
  3.7779193441250687`*^9, 3.7779193497266474`*^9}, {3.8274294379484973`*^9, 
  3.8274294386298943`*^9}, {3.827437186337968*^9, 3.827437186430303*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"033f5d34-78a3-4f89-a27c-5e315d72b2bc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"D(s) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "+", "s"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"1", "+", "s"}]}], "}"}]}], "}"}]}],
  SequenceForm["D(s) = ", {{2 + $CellContext`s, 0}, {0, 1 + $CellContext`s}}],
  
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7779178409529724`*^9, {3.7779179048881235`*^9, 3.7779179273512917`*^9}, 
   3.7779186730465164`*^9, 3.7779192464829617`*^9, {3.7779193449645867`*^9, 
   3.777919350403257*^9}, 3.777930175616632*^9, 3.7779909266970544`*^9, 
   3.827429440892002*^9, 3.827437188553173*^9, 3.827515964382453*^9, 
   3.827517682372284*^9, 3.843836034138945*^9, 3.891079261647764*^9},
 CellLabel->
  "During evaluation of \
In[17]:=",ExpressionUUID->"7e9b9c07-dcf7-4071-a699-1b4afbe3b833"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"D1", "[", "s", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"Exponent", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"D1", "[", "s", "]"}], "\[Transpose]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "s"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S", "[", "s", "]"}], "=", 
   RowBox[{"DiagonalMatrix", "[", 
    SuperscriptBox["s", "k"], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dhc", "=", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"D1", "[", "s", "]"}], "\[Transpose]"}], ",", 
      SuperscriptBox["s", "k"]}], "]"}], "\[Transpose]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<k = \>\"", ",", "k", ",", "\"\<\\tS(s) = \>\"", ",", 
   RowBox[{"S", "[", "s", "]"}], ",", 
   "\"\<\\t \!\(\*SubscriptBox[\(D\), \(hc\)]\) = \>\"", ",", "Dhc"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.777917935132189*^9, 3.777917973235611*^9}, {
   3.777918045750128*^9, 3.777918062407254*^9}, {3.7779192083722763`*^9, 
   3.7779192120611196`*^9}, {3.777919260225134*^9, 3.7779192633429756`*^9}, {
   3.7779193363080163`*^9, 3.77791937121303*^9}, {3.7779194488186884`*^9, 
   3.7779195399489155`*^9}, {3.777930193055221*^9, 3.7779302112230453`*^9}, {
   3.827429447530405*^9, 3.8274294650803347`*^9}, {3.827437230577696*^9, 
   3.827437239439561*^9}, 3.891078412450025*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"a6799728-e60d-4440-82f6-78e5578d6770"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"k = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], "\[InvisibleSpace]", "\<\"\\tS(s) = \"\>",
    "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "s"}], "}"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"\\t \\!\\(\\*SubscriptBox[\\(D\\), \\(hc\\)]\\) \
= \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}],
  SequenceForm[
  "k = ", {1, 1}, "\tS(s) = ", {{$CellContext`s, 0}, {0, $CellContext`s}}, 
   "\t \!\(\*SubscriptBox[\(D\), \(hc\)]\) = ", {{1, 0}, {0, 1}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.777919491237039*^9, {3.7779195358469195`*^9, 3.777919540418645*^9}, {
   3.7779301776499357`*^9, 3.777930212392455*^9}, 3.7779302804958763`*^9, 
   3.777990926739029*^9, {3.827429443814014*^9, 3.82742946555221*^9}, 
   3.827437243791115*^9, 3.8275159644014387`*^9, 3.827517684150571*^9, 
   3.8438362435871162`*^9, 3.891078414061336*^9, 3.891079262444476*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"09bb75f2-9f2d-4f75-ba08-fd4c377957e4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Build up \[Psi](",
 StyleBox["s",
  FontSlant->"Italic"],
 "), ",
 StyleBox["L",
  FontSlant->"Italic"],
 "(",
 StyleBox["s",
  FontSlant->"Italic"],
 "), and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["D", "lc"], TraditionalForm]],ExpressionUUID->
  "87fe7c7a-135d-499a-87e8-be0d8542eeee"],
 " :"
}], "Subsubsection",
 CellChangeTimes->{{3.652039787165371*^9, 3.6520397994192905`*^9}, {
  3.6520398579994435`*^9, 3.652039860308303*^9}, {3.652041965870859*^9, 
  3.6520420161443663`*^9}},ExpressionUUID->"668ccc63-665a-4f71-93bf-\
be6e5269331e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"L", "[", "s", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"D1", "[", "s", "]"}], "-", 
     RowBox[{"Dhc", ".", 
      RowBox[{"S", "[", "s", "]"}]}]}], "//", "Expand"}]}], ";", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<L(s) = \>\"", ",", 
    RowBox[{
     RowBox[{"L", "[", "s", "]"}], "//", "MatrixForm"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7779198649188766`*^9, 3.7779199272284675`*^9}, {
  3.827429551759988*^9, 3.8274295526304216`*^9}, {3.827437254974348*^9, 
  3.8274372550803404`*^9}, {3.891078422211514*^9, 3.891078424894253*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"7b9d5694-f92c-4805-b2b1-039bc5b186d1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"L(s) = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["L(s) = ", 
   MatrixForm[{{2, 0}, {0, 1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7779199278420706`*^9, 3.77793018208086*^9, 3.7779302828031282`*^9, 
   3.7779909268369894`*^9, 3.8274295585608697`*^9, 3.827437261596632*^9, 
   3.8275159644181695`*^9, 3.8275176864830213`*^9, 3.843836381071108*^9, {
   3.891078415841867*^9, 3.891078425261487*^9}, 3.891079264003273*^9},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"9f350ec0-ee80-4805-b209-545ceb924875"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Reverse", "[", 
      SuperscriptBox["s", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"k", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "-", "1"}]}], "]"}]], "]"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", "s", "]"}], "=", 
   RowBox[{
    RowBox[{"myBlockDiagonalMatrix", "[", "p", "]"}], "\[Transpose]"}]}], ";", 
  RowBox[{
   RowBox[{"\[Psi]", "[", "s", "]"}], "//", "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.7779197969399805`*^9, 3.77791979737673*^9}, {
  3.8274372699861546`*^9, 3.8274372720439854`*^9}, {3.8910780778737164`*^9, 
  3.891078078133219*^9}, {3.89107843207405*^9, 3.891078439749351*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"5a24e0ae-4da4-4550-b661-aec9d950676f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7779198088023615`*^9, 3.777930284956505*^9, 3.7779909268609686`*^9, 
   3.8274295654175644`*^9, 3.82743727660804*^9, 3.827515964518156*^9, 
   3.827517688786255*^9, 3.8438363882610717`*^9, {3.891078427206924*^9, 
   3.891078440032071*^9}, 3.891079264916424*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"df1ec57d-56cf-4b9f-80b8-6e1ef5fc0d50"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7779198088023615`*^9, 3.777930284956505*^9, 3.7779909268609686`*^9, 
   3.8274295654175644`*^9, 3.82743727660804*^9, 3.827515964518156*^9, 
   3.827517688786255*^9, 3.8438363882610717`*^9, {3.891078427206924*^9, 
   3.891078440032071*^9}, 3.891079264921471*^9},
 CellLabel->
  "Out[25]//MatrixForm=",ExpressionUUID->"faab3df3-51ec-4c78-bb8e-\
b6603eca0b35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d2", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["d", "##"], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"Total", "[", "k", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol1", "=", 
   RowBox[{
    RowBox[{"SolveAlways", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"L", "[", "s", "]"}], "]"}], "\[Equal]", 
        RowBox[{"Flatten", "[", 
         RowBox[{"d2", ".", 
          RowBox[{"\[Psi]", "[", "s", "]"}]}], "]"}]}], "]"}], ",", "s"}], 
     "]"}], "//", "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dlc", "=", 
   RowBox[{"d2", "/.", "sol1"}]}], ";", 
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<\!\(\*SubscriptBox[\(D\), \(lc\)]\) = \>\"", ",", "d2", ",", 
    "\"\< = \>\"", ",", "Dlc"}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7779205280717735`*^9, {3.7779205835111074`*^9, 3.7779206041113715`*^9}, {
   3.7779206773237305`*^9, 3.777920715960829*^9}, {3.8438364877400923`*^9, 
   3.8438365079112816`*^9}, {3.8438366211155205`*^9, 3.8438366572223697`*^9}},
 
 CellLabel->"In[26]:=",ExpressionUUID->"ff00557b-71d6-4af1-bab8-ec40dc4f75cd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(D\\), \\(lc\\)]\\) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["d", 
        RowBox[{"1", ",", "1"}]], ",", 
       SubscriptBox["d", 
        RowBox[{"1", ",", "2"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["d", 
        RowBox[{"2", ",", "1"}]], ",", 
       SubscriptBox["d", 
        RowBox[{"2", ",", "2"}]]}], "}"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\" = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}],
  SequenceForm["\!\(\*SubscriptBox[\(D\), \(lc\)]\) = ", {{
     Subscript[$CellContext`d, 1, 1], 
     Subscript[$CellContext`d, 1, 2]}, {
     Subscript[$CellContext`d, 2, 1], 
     Subscript[$CellContext`d, 2, 2]}}, " = ", {{2, 0}, {0, 1}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7779207090525827`*^9, 3.7779207168752985`*^9}, 
   3.77793028893538*^9, 3.777990926940919*^9, 3.8274296254310217`*^9, 
   3.82743729470171*^9, 3.827515967194419*^9, 3.8275176922350464`*^9, 
   3.843836463210926*^9, {3.8438365033364506`*^9, 3.843836508634731*^9}, {
   3.8438366215998774`*^9, 3.843836657925499*^9}, 3.891078448781519*^9, 
   3.89107926609794*^9},
 CellLabel->
  "During evaluation of \
In[26]:=",ExpressionUUID->"0ccb5e0e-c24d-4641-a93d-2fe9013084e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Build up ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["A", "c", "0"], TraditionalForm]],ExpressionUUID->
  "6d48f524-3122-4c02-9bbd-a78e23ca2e5f"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["B", "c", "0"], TraditionalForm]],ExpressionUUID->
  "dda8c374-0c10-4f1f-bd22-458f3ee11d05"],
 ":"
}], "Subsubsection",
 CellChangeTimes->{{3.652039787165371*^9, 3.6520397994192905`*^9}, {
  3.6520398579994435`*^9, 3.652039860308303*^9}, {3.652041965870859*^9, 
  3.652042103090012*^9}, {3.65209876145965*^9, 3.652098765391951*^9}, {
  3.777930523092989*^9, 
  3.7779305271959*^9}},ExpressionUUID->"94ad0038-0467-4652-a430-15cba126297b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ai", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"k", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", "1"}], ",", "1"}], "]"}]}], 
        "]"}], ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"k", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ac0", "=", 
   RowBox[{"myBlockDiagonalMatrix", "[", "Ai", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"UnitVector", "[", 
       RowBox[{
        RowBox[{"k", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Bc0", "=", 
   RowBox[{
    RowBox[{"myBlockDiagonalMatrix", "[", "Bi", "]"}], "\[Transpose]"}]}], 
  ";", 
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<\!\(TraditionalForm\`\(\*SubsuperscriptBox[\(A\), \(c\), \(0\)]\(\\\ \
\)\(=\)\(\\\ \)\)\)\>\"", ",", 
    RowBox[{"Ac0", " ", "//", "MatrixForm"}], ",", 
    "\"\<\\t \!\(\*SubsuperscriptBox[\(B\), \(c\), \(0\)]\) = \>\"", ",", 
    RowBox[{"Bc0", " ", "//", "MatrixForm"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.652041740085026*^9, 3.6520417573742695`*^9}, {
   3.6520418185490484`*^9, 3.6520418534775476`*^9}, {3.6520418990601425`*^9, 
   3.652041948086403*^9}, {3.652042133107786*^9, 3.652042134184214*^9}, {
   3.6520423418712516`*^9, 3.6520423433844905`*^9}, {3.652097596797842*^9, 
   3.652097636104454*^9}, 3.6520982917115793`*^9, {3.6520989455321884`*^9, 
   3.652098947965851*^9}, {3.6526398589210873`*^9, 3.6526398698435707`*^9}, 
   3.714431021848025*^9, {3.7144451470915165`*^9, 3.7144451715546565`*^9}, {
   3.7779303360185013`*^9, 3.77793040661027*^9}, {3.777930463989101*^9, 
   3.777930486872168*^9}, {3.777930535936635*^9, 3.777930617559799*^9}, {
   3.7779306679905033`*^9, 3.7779306680932693`*^9}, {3.891078083949333*^9, 
   3.891078090263689*^9}, {3.891078512949431*^9, 3.891078518252903*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"ff6e6eb7-662c-45b0-b3f2-f5c07d12e31b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(TraditionalForm\\`\\(\\*SubsuperscriptBox[\\(A\\), \
\\(c\\), \\(0\\)]\\(\\\\ \\)\\(=\\)\\(\\\\ \\)\\)\\)\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"\\t \\!\\(\\*SubsuperscriptBox[\\(B\\), \\(c\\), \
\\(0\\)]\\) = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "\!\(TraditionalForm\`\(\*SubsuperscriptBox[\(A\), \(c\), \(0\)]\(\\ \
\)\(=\)\(\\ \)\)\)", 
   MatrixForm[{{0, 0}, {0, 0}}], 
   "\t \!\(\*SubsuperscriptBox[\(B\), \(c\), \(0\)]\) = ", 
   MatrixForm[{{1, 0}, {0, 1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7779304882050943`*^9, {3.777930594138452*^9, 3.7779306180419064`*^9}, 
   3.777930668940216*^9, 3.7779909269648933`*^9, 3.8274297465341268`*^9, 
   3.8274372982908554`*^9, 3.827515967432*^9, 3.827517696590619*^9, 
   3.8438368431816516`*^9, {3.8910785086538267`*^9, 3.8910785184620743`*^9}, 
   3.89107926722626*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"fa75e66f-b71f-4bd1-a520-8991dfdf0159"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Obtain the matrices for the controller - form state space realization :\
\>", "Subsubsection",
 CellChangeTimes->{{3.652119257734663*^9, 
  3.6521192994761353`*^9}},ExpressionUUID->"0109d6fc-b3d9-4622-9a11-\
7c0fee3d3a81"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ac", "=", 
   RowBox[{"Ac0", "-", 
    RowBox[{"Bc0", ".", 
     RowBox[{"Inverse", "[", "Dhc", "]"}], ".", "Dlc"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bc", "=", 
   RowBox[{"Bc0", ".", 
    RowBox[{"Inverse", "[", "Dhc", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\!\(TraditionalForm\`\(\*SubscriptBox[\(A\), \(c\)]\(\\\ \)\(=\)\(\\\ \
\)\)\)\>\"", ",", 
   RowBox[{"Ac", " ", "//", "MatrixForm"}], ",", 
   "\"\<\\t \!\(\*SubscriptBox[\(B\), \(c\)]\) = \>\"", ",", 
   RowBox[{"Bc", " ", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.65209928572268*^9, 3.6520993142496185`*^9}, {
  3.7779306264216967`*^9, 3.777930681088911*^9}, {3.89107852244547*^9, 
  3.891078527500597*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"66caf346-a7b2-49ae-abab-567671f687da"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(TraditionalForm\\`\\(\\*SubscriptBox[\\(A\\), \
\\(c\\)]\\(\\\\ \\)\\(=\\)\\(\\\\ \\)\\)\\)\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "2"}], "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"\\t \\!\\(\\*SubscriptBox[\\(B\\), \\(c\\)]\\) = \
\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "\!\(TraditionalForm\`\(\*SubscriptBox[\(A\), \(c\)]\(\\ \)\(=\)\(\\ \
\)\)\)", 
   MatrixForm[{{-2, 0}, {0, -1}}], "\t \!\(\*SubscriptBox[\(B\), \(c\)]\) = ", 
   MatrixForm[{{1, 0}, {0, 1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.7779306819860907`*^9, 3.7779909273027043`*^9, 
  3.827429856296836*^9, 3.8274373557254395`*^9, 3.827515967537092*^9, 
  3.827517699325081*^9, 3.8438370393135386`*^9, 3.891078527843398*^9, 
  3.891079268427953*^9},
 CellLabel->
  "During evaluation of \
In[32]:=",ExpressionUUID->"02eeb27e-e923-42ae-9a36-fffe269b0fe5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nlc2", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["nlc", "##"], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"N1", "[", "s", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", "k", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", "=", 
   RowBox[{
    RowBox[{"SolveAlways", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"N1", "[", "s", "]"}], "]"}], "\[Equal]", 
        RowBox[{"Flatten", "[", 
         RowBox[{"nlc2", ".", 
          RowBox[{"\[Psi]", "[", "s", "]"}]}], "]"}]}], "]"}], ",", "s"}], 
     "]"}], "//", "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cc", "=", 
   RowBox[{"nlc2", "/.", "sol2"}]}], ";", 
  "                                                                           \
                                                                              \
                        ", 
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<\!\(\*SubscriptBox[\(N\), \(lc\)]\) = \!\(\*SubscriptBox[\(C\), \
\(c\)]\) = \>\"", ",", 
    RowBox[{"Cc", " ", "//", "MatrixForm"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.652120910753295*^9, 3.6521209774956083`*^9}, {
   3.6521210116214867`*^9, 3.6521210250554314`*^9}, {3.6526173745525265`*^9, 
   3.6526173853374033`*^9}, 3.6526174558498163`*^9, 3.6526382602724695`*^9, 
   3.6526398131521053`*^9, 3.7144418456292486`*^9, {3.714442200578047*^9, 
   3.714442201391082*^9}, {3.7144422315654535`*^9, 3.7144422362686615`*^9}, 
   3.714442701554556*^9, {3.7144457585347757`*^9, 3.714445802352808*^9}, {
   3.7144458338712735`*^9, 3.7144458726400576`*^9}, {3.7144459863502827`*^9, 
   3.7144460112934513`*^9}, {3.714446043320925*^9, 3.7144460460710516`*^9}, {
   3.777930691693556*^9, 3.7779307056558247`*^9}, {3.7779307563824*^9, 
   3.777930792566605*^9}, {3.777930889772476*^9, 3.777930924892362*^9}, {
   3.8274298594080815`*^9, 3.827429873173708*^9}, {3.827429924270305*^9, 
   3.82742995870347*^9}, {3.827437371897313*^9, 3.8274373745325418`*^9}, 
   3.8438371335629416`*^9, {3.843837207497984*^9, 3.843837225687915*^9}, {
   3.8910785364138727`*^9, 3.891078538870737*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"ea8ba51c-1361-4f9a-8e6b-d4df79b955fd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(N\\), \\(lc\\)]\\) = \
\\!\\(\\*SubscriptBox[\\(C\\), \\(c\\)]\\) = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "1"}], "2"},
       {"6", 
        RowBox[{"-", "2"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(N\), \(lc\)]\) = \!\(\*SubscriptBox[\(C\), \(c\)]\) = \
", 
   MatrixForm[{{-1, 2}, {6, -2}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.777930792885517*^9, 3.777930926828061*^9, 3.777990927323692*^9, {
   3.827429862862344*^9, 3.8274298741239014`*^9}, 3.8274299592724524`*^9, {
   3.827437367882603*^9, 3.827437374907466*^9}, 3.827515967640305*^9, 
   3.827517702414563*^9, 3.843837072833928*^9, 3.843837135390354*^9, 
   3.8438372265535326`*^9, 3.891078539092929*^9, 3.891079269721633*^9},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"23497294-2362-49d5-bc64-e72ba6b628d1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part ii) Pole Placement", "Chapter",
 CellChangeTimes->{{3.843819103141686*^9, 3.8438191198833704`*^9}, {
  3.843819968061833*^9, 3.8438200354268904`*^9}, {3.8438223998284264`*^9, 
  3.843822420889537*^9}, {3.8438226246073723`*^9, 3.843822625510685*^9}, {
  3.8438242484076247`*^9, 3.84382426085061*^9}, {3.8438348856117787`*^9, 
  3.8438348969697275`*^9}, {3.843837359574947*^9, 3.8438373656947203`*^9}, {
  3.891079789395669*^9, 
  3.891079800723987*^9}},ExpressionUUID->"f0238d07-b7ac-494f-8164-\
63c801ff92d9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "p2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]d", "[", "s", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"s", "-", "p1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"s", "-", "p2"}], ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p1", "\[Rule]", 
        RowBox[{"-", "10"}]}], ",", 
       RowBox[{"p2", "\[Rule]", 
        RowBox[{"-", "10"}]}]}], "}"}]}], "//", "Expand"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\[Alpha](s) = \>\"", ",", 
   RowBox[{"\[Alpha]d", "[", "s", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8274312458339443`*^9, 3.8274312675898933`*^9}, {
  3.8274323442258315`*^9, 3.827432390587178*^9}, {3.89107864131341*^9, 
  3.891078643814795*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"7e6aa983-83af-4acc-852a-d2fe574a7c2b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Alpha](s) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"100", "+", 
    RowBox[{"20", " ", "s"}], "+", 
    SuperscriptBox["s", "2"]}]}],
  SequenceForm["\[Alpha](s) = ", 100 + 20 $CellContext`s + $CellContext`s^2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8274323871153135`*^9, 3.8274323912071652`*^9}, 
   3.843838483207657*^9, 3.891078644792008*^9, 3.89107927141757*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"8577ad02-4a70-47bc-8de0-dfb7275dccb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"Exponent", "[", 
    RowBox[{
     RowBox[{"\[Alpha]d", "[", "s", "]"}], ",", "s"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "[", "s", "]"}], "=", 
  RowBox[{
   SuperscriptBox["s", "n"], "+", 
   RowBox[{"\[Alpha]1", " ", 
    SuperscriptBox["s", 
     RowBox[{"n", "-", 
      RowBox[{"k", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]]}], "+", 
   RowBox[{"\[Alpha]2", " ", 
    SuperscriptBox["s", 
     RowBox[{"n", "-", 
      RowBox[{"k", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", 
      RowBox[{"k", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]]}]}]}]}], "Input",
 CellChangeTimes->{{3.82743242536372*^9, 3.8274324266981688`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"75a93425-0a18-453f-96b1-794cca68b83e"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["s", "2"], "+", 
  RowBox[{"s", " ", "\[Alpha]1"}], "+", "\[Alpha]2"}]], "Output",
 CellChangeTimes->{3.827432439517019*^9, 3.843838532378438*^9, 
  3.891078647260632*^9, 3.8910792728557568`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"2501f8f5-f109-4eae-b9a4-60eec97ab81d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sol\[Alpha]", "=", 
  RowBox[{
   RowBox[{"SolveAlways", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Alpha]", "[", "s", "]"}], "\[Equal]", 
       RowBox[{"\[Alpha]d", "[", "s", "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p1", "\[Rule]", 
         RowBox[{"-", "10"}]}], ",", 
        RowBox[{"p2", "\[Rule]", 
         RowBox[{"-", "10"}]}]}], "}"}]}], ",", 
     RowBox[{"{", "s", "}"}]}], "]"}], "//", 
   "Flatten"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]M", "[", "s", "]"}], "=", 
  RowBox[{
   RowBox[{"(", GridBox[{
      {"\[Alpha]1", "\[Alpha]2"},
      {
       RowBox[{"-", "1"}], "0"}
     }], ")"}], "/.", "sol\[Alpha]"}]}]}], "Input",
 CellChangeTimes->{{3.82743276917021*^9, 3.827432788174057*^9}, {
  3.891078652738079*^9, 3.8910786558447657`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"66c065dc-6857-45c1-ab8e-20435d77d6c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Alpha]1", "\[Rule]", "20"}], ",", 
   RowBox[{"\[Alpha]2", "\[Rule]", "100"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8274327724302397`*^9, 3.827432788829873*^9}, 
   3.84383874744004*^9, 3.8438388876691656`*^9, 3.843839821737286*^9, 
   3.891078658156054*^9, 3.8910792743352127`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"6145bc88-bf73-491c-b736-37823111caf3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8274327724302397`*^9, 3.827432788829873*^9}, 
   3.84383874744004*^9, 3.8438388876691656`*^9, 3.843839821737286*^9, 
   3.891078658156054*^9, 3.891079274339992*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"4e178646-7324-4f9e-99fc-2e7756575701"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Kc", "=", 
   RowBox[{
    RowBox[{"Dhc", ".", 
     RowBox[{"\[Alpha]M", "[", "s", "]"}]}], "-", "Dlc"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Gain Matrix: \!\(\*SubscriptBox[\(K\), \(c\)]\) = \>\"", ",", 
   RowBox[{"Kc", " ", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.827432902445428*^9, 3.827432923112545*^9}, {
  3.89107867172908*^9, 3.891078673030549*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"7cf325a5-3919-47ae-8cf2-95d6cd2e3f2d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Gain Matrix: \\!\\(\\*SubscriptBox[\\(K\\), \\(c\\)]\\) = \
\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"18", "100"},
       {
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Gain Matrix: \!\(\*SubscriptBox[\(K\), \(c\)]\) = ", 
   MatrixForm[{{18, 100}, {-1, -1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.827432805015144*^9, {3.827432903249384*^9, 3.827432923915756*^9}, 
   3.8438389743379507`*^9, 3.8438398238914275`*^9, {3.891078669784658*^9, 
   3.891078673231534*^9}, 3.891079275869795*^9},
 CellLabel->
  "During evaluation of \
In[45]:=",ExpressionUUID->"1dcc7e29-4e7d-45ee-8bf7-ab7666a71cd8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inn", "=", 
   RowBox[{"IdentityMatrix", "[", "n", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8438390047189937`*^9, 3.8438390126310573`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"8aaad236-e7a2-455a-9605-a1ca4905421d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Det", "[", 
  RowBox[{
   RowBox[{"s", " ", "Inn"}], "-", "Ac", "+", 
   RowBox[{"Bc", ".", "Kc"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"Ac", "-", 
   RowBox[{"Bc", ".", "Kc"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.827432814386367*^9, 3.8274328766539264`*^9}, {
  3.8438389893132095`*^9, 3.843838989567067*^9}, {3.891078845600795*^9, 
  3.891078846758116*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"798b9221-7b82-4c54-a06b-bc6c29e67f00"],

Cell[BoxData[
 RowBox[{"100", "+", 
  RowBox[{"20", " ", "s"}], "+", 
  SuperscriptBox["s", "2"]}]], "Output",
 CellChangeTimes->{{3.827432851869338*^9, 3.8274328771251235`*^9}, 
   3.843838976996354*^9, 3.8438390183093777`*^9, {3.84383982882477*^9, 
   3.843839831130478*^9}, 3.891078683442216*^9, 3.891079278463835*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"10ffb014-63af-45d8-b644-c6b3f90e7cb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "10"}], ",", 
   RowBox[{"-", "10"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.827432851869338*^9, 3.8274328771251235`*^9}, 
   3.843838976996354*^9, 3.8438390183093777`*^9, {3.84383982882477*^9, 
   3.843839831130478*^9}, 3.891078683442216*^9, 3.8910792784683027`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"4cf719db-7761-4d02-b0a0-6c20a619f7e3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part iii) Simulation", "Chapter",
 CellChangeTimes->{{3.891079835727425*^9, 
  3.891079855263359*^9}},ExpressionUUID->"48fdc53d-d94c-4b53-9874-\
1e893d2ba3ab"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", "Ac"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "Bc"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "Cc"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K", "=", "Kc"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "[", "t_", "]"}], ":=", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "#"], "[", "t", "]"}], " ", "&"}], ",", 
    RowBox[{"Length", "[", "A", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "t_", "]"}], ":=", 
   RowBox[{"c", ".", 
    RowBox[{"x", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "[", "t_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", "0"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"v", "[", "t", "]"}], "-", 
    RowBox[{"K", ".", 
     RowBox[{"x", "[", "t", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClosedLoopEq", "=", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"A", "-", 
           RowBox[{"b", ".", "K"}]}], ")"}], ".", 
         RowBox[{"x", "[", "t", "]"}]}], "+", 
        RowBox[{"b", " ", ".", " ", 
         RowBox[{"v", "[", "t", "]"}]}]}]}], "//", "Chop"}], "]"}]}], ";", 
   RowBox[{"ColumnForm", "[", "ClosedLoopEq", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.891078940904598*^9, 3.891078972077745*^9}, {
  3.891079021009513*^9, 3.89107902510489*^9}, {3.8910790986893044`*^9, 
  3.891079103674675*^9}, {3.891079306753586*^9, 3.891079325135385*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"77b6bb2e-222d-4820-9559-9c74a5e48dec"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["x", "1"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "20"}], " ", 
        RowBox[{
         SubscriptBox["x", "1"], "[", "t", "]"}]}], "-", 
       RowBox[{"100", " ", 
        RowBox[{
         SubscriptBox["x", "2"], "[", "t", "]"}]}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["x", "2"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  ColumnForm[{Derivative[1][
      Subscript[$CellContext`x, 1]][$CellContext`t] == (-20) 
      Subscript[$CellContext`x, 1][$CellContext`t] - 100 
     Subscript[$CellContext`x, 2][$CellContext`t], Derivative[1][
      Subscript[$CellContext`x, 2]][$CellContext`t] == 
    Subscript[$CellContext`x, 1][$CellContext`t]}],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.891079104446452*^9, {3.891079279619638*^9, 3.891079326986371*^9}, 
   3.8910794360445223`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"47c2e90e-85f2-4ebc-a6fd-53636bcbb908"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
I will only use 2 initial condition since deg[det[D (s)]] = 2 and realization \
is minimal\
\>", "Section",
 CellChangeTimes->{{3.891082219955974*^9, 3.891082254155003*^9}, {
  3.8910822860969763`*^9, 
  3.89108228994732*^9}},ExpressionUUID->"16c384d5-502f-4a3e-9625-\
f8ff14da4e55"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"IC", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CLSol", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ClosedLoopEq", ",", "IC"}], "}"}], "//", "Flatten"}], ",", 
     RowBox[{"x", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.891078940904598*^9, 3.891078972077745*^9}, {
  3.891079021009513*^9, 3.89107902510489*^9}, {3.8910790986893044`*^9, 
  3.891079103674675*^9}, {3.891079204961976*^9, 3.891079210236508*^9}, {
  3.89107952333628*^9, 3.891079524729615*^9}, {3.891082217438593*^9, 
  3.891082218295117*^9}},ExpressionUUID->"89ae072f-6597-418e-b2f5-\
f8c237326af6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], "/.", "CLSol"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"x", "[", "t", "]"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"c", " ", ".", " ", 
         RowBox[{"x", "[", "t", "]"}]}], "/.", "CLSol"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(y\), \(1\)]\)(t)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(y\), \(2\)]\)(t)\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"K", ".", 
          RowBox[{"x", "[", "t", "]"}]}]}], "/.", "CLSol"}], "]"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(u\), \(1\)]\)(t)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(u\), \(2\)]\)(t)\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.891078940904598*^9, 3.891078972077745*^9}, {
  3.891079021009513*^9, 3.89107902510489*^9}, {3.8910790986893044`*^9, 
  3.891079103674675*^9}, {3.891079204961976*^9, 3.891079210236508*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"1180867e-28a9-455a-99c4-e91d6683fcf8"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVV3c4Ft4Xf73Ga4aMjEJWpTQoot57rlHIlpCyCvmiSEJKkZW9JXuFUrJH
yUrRkD3KFjKz9/r5/XWfz3PPPvc+53wO3rDTsSASCAQFSgLh/+eq6p0ELTt7
NKJTL0hNmAUf80OHG0U1wEnWbDNSbA4a/g1bB4kag5O7aYeu5jzMFigE2ore
AY+pwLwS30V4yrmw/7roY5BxoIyWK16FlvzLX8OX3GH+xbM5/8I1MP8t7rXS
+RR+iqjQpr9dB58jQ2tV8T6w6KqWHRq6Cd/rLo1cFg2G1RXTqtdMBJzjvFfr
OlUolFsL7mV5QMDOAU/eBi+Fgqm6QpLIEAHTFly1WugMh5fhEiGebymwGHFP
X3l8NFx4qjk/c4QSz3M8PDcT9BwCnw27V3pS4g9HxmIOPomBhAbjRvduSqym
XXPZxywWvLJLIpa9qLBdstNXTdFE2HPibtuTKmp8tvCP6NN9SSA+sHkph54G
E8wPyxtSJUPRiXYjuss0+KtzVFLgUjK4PKWNN+2jwYZJdoZznanA9kvxkM4A
CaMjon7+WmkQKO3vmLafFgsW9JQIfU2DWQPdCD19Wjz5RYVD7306+D/IFdqo
o8WP/gk1vY/PgMOOWz0T0XTY1OX39mWOTHApHtte/kKHFYlh4tNBmXDkcj8x
aokOM3Fu+/M/yQIvaZtrCRr0eD6psKx0JQt4GhA12wN63HHEZkzb/hU4PkgW
P5VKjxPJXRe8zF5D2VeNzYez9PhpXbDjgd+vIZWCfimfgwHf0r6QVqyTDUfb
VU9myjDgkxb5hHGFN+BIPMHW48aAqwMDP6iL5oBnKq0Q1SoDrpj49YPhVQ60
0lZGrHIw4nLlQ31fj76DKEorgWQJRnyNaEZI48qFfkWXJwJWjNgwj0RHNMyF
2eiILSoPRmxgmsNqFpcLSeVTCQUxjPhKxYYgP18ehHd9LfWqZcS6t1OPPjbJ
g5IHNNN5XYxYZ7/K6d7kPDirOF9cMcmItb/PnD8/lAfeQf/dy91ixFqu0Rfi
hPJ37Uk+CdzDhDWOkDXWzfPh7d9eRgM+Jqze9UfvakY+1JFOj+4TZ8KXpE5Z
7TtSAM/0vCx8lZiw8kinvZN1AYzEa7jjy0xYKfLxg/bsAigjWTQRjJnwRQWR
p6enC6A/9QRLwy0mrDj/3T/ieCFIunKuv7JnwvIpDhHzdoWgGvboQrwLE5bT
4o7XziuEGSebm1lPmDDeqUzPnS+E7rH1Jy3eTBjlWL5lPl0E4UYhtXwBTPi8
EVPxnftF8EI1yDAshAmfYyysaCgugvtHrtocj2DCsh8M646tFkHWbX2B9Sgm
fNaaoilAphjKgqdSV58zYWnurK4J12I4Sum2//gLJixVrzGoUl4MBOz+KnEX
n3ZeGs/aKobzW0F7NXaxpGj8PAlK4KxT5Q7EMGGJdvkNS/cSkLI8wu0SzYRP
eo1TfqkugQfPBmjWd/2fkAxlFKEsBcWYNfuvoUz4+JAUh5diKXRr+e2MBzLh
Y2G9B/54l4L77XRDk2dM+Cj2EpWvK4VMLWUxcU8mLDYjdiKFtgxe/etf1nNj
wocTm6UJl8pAy19vp9+JCYuqu2CTgDJ4rBLs8t2OCYts8qlU/CgDdp3/nu+3
YsLC2Z+1D+x5D0tfv4Z2mDBhQUNbw0ea74GqM+zFph4TFqBju9kd+h6EktJG
w9SZMH9pmY1sy3uQVB5880KBCe/nJLmt6n6A3ouvzzEdZ8I8n99660d/AK2u
2NbHgkyY21E3uLjzAzxznSy8w8mEOVtSkhwNyyF7hD6obZMRswSfr5k1+Qhl
zyh4Sbvvcw/5zzfNlI8wW2YuVVbIiJmm/Fpzhj5CyGOLmzvpjJj+UuewrUUF
yB3rqdD2YsTUNA6kcetKeNv7g+0yYsRjKk+YFzIrIeKUoraIOCP+FhS4b2u4
Eto9lDlf8zLiOv/WiGcnqsC//9qRlhUGHLD3X1r8qyp4S2vF3vCGAbMLCtXW
JlRD85xzzV96BiwqF0TF4fMJaldc9ImpdHjfnwja2PRPQAyVOyruT4dpvWMZ
+T99gmt2l6rPOtDhifpM9iOEWqCNDFxYlqPD77RqhMmutXCYN1RYfIAWnzVd
UbS48xneH9jHbMBFi1WemHkX6dXB2Lrbx79uNFgipPpiimMd3Hdzx+7mNHh/
0kHaoPA66A5nOMOhSoNnKwb9zX/Wge8P0VIpLhocvW0WynaxHko6TRmt8qnx
sNuNuLtnvkLCxT17Kf5SYfdHN/PE2b/DFZPrG1d0KXHJA4vel80/YUQ7s+ra
ZQLOQDadPPM/Yb/TnjP2sgQcTXm3OWRvIzx5rOMZe5CAnYIefX5wuRH+uUWy
3xzYAamUiLfq7Y3wWKTMtHv/DlwbHqhwtW2C9mC7YrfELfjNwBwiaN8MruSt
UfiyDjr/WBmN3JuhX0dyyyJ2Hb41sfs9D22GcjfOiYo76/A+iseTMa8ZRn3C
/Om41iGWX9R5ea4ZDgdylVHeXgNDSbLJt3stcP6YrOMLgVX4ZWhzwsG5FX4f
qtEzzFkC/yEl2+c+rVDLmtFzK2AJZK2FX5VHtULmRbaCFKsliH/QK0gqbIVl
Py6uWKElMI3R5IyfbYUrCiUn4+MW4W+75Nbn/9rgtFB8R3vEAixpbX7jvt4O
DvMGNa7pc5DR1UUCm3aoujQeN+EzB3qmRYrmru3QLRHZ7vnfHJTa3anIiWmH
pRat+VMn5uBR8ECeQns7rK1leT4onwXKH7UxtzU6QEteJ/HUxxlgVQqyrMad
YGRGS6XqPgWKr8rhqHYnOFBN9/y5NAUuDFNcUWadELlcmdXKMQUDjZe+Wz3t
hNbipITiN5OQa0B7kqW2E959ehj0pG8CtKw914yVuoAmvftdnfY4hAY9CNxU
/wUC6geK3BxHoXYmy8LS+Bds02+oS6uMwqp2F2q68wvMr1/1P8c3Cqac0nNp
Ib+AUknZVPDrCJxMWryi2vwLJsdqUo0FR6Ap144/Vvc3JGd4Jpwb+gMsbRb5
0te6IfuJ/4PeyEHA03ITujbdkLncYdzoMAj2NHyCDg+7QWD0pP+W1iA0n+0I
exPXDU0DVOpMewYhPOHi3YM93aCo208z5z8AHLcOnWQw6oG2jkSWTb5+4Fkf
e9tn3At7yGk/S592wyW2zyMbd3pB+Pt/rDfVusH1WMoB7ie9EEbB3GPP2Q3d
xleDLif1gtQ+lheF2b8h/tNX2/r+Xoi2D9j4/vsX8AW9Pppv2gfJefIFhZe6
QEjA9pX3jX5YD3j+U+92OwT2HUwJutsPdwXz0ckL7bAc3xkT5d4P4qMaCloH
2qGeW+HZy8R++Nm6/8qNn21gy8Zz6/PvfhC9YbZSI9kG1yjNw58eGYDzA9r8
3Ayt8HKZVasmZQAUVQV3yONN8Lt9SvXiqwE4Tgwt5PvaBHuK6pS+5Q5AMnH5
qMyrJnC55wYtlQNwTYz4m9u6CS7Njh0f6h0AXe3I/p2e3X83XslE5BmEP416
5gcpf8LZ3tvf5cIHYTKkQag4/hvkHHHgsIodhHlvalds8Q2EnZxMglMHoVVv
iUbm+DdgYX6y8Dt/EGpM6fzuVn+FcRzK69g6CM4ekoXjU/UQm55vk8E+BBsU
bTc19OuAZa646Mf+IWASto0yEa0DH/KHnXnhIZBWYp9oWfoCDh2fIuDMEARW
Se/pjfoCqrTtH7quDMEvSvkp69+fYdNmhYHh+RDcnxU+3+5YCw6lG1dOJQ3B
8pvRtUKVWhijIiTrZw7Bfw2jc5N8tdCWQHs6vWQI6mJ+T1z/9gneNnJfJ3cN
wb83v7LPinwCY8nzb+y4/4BZruSSxkQ1VK+7q7XF/YHNrr6et9cqoY3bYdku
7Q8MXDMy0zxQCaNnbyYzZP+BWh1+d6v+CmB0vrAo//4P+FeosWybV4DeAl18
XtcfiLZb1U+8/xEmJsMngzmGQa3niDXhzQfYpPeKEjswDIkH66JKHT8As9h9
+CI8DGIFIc7d5A9w2ko/YktyF+8oIePm9/BkmPecrc4w8Ob40shv7c7V3nR/
lZBhuFHQeaL/VimIbkadHokeBiPhK3LjUqUgw+vb5544DAdfctjp0JSC8dX/
JErfDoMlc6w+ZJTAq3bx36I/huHbPuVRu4liQD+Lj1DRjYBA8LXsKM8isKqs
r694OgLUiRkr8Yv5sCbDInjafwSuq1Hw0jfmg3+h/sNXYSPwJFwvuvJVPmS/
GhWPTB6BjaK1ZxSm+fAvgiriv4oRUKQ1pW9tzANHK2zEvj4CLRw/2GTLc4H6
j2+xH8UoGOnopczE5kK0USPzDu0o7PFcDB15kAslOsY14/t273Uz60PP5sL6
+UeHKs+Mwmc3ioV3d9+BO2vp3H93RyFn8+WHZ35vgTVw51K/yyj8yP48EqHx
FlJplNJ13UehdXHGm5X9LXzaaNeDkFHgLxjeME1+AzSjCx/Y347C4P1mH9mK
bAh8f8KncmwUxit+XBfd8xpe3Mzk4TD9C6bn6+89XMsAW1WummNWf8FAcULz
dl0GIEm//xTt/wJPb1PC16gMGCLalN5z/wsNncY7HyUz4Fjqcb2W5L/wXIw2
zc3xJVQMFIWFDP4F83d+9Jm06RBaLyqTOf4XuD6S5np60uBG7vOBirm/cHEn
0NI+Lw1I7g9O/KMYA8942f4319JAi5/coCY4BmcDyqIsC1Phj1EtLf3NMVj5
+HyO7JQCxRfO5B60GYOTG7vTRjMFnoln6MvcG4M+wRM3to6kwLEt3wwrzzFg
/l6VQOxPBqd4VcW6tLFdfgV3v6olA213yxOv4TFILiKX37udCOIGg8vbFuPA
//NfxNCTWIjfC9sBt8ch4OYBsr5KLNA3xFNz3x8HmSLCnAxbLIzJGbBLeo3D
+/HT7BezXkD60cZTt1LHYW9cxpZZZwzw7JTbNvaNQ5rnVOK88nPwK+NxvD46
DnlX+RtHuJ7D6j2Xh+PT4xCN4rRkx6OhfUzSn3JrHDwl6zWoAqIhtOV1pjTv
BGxW2tqQWqOAJiNmKEl/Au7fT0sXcYyE+6bL48dMJmDRb0agQyUShnl058os
J6CbwS+ihz8SqkOYCW33J+DsgkX52I8IePTA5wBt5ATIhOytmRSLgHk1RwP7
pglQVeFMoV8Og74FzZ9YZRKqVaOSl56FQDBvp5C99iRUlQXNz8mFAFIwfpB0
dRJC1nacAzaCISncVnj7v0k4tmGzFmofDKan/Fw/+E9CnDFXd7VZEPy5UyMq
9WMSXhvJvYszCYDIaJVHFm2TsCTwpqb5YAAoVjQ1R/ZMgmb5fvqwYX9IZ+p/
tDA1CbUmM/kZNv5g+WajJZdpCo7FPujd4+4HY+OnnxzVnIJYxrKQjipfiGEt
bzPUn4LFoD4D7gBfUJZREPM3mQJ659am1iu+8OqZdvuY3RT0yn/9lT3lA9aH
7hzNCJ2Ch3vPZP3g94Fp88xOgZYpGL8j2rgQ6wXz/dwnOa9MQ8Nq8ifHPg8Q
uLlymt9oGj4+fHrpRbEHaI62yRy2mAbvDCkHjhAPeDMVoiB7fxoSjQ89YpXz
AMs1an3jqGm4Wh3uR3zlDr/3zrtltE9DTMPrZiOWJ0Ab3fj0Xe80rL8/Pzj9
7TFIc7/1LR2ZhvDRD+f3+TyGSH6rsG9L07Cyx/DjyW030DjWl/6P4x/YyW2L
X1t6BNUXvn2X0vsHgfp67PbbrjBbn9kExv8gx6h7bKPaFfjUvNuVLf9Bfda3
eUYfV3DVwf2GTv8gn/jK6z2zK5w2KZ5/HP0P7jtn54oeeQBZLqncdR3/QG15
M/vaPWcIzXa9pa8/A+kGas9Jxo5wjeLCj3bjGWA7TlOpLekIovrMp3QtZ0AI
G9gu0jpCOTF9Xev+DHSkqaTgonswdrUh6FLEDDwWp3AeZL0HQCtQSG6cgQv/
VY+++X0X6I0nuMo7ZqDzqC/18aK70FZQ6CbbNwP92iuNmyF3wdpERUl6egbe
P7qe537xLqhek7kdQz0L7CcO3WYpsQfn/BuEcKFZ+IaeT2ap2sH13joJ7UOz
YDt0904rnR3I04pbsBydhWgbvr2+9XeA0Xjla7DELLyOem7orXQHUukCIwLk
ZoGRq+Bipept+GlaJOptMgsx/yRUJW1tQJSZVt0lbhbOTIxFCNJYwZtZj4xn
SbPgW1tDdbzxFki0bOzEpM3C9ne/9aKYWwBRM/ll2bOgFtY6LyV+Cwx4O7k2
PsxCMqJ81nvNEvwPZQy79cyClvRM+fef5sBCJ4CCB2ZhLDlt+kCSOURPvHie
ODwLWbq2qj125pD2NuhS5dQs+Eh2T73Yaw7lkvdzCVuzYLYVbrRz/Sb8A8VH
ngfmgHwm8FUm1Q1wPFjRHnFwDg6K69dodpvBOvHsiXSRORhsKX16Jd8MSF+O
DtWKz4FG84u7TmZmIKDGpkyD5uChcs3I6idT0DEYYvMznoNoi5GXZRImUGzv
nh2cNAcTywU3mSmugf+H2cKraXNAdZn+IW2dIZjQmFUIZ84BcaRt/VGQIdDG
yzW/z5mDfIXDVm28hmBYR1wZ/TgHBtz3rATRVdg+4C0PPXNwPGLe0TJGH1qs
llTpB+agRmpTKt1CHzILLK60/5mDB/cIkhqS+qClctHKZnJXX9uQaXcng1RH
UvDz9Tmo3x77uMSkBxe++/2a4ZoHgXwXH0KCLvBwrg+93z8Pjkc+3Yqx14V/
ptZT3gLzQB4dPR2iqAvRy5d2eA/Pg3CkjV/09GUYO8gooiw9DytuCr+XFS5D
oEuwffKVedhrv8GqS6EDbSIRJO3weUhtO1zc66AJKoe4zt6OngfpTcEdjSOa
UHE4wcovdh4mV8zP2AxowKujmV+rU+fhm9vG+UQtDXh86kOARME8jMqzPPl0
Vh0Ok/8ws7fNA/FR9ot8UVVIQFb4ZNcuPukayPv3EuzF0/ZqPfPg8Oc0NVfW
JdiSX2n2Gp6HSzlCcV+OXoIWZYbIpcV5YI3v6e6UUYFHupJcnRwLoLzPur7Y
TgnmrpQqL3AvwMO3sqq1Z5XAUp/8gJlvAeZ+/UjUJiqBtqHSbyXRBVC/Nvlt
NPoiiJpeiy+VWgDnV+TVrs8XoMnGUyBWfwF6Cklu/2QUQdiz9bDRiwVwN9xa
WL0nBwb5lKcsExZguIOslq8qB4GDkjJ2KQugdUD4RZ2QHCxBpIrHqwXYWPbn
pmzH8GVT1/pl2QLoWJjOZZ3D8J9TR/b0rwWwbj1fyyaBIPElTeFy7wKwUDGz
Xp4iQ0ubVPnO4ALwgmOgRCYZZCWf/2CdWIDKPBWBH3xkYJzVnz6zvgCsMUZn
MMd5yPnv1/HHPItQJmMUN3NAFoZi6KR9+RbheJzXsO+gDOyrl4FQwUV4c8J+
8/VLGXAXjdVMFVuETxnU/YEnZED7j6H9F9lFiKq4cD1R5SwsXu/J23NtF/Ov
J81ESYGMVv/ppF3eekCd+4qJrySUj1FP30hahKLvnkVCRpKAPI69FE1bhOW0
D5vykpKgmP+AI+f1IjRlaZ8KGZAADXb25fKyRVBfu9SoDBJwo0u55HfnIvie
9WCPZjwFw/Z2dondu7zY+3D3278n4RZd9KEb/YsQ1rnWwf7pJNjK/nk+ProI
2ZbnCD9dT+7uK24uq0uLsCcanyztPgEBpvkynOxLYPxD4VXFJ3HYs9Y192vf
EtwQ9eVV8BSH0LCdVwm8S8D9RMRPR0EcomvUeER2efn38UJXps/HIFn477qk
xK5+60Rh88+jUDjGW66ttQSCll0MgetHoNfeGwUFLsGICevJgWxRIFRVHUgN
XQIBziW7ICdREGbe3CyOXIKGnLshJXKiYP3W4cNA/BJ02Fgmuv0SgdVxk7On
3y7BqFak7rs9IrD3pqxEd8MSUPEusr0OFgKp/Puss81LoMqg5BRvKgRXKfJm
qTqWQDj/dc66hBAkJx16d7xvCeqVry4tdwmCeA/7saf/lqAvSUm4/YggKF+Z
ETnCvAyvhOgMDPsEwCZdjBqxLYN3X8pEXLEABC9YDOvsWwafEf5U2RABaA/r
SX3Evww6W+6tAXICcOPnV/6mE8twsjCarU6XH9yU0rmdtZZB2kWjwpzrAOTL
XGX6HLYMeU7h/z5zcoPwvH98ZNQy7HvrFe7SzwVRr8uPmr9YBqqxSc30LC5w
4RW4RJmyDCz9S343znMB2hr1kctdBouiDXnD//bB9ypHQsXPZSB8feRi3sUB
5x9khAS1LIN6x02vE1kckHOqi8+oYxkkqiR8zV04IDz1HHmzdxkEqdu2aXk4
wMCL6Co7vQwyOtIRQjfYYVgpdKGYYQV4prlk+qjYQI9Q89SHeQUk7pvJD/7e
C3WlC6x6bCvw+2K1M87bC6+P6J9c4lmB4ZS9i8wme8Gege+2pNgKPPAQYO2u
YIWtn9mj75RXoLTU+++jYBbg1Kv7leW9Ak8TH/1X3MIIF8+nYwu/FXASmXh2
LpIRnAU9Mg8GrYBDUrq1kh4jdP2TvR8buQLzf9V9/nUzQJxvDktg2gpUHQ59
rj9NDwJlUUp21SugScsdmXyIDrSSHHKOfl4B2u30APo5WvDw1uQYq1+BAet8
14n3tDCkTffHtGkFvK0cPGm1aOHlxKPHOv0rQHHYdn/aExKI7TcvOrO1AkpG
9pc9FqjBkCi3f56wCqIcExW/P1FDwNgBzxyqVXhFtpKIi6SGqcJOrUOMq3Ai
Kfy+ujQ1vFNXneLiXYXkLi8VIw8qOP1EQmjz7CoIMNBYWRyiBBgihNU4roJ/
q8MTrmICsDyZ52tyWQWh1IwPhcEEGOIdftP7aBUCl592vL1FAK8rdfWrXqug
6EwSKuAhwLf6IMKJqFVI9N0ZGaLbQXrveOzjilbBufnqi5mWTXRYjXE7q2wV
qFJ5cmeDN9Ha2FZA8cdVeJxbYRiiuoniBQczmz+vgutERmTylw00GJXZT+pY
BQK9lNnKp3Vk++i0puPyKgjP3nS4+XsVIW7RXo/1VYj1YmjOT1pFzMX7bEK2
V0Gwwq400GIV5c+s+7ymWQNGNrMz3fMraOVGdcUA5xp8Hgu4V8W2gp6qaBxX
l14DosUh45jbS+gFpxWTqMsa4LpfEvQP5lHpfi3Vfw/XIJPMs4W15lGX4Fm/
4idrQOJucm0+NI+4TtBSK/mugZbCserNzjkUrZS1eSt6De5ciGmwOj+HIl3G
Jl8VrsGF9QavNfZZVPi46YhD6Rp4B7+4829oBrV6ld6SLV8De06qSp/4GbQ3
7Nmfb5/WoMIFez5jnUFhrw53T7aswaGLsnKviP9Q8G+rb+Jza7B/XbNFmDCF
cga0aJcX1yDm8ZTmxZpJ1DB69mLF6hq0s7uQ/3lNIsYF2hoNwjr0PT9w8SfD
JApgeFVmx7wOU/W2LKX8E+jZ+fGsPPF1sL9ne0nXZAw9TfzP94z1OigWPRop
lxpB8tcspzTurIPT9fDOCcoRRMl1U9vKYR3WTVa4w5uHkVfYdd4413VQPzLi
oXRnGPl4ab4jBKzDlnudm9jbP8jP+kzn9+x1kOHqLGiAIXTpkMT5kXfr8EiO
aEjNPoToh4+nbBesg85/1T4vxwaRv9Fhm1Pl66Bm5DrDGzGIArV4d6J/rAPX
PXXj+qkBFCpFcejG9DqMuhhaF5n3I62FrYCHc+vgIjLgeoO7H7Hmrs9GLq2D
K7unY+3PPhR+ZPF93dY63GPg40k+14ci9v/VEN+zAU+io2a8DvSiaGKD0+rx
DcibWvzmSuhGCT9jvgTbb0CpV8Dyw7OdaH8Zpoxy3AD6VL6eAopOFL/LneNc
NmDD1OvU7e8dKM7lbFmm+wYIl/I8MTHtQC8Eu7KrQjfgu0vJ1MHQdhTltC9s
PncD/uV0qHLRtCF2s8qG1cINOOatNv+7oxVFqt6i3yndgN6GgSuMWa0oQqDE
k6F6A9Zfl2QWq7aisG96TsLNG9D8OOoTbUwLCuKLvqY3twH63uOtnQrNiJEO
xVxf2oAfLT+c9vA2o8CFkbYbaxuQMf9S8eV8EwqoP6NhR7EJ9B2ix2dTm5Cf
Qzt+xroJE2b9LcOkJuT9hV30/alNiPXkuXPscwNyuxMxe8BhE0Q9WvcSsr+i
SzWnevvub0KGaLXNHYeviIuz6WvSg014qs6QqS/7FRV+ZEw76LEJ7PheRNT3
ejTB6HNFJHQTSAm1E7ELdcgg2+X9sZxNiEnaPt5n8AWJ7nBmTudtwpfy6ZeO
h76gRZ2iiJyiTSCMKdo5LX9GIetztic/bsKH9h5iWdRn9EXFhv/0j00YoAu6
K/KrFp0eM/I6N7EJTwoqApYcPiHi+U37zelNqHRdUx1T+oSaQmKNPs5tghvV
DW/ZA5+QjXSnFKxtQsqP27fX62tQqo/WuDztFnAcvaTXKlyDWEQUNC6JboHc
zsgrhekqNGl2mOvqjS0QzBobLnD+iAxtu4/aWG5B3f0kK8ZTH1G9UzC4WW/B
aK6tBsNkOXoZsGiZ4rAF5wX1r62YliOToqqi8adbQNVRK22p+wG10l697Jq2
BUsvv40EGpQheTbGW4GZW7AmZ1FcyluGcg9UuiZmb4HYPpUrzv2lKEhCJLWm
YAtq+de4sqxKkdL1uVn62i0ID758v8ijBH145xccN7wFLjRltrcbipDY+/Op
b8d29Y+Zq0u+KEIxtTNFlVNb8EEvwMrFogjd/3Wl98/iFkjfNvzv4U4hOkEp
eOwY9TYoeunqyMsUojS991/LRbbh7EZA4YuafBSwNUHVZ7kNV45C2LJQLlK+
G1n/2nobimfr5Ut23iGqEXKg851tcKq8fE+o9B16/COUjdVpG/rCr77rEXuH
7OOkBBW9t8Hv3D3Zt/tykJ7MU3idtg3U/UqdcUxvENvbo5TOmdtw+MWR6dGf
2ahJoP2LQvb27p5JV14Rmo1UaA9r9OZvw8OBpePMnNnofGfDdZaabXC+Vs+y
59BrJHif29VpYBtyBruYlcyyUP9YDVlheBu69FBloVgWir9uS8Eytg3zy318
LxYzEYdi5bNXM7v5mep8qfHLRLRsFs97trdBxd4n1rMsA/3LzS2UP7ADL3WU
H9Eff4neTynN7DHcgZEnVy9mWKQiqeB4/3qjHTgVYOR5ipyK8k/MiTw12wGF
x2UBnByp6JVD7PUlqx3g3fpJNfk5BcWsTn3tdt6BJp+vtVlHU5ATVXh6VtQO
3D6mENBEk4zmX47CjRc74H1uueZcXRK6o3SumzdhB7zYalztPZKQhf8wa0j6
DigWtmekrSQiXRbpJ/cLdkBT/PORvZMJSHJ/z1X55h34l/4shXs6DuV8PLm0
0bYDfc3jvM3v4pCYiXdoUdcullJiYL0XhwRTj9cdHtiVLzP+I7IRi/Ye9jjN
PLMD0ty/8rxYY9EqdwTpDg0Bv/lTESygF4M6RM4OyQoT8OsBm8f80lFouNlW
AYsScKmqk3gnVRSad0tJv3CYgIWUDShoWiMRcwf9La1jBGzK5vvgk30kUvbp
nbQ4TcDV9T8MovMi0PvRp0uhigSsNDkkd1cpHNWHl+hFXyTgW8y1l+n3h6MO
NFUSp0zAbbfUiMxzYWgh+oprhhoBn8hxntOLD0PHlA7vfNAlYILxOfKnlVCU
lNlA+9ecgO8b81qQn4agnMtE6ylLAn7mckfqj3QIKt+R+j5nRcDvq6QF0b9g
1KWfHLRpS8A3fjhV0xsFo7209/buvU/Af/57Y/VJPgh5WXHtJ3sT8El/wddt
xwKQ1ZGbJyJeEjBXabKrn60v4qOPGLufScBeSWkr1md9UetETYrBKwLOyzza
lkPli9AbQXa+twQc0y1WoZfog9hODK1mFe7my+fVsdzujSpOm9VUfCLgPceI
+Ut6XsiRI+xhymcCVjYwDZo57IWOLFed9qrblb950lp7wxNFlghkqnwn4KCT
+3JUUjzRf7IDAW0tu/W2ek67OPcUsWOTKxODu/4uCly5/dIDfRMI2dPwh4D5
w3vXHrt5oCcUlXXvRgj455HmkokrHmiihk/2/vhuPw3UqBtIHqjyQh8fYY6A
JRzFQtPt3JG1qtEYB4EC253zNS9LeIyq9a49lOOjwJwnCnhL/F3Rl3COejUB
Cvywlv73tLIr+vGzkd1AkAIrtmo2FZNcUddFxZw7ohT4uFX7s2WfB2hWSnww
7jgF/vhe8tBMgAvi27dzcRlR4Imrqafbcp2Q8OWyCAo5CpxNfOzI4uKExELu
DTAqUOBamq3GXnBCZ0hjD4SUKLChd1+GaPN9pLbS9EZLkwLf4KawU1t3RK6d
qXuzTSjwZoAOfLa4h9zZjEyKzSgw0+sE5HzmHvLR3Pem+iYF9ii8G/SS+h4K
qwu40HWLAk/Nvx29m+mAskocXajtKfDJVmXBl7N3Ucfzi30m7hT4Pkt0pE6M
PZI0mHjFnkKB10c2JE1v2aKB+iSNrVQKLCPdPHVfxBYFylxZGEmnwKLTRIb9
wzZolKfqfEnWbj1mOdeZbtqg2N6oxqu5FDi/TXb+vaU1It6UW0qspMDPB48c
CPeyQu9al1/4VlPgyLukKqtLVui64htk/2k3n5YDuiUsVqhYZN8zuToKvId+
SbM88Rb6b2yKZ/gnBdZQUY+2qLJETbdj8JE+ClzM8NLoDI8FcutTH2EdoMBm
+czsAX/NkZgmpf/6IAV2Eiv4YFBkjrxO3mn9PkKBB4LT+67pmCPpBQXLO9MU
uOnwqXsU4TdRostMQMEmBY5Pnuv4eugGUh1PPxm/TYEXjMaTEzfN0OpVw3Yv
AhEXTXFfn2w2QzrnPvPpURGx62ORjCk3M0S9HZu3ykDE3PdGnwV3myJbz4ud
ZF4iDsb8e5MMTdCqf/Pf/QeIWPnjgM9rdhPkHX59dYOPiM+oMATHNxqjxBQH
7veCRIxC4i6fVjZGTZWJ16TEiPjmXX62/XJGSHJzuf+4zC52XoNWlWuoivLp
LNM5Io594OHLzHQNqTEwUUyfJ+JE7R/Dn5sMkTmPkGA2JuI3T18PJF81RNFn
Nc0PKRNxxtizXua7V9G6Y+YYvz4Rs35umGwu1kc+jyTWtg2I+KygZ8g7D33E
5vWRrs+QiGd0N5RJ6vroWESrWLwxEXucO70lPKKHjPN2bLksifgTY701N68e
qp7Wn2O5T8Ttlc6Gowm6SGNpiGLWiYjznQ0NLex10e/N23sbXYhYj5pgb6yg
i+YZvCSDHhFxakpET8XEZSQslnufzou429Oe92fhMnpmSbtOEUHEb2+tBLDs
aCOLrwcS6aKIeDjaQ52iQxvJH5OUZ31OxOcuXC3weKuNNuaM/AXiiPgq/5zN
KWNtdMetgAfSiLjtjveNR5+10JVI43OPCog4UP/fRR4FTSSxcq/fs4iIC09o
cD/e1EB7DP08A0qIWItfccGqWAPV8xd+j/1AxLKK8x9bj2qg89l018s+EfHQ
S/2crf3qSLCm8NFyKxF/qb+4kcqlinaEvwlstxMxPSetkvPvS6jHt7+WuouI
U1xNYlviL6FodXomjp7devk16fMJXUJ0v0wSJIeJeL3ygzi9lAqanaGvsF8k
4oSA4guS95XQxwNmOxPslFg1mSz63UAR4aK7G42clLjnhJWrx3FFVKv2dKWQ
ixLfouG6/ZZKEf14mDbzeD8lTk9c95XKV0A9v0b69wpT4upYg/W7LApoM8q6
SlaSEkf4UW9L/ZJD7uIPy/nPUOLACrM5pwI5RPU5oJRKmhJnrd7wXg2SQ4yL
b3J/ylJilUe6IVUKcmi/zkzyDXlKLFG9IGaej9G5PY4e/tqU2NzzInFBGlDF
Sy83u8uUuD8saStjESF5ctQD3SuU2O21vGxfHkKXbIvv8l2lxEHrls4d4ggZ
fls1yzelxOschyn+HSUjVx83+d92lJhONlCnDJ9DZds+lGLBlJhXumeq6oc0
Cp47GCEdSolPDqvRp0RJoxvD5YIXwimxkUDVJV4TaUT/bV7ONJoSt9X8VO5d
kELXo4zdoxMpcbRuEilBUAptH5XaIr6jxCydsm7bYadRC19zIEseJVauEu9+
bnYaZbLa7ucroMTFA0sxoadOI62VlHMyJZQ4po76dHKLJEqpYXK1q6TEQuLC
Y9Lckkjx6shydyMl/qt3TVml9BTiUnP3GW+mxPRFKWldQafQFOLlXGmlxA8v
fTSuu3kKRQlrn9nbRYnP8Dou1rCcQqMz5feUByixve5AgoTdSeTnEzlbOEuJ
xVQtm/8+PI5+FihMBLFSYUofr/LNC2LoKblwJIyNCse7sl9fpxNDUnXCg1Ec
VLi0RP7BrZ9HUOJv6q4Ebir8/SQ77zODI+g2Rf3ntwep8CO+gM2hu4cRo6Za
SsOpXfy3XmqnVBRVdZXHN0tS4SE+fPWHpyhyvCEe036GCo9d6VOm0RRFPff3
hPTKUOGGmpCQqlERlB3f9GhajgofjPnyXoNXBF2a0DVg0qHC1ie9njXHCKHt
e58vs+pS4fdmNm421kIof+uMJoceFc4KfwAO54UQD+u+iwcMqbDZAv3RL4OC
aFz6l6T4DSpskEuR7HtKED3zNmJWd6DC4/uA4u6IAPosYPklMJwKd6ja8fw+
fwAJ9Ddz34nctef/DZds70euCeTbmtG7/iIvh29X7UcneTjY98ZS4VW6meLv
F/ejeLZas+cpVHjkgSqNqT4vcqQR3ErJpcLedrEf7QO5UWNtkJZnPhVWNG2J
ntXlRmKea2nmhVRYYP/ZuN8HuNHATtOlQ6VUWHopUGQ6lwuprT2JeVO5G8+x
65ixZx8SnuqVLPlJhX/lhQZLXORET16r+MY0UWEv3Zc8Vzg40W+rot8PWqiw
es3f5sFhDhQ6EuhxvoMKk3eWqmW8OdBm37nG6l4qHLQtnfXnGztqa35h/WOK
Cs/v1Qnit2ZDXiVXUgbpqfG41MiHA6ss6GSz6rNJRmqs/GTFUraZBXVPyNkt
7aHG3UWJfxNesyAJvuNkOjZqrDed/Z+MMQvq96L5dZKXGq8zeA56hTEjWZ0S
Fvej1Nj0Qz6HjB4TGrV5u+InTo3vsNznU2dlQmHeaX0RJ6jxkJxZy78fjGis
NORNpiQ1dpUpOdd9gRFF8VspN56jxpSPrrIbIAY0O8XlzqdGjYfVnXsHVehQ
PA3zrcMa1FjxVmdMExMdUhKg1pDQosYkI7MdtRZalHh5jveiLjVGvfMN/67T
ItX3X0tuX9+1d4rxbocLCWX4us6U21JjExGuxjPfqdF1wR7ja0HU+HHeh/yI
DiLKsW9IkA+hxk2xb846vSUiisqKniNh1HiK+XhBkBcRZVxLMVyNpMa9CUPe
1ySJaDbSUi8qnhorKO9NdYigQF6kOfXGbGos1BlQFGxEQG+mqMkK36jxzfeN
YZsSm+Rt2ZWHYj+oMb93W/X29AZZ22/sPetPaux0a/239asN8rLI97MDzdQ4
4N6reveDG2RsEnra7Rc1rsmKDEvjXCe3NfMcKxmjxrq+Sb9q2VfJG8UneI+S
aPBpDl95J9NF8vH45c+0dDQ4oD3qUMORRbKpx0f7UXoa/FNXusNvYYFcq6r6
JWUPDf4UIhF6+tkCOXDA8i4XJw02X6Fz1iyeJ++nT6yjFqHBT4POs8SJzJE1
Zswd/ojS4AlZ52CNpVmye9vRA9WHabBgpmLHrc+z5OHEModHx2gwofx5zXfL
WfIbyfYDC5I0eDSHvD//+gz5vBGj44A8Db7z2mxwb8oU+Y58K1+FIg0+3H+c
RVJ9ipx8KPZr3MVdf2EHW/jWJ8lU84f49S/RYBY7Z+arepPkHz4K3xq0aXAs
04idAdcE+Xquq8AHUxps21VX97TmLzk4Su57zI1d+b9Th68//EuucqV1cjKn
wTr3pA9QnPlLFr4Q/f2UFQ0uoCJXvn09Sp76leeUZUeD/9DTj4cljZAfUY7/
iHpMg3fSs1u93/0hbyvIMsS70+Cbq0ESR+3/kD28AlRSn9JgEa13ElWn/pB9
qI9/yfGhwXJM7zjLSobIIaR7lXXBNNjpY+rt0Z+D5L3KtVsNoTQ487RbB+3z
QXLkM47zbeE02CE3eoDHdJAcQ1daOhBNg92KfLqYlgbIqQxbeWuJNBiWDPVP
iA2QhdU0ZneSd+stcC0yYaGfnBmYdJwmjQYfNH1c/iGyn/yGST57byYNzl1D
bVE9feRiZt/0o+9ocHBM1sHqp73ks1pdQ6fyaPAPTsS7frKX/CH0yMGzBTS4
L0Fbf+9gD7mK9UeCYgkN5q6bjx642EP+ysb63KiSBt/zPnB68XA3WU33RvvN
6t38VdPkDo3+Jv+MLGCz/kSD11LvHvuY/pvcwqEX6lRHg/dNJ+jQC/0m9+yL
8wtppMF7+BM1poR+kWd5RR5V9+/Gv36eulGqk8wpLGMmQiDh5+GLtswprWT8
wnuFlkjCljx/aw3vtJL/29MSNEVJwizztQlL51rJ5avW7wtIJPwsVL6Fu6uF
fKMhnk2emYRd/S9c3M/eQs5xInwx5iNhPQdrQ7q4JnLXpNp1eQESFl1mrVa7
3USmMHsxLyJIwj++pmf1QxNZV1WCf1qEhL2quJb+fm8kr/ObuzwUJ+HrkV90
3tr8JF/8WicWc56EicKmlrRfv5PtEXv1Q0TCKULc2k+cv5NfFJjqm2ASnqjJ
IkeJfidPJax5iiqScEu/6v5En2/kcIejvYWqJJwUkTIjpPGV3McbEtJsSMIS
f/z/7ax/ITvf0Vukf0DCPIJX1Ne+15D3S5nXiz4k4bzhp1vHfWvIVVt34+Xd
SFjL7FKLmEINmT4oSNHVg4SpnmWMO36sJidm10aO+5GwRmBEo86HKvKXMYkz
9bEk/G3Afda69CPZJhfTDceT8Goq23Cs0kcyi4tG704iCS93/RLQ7yonG5Ks
vaXTSNg8meDkuP2BPC2S0p6RTcInE0qC5Y3ek9lvMjt5l5NwqPr3B8csSshl
YgcupVSQcKVaFOEgUwnZeF6M72MVCVdUhjelFBeTszwuflmsJeFjFIfVlPcU
k88lu3GaN5Dw9NyHvMNNheSBWwETTxpJOD7k4NMnXoVkrxMvKuKaSZic8j7u
hmwh+WdFoWVrOwm/5vd93fC6gHyjd7JYvo+EL/j7SUkn5pNJL9f8jQdI2PGL
v9ascT75jS3JxHWIhO85VRacOZhPXt4QJOWPkvDQqU9XLF7nkeM+nexuGCNh
bXJ4pObdPDIOQO/GJ0g4rDxy/xeZPLI/j6H+wRkS9uA8TWvQmEs+MXTrKHmO
hE/NNdnci88lt726v2OwsNsPSOHitckl88mEZYaukPDBsz3qzEy55E+EpIdv
1khYqDboTUnVO7JV/RvN+g0STt/5qvmf9TsyY+h7oeEtEp4SvO0tue8dOU+/
fmVnh4TfiDurc9blkP8H0GyheA==
          "]]}, Annotation[#, "Charting`Private`Tag$18219#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVV3k41U8Xv9dyr1ASKWRNUqRIGzFjiUKSnSRJkiV+JVlLQnayRWQvKQkJ
4TuDhGSJiGTf931fX+9f85znzHyWM+eZZ46AmZ3WbRoSicRFSyL9f11Wu/da
085e7u8lga6trSnsY35YpF5YA5SlGhYfX57CtZP9VkHCJkBW46ZW09QUnv6s
GGgjfA8Ee+556tMxhbmO/CnaarkPUpuFbGJ+T2FZJ3+JH3GOYHemfL7ojyns
yTF3wFj4McjdN5XWmjOFG3O0f4QteAAx4U+6y2+nsHnbMa+lFk/QBOzvJ73a
5j/Su1IS5wPUry68ifGYwj8rVQe0hYMByy2Z0lsqUzjz0R5NY7pQcG8zfW73
2Sn8KODJx+CFUGDxr4bdSGQKM3w2tJxrCQM3ZGx+VFGn8FGaXZ3FcVFgsNXs
w9WySWyX6PjjinA8SDMKDa4/PInP5vYJe+5LAEX6byjibJOYZC6iYESXCL6z
GrmobE7gH48iEwIXEkFJ4dha9u8JbJRgZzTTkgyqLZomwl0nsNvkwV+FcW9B
rZTw5EjJOC4NDCy6LJwJ0NPPQ3GiYxiN/q1hSs8EfF/XmNd3jeHii4c7f4h+
Akzyv8/Lzo7iazQ3SSn7s8C5MW9h64JRrIvWBPl4s8GCbolztOIoVj0tYbnv
yGdwW+eBKtQbwSeF42apIB/0doh0kR2GMD3lPnXECoMvRb6NbEQfHr70hGUu
DYMO3k1xseQ+XB0UuG+jH4OAznP7dJ/34Ur/3+G+x0uA6gWd2L9X+3DAnsmU
uPQSsG6j2J871IvZBQ+Wl78uBc+5pxQmOHqxsHwQ3V6fb+CHYcd6nVc33tcX
zvAq9RsQPb+3+Y5NN2bwfsXM9+0b8P83+WifTjcerUpjP0IqB78fG78tOtiN
P2mWCcm6lAOTSUvBU75d+KzpktLte9/B+TzmDb89nfjSk5veX/QqQd1XV31f
tX9YMqRUOcmhEshkj4WECvzDBxIEGILCKkHkeuLlqqU2PI16/M3rKoE1pN6q
SG3DUZs3Q9mUq8Co7vz5DVIb7nc3i/3v1A+QTO+zR7+sFXu43co+xv4TVFje
y3pu+QdbBX67zyn5E/jX9yk5K/3BOnEHpeg1fwK5QI7LMfx/8OHivrz2gJ9A
THLW0vxvM65bu1UcQFsDVmuqXgldbsYHXM0rR2ZrgMmhRfkzsk043/l2x5uG
OkASTPTrlmvEb+WsW7hm68B7C8uCfzyNOIr2v4aQPfXg7UEv0x0bDdgxyO27
s3Y9+DTr/N9aUQM+nRT+8XJzPeixM3A/db4BX+vvRi42v8BfM6ullgu/cBsT
S4igfQP4+/A5C8NKDdaaZGW+7tEAGK8P6PaX1eDqX+x+L0MbwKGjd65zBtXg
wkiuZ8zZDeDPuZXdgYI1+BWf8KPFmQbg7Kea43v1JzY6KXuj+kEjiO26RvHC
P/BfI+vj9x/9BlqEpM271grs36ti89LnNyBeXv9MfKrA0lZC6cWRv4H98+ZV
9ucVOM65Q5Ca+xuICo1K+56uwKbRVzjipn+DulKdq07R3/FQ88mN73ebwBGd
c9OnLMvxguZ6NadxM5i/vkt+VKoMv21tpQLrZpBw62tZAlsZ1jP9omTu0gxk
gQRH0GwpLrC7hzKjm4GLV8HizuxS7Bbcna3Y3Ax8nH23Ek6UYtqa8mhbjT+g
wTbTrOxcCWZVCbIohS2gaJGudLivGCulFwPRqy3AZs5m6U16MXZiGt8febMF
0BR33P1lV4y761V/Wnq2AEY6VgmrjSKcZcBwYnd5C1C+zRD/mqcIa1o9WzFR
aQWV3pM2tv99xV41OY1V+q2gZ1ftzQzZr7hAvPeDpGUr0DGarr3M+BXzz0ET
il8rkJNQvvsltQBPu26WfaxuBeOd2ffoO/NxaJBz4Prlv8BqdYnKa5aHy6fe
3bYw+QsWilmcz0rl4eWrrXK/7v0FeT3hFh8oediU48xMSshfMJInpRSd8QWf
SJjXVWv4C2r5eo3d13Pxryw7vlc6beDgwarGhQ+f8e6m2zlnrv0DIDemq/BC
NoYT8qM61v9A7eaW7gPBbGxP4RW87/oPTCmcFrDfysINZ/+8yIj9B96mWFVI
FWbhsNfK/wm0/wNX6dpDOiSz8N47h08wXW8HO7pEPoSaZmJlD1pLEdt2UCzA
7M8rmIkdY7oSLri3g6tP34QI93/Ef36+ZPF43Q5KKlVik+5+xNEnGKbmO9pB
Q+HBT2IuGZhrdfhjp0kH2D3pv9GZ9R6rsn0fWLvXAX7Nzo1+cH6PXcSSeDif
dIAATvZfAwrv8T8TwyDthA6QT2vm8PpPOo779sOmqqsDfD+uqUGlTce8Qe9F
c0w7gZRKfjivXRo+yG+T7m3WBcR3SBy5HJKKAzsFkoL+6wLzs9TkE3dS8WJc
S3SkRxcIb4s+cwOk4ipORd838V3g+POsz7HTKdiGjevO97YuEDCnLOWll4Kv
0ZqHeR7pBqueSY/fHE/Gob1ywRSJbmAlVRu/xZSMy0s5/f3PdgNKCuNm3HAS
Fveofxqm0g1uZ+X5JyQnYdKG9H/Jt7uBjr6CTj5nEn6zyKpZltQNAqsu7qln
S8RtzeNqyundwO2z8X2N4QS860ulSnVWN/hp50rzKD0BOz1wB424G5CXn5gf
O5aAVaeHxXs7ukHsfye/7ZOOx5MjeCcNVw/QQHT1Enfj8NkO25/yYT2gzcZJ
lHFfDM48cn+v5asesD+gv4ixJxoLOTreCE7uARvJbb2uH6LxbpYnc205PeDA
72PXM+Sj8QgM5Xb43QMWb53hPPbgJX6VmmP9lr0XbPnFyiyMROLdM3lfag70
Ak+6ThhTGIl9ZIu2ZoV6AdBRj00MiMT3/3wLB6d6wd12+gN/xCOxGkNzUatu
L3BoW+arcI7A69ZLTEwve8E5jxJjDoFwfL9gTVcioRdce+dOE7kUhofpSIn6
ab1A/8YzSeu6MNz0mkEqNb8X+FNa9bndw/DHek5j2dZe4JS4j/5R5wtscvJ8
hh1nH9BTE0rxzwrFpase6k2xfUDI3O+aD3cQbuK8v2iX0gd0Y4MleLoD8eDZ
W4lMH/rApMRB2aNvAjHzowvzCoV9oPDLpHrKiUCsN7cjLru1D4yYHqFbVg/A
o2NhY8F7+wHZTzbmv1d+eJ3RK/IoTz8Y1N/jSWfhh1mOPgQVQv1AaSriFEnS
D0tZ6odvnOwHIY5KWPynL37Szy1jo9UPKDUqRVdpfDF7R6r/pZB+kGr6fIvy
zAcLr0dKDUT1g0/StXzVOj74HPfzTo/4bb7eMxyjwj7YxPCuZMHHfnDtQfV7
2RpvnN58rE24ph+cjmN24uP2xnJ1eUfodgyAd9NBDSd/PMOWuKoKeQ6Axbu2
9KfNnuKVc7sFpfwHgMaqdAkJPMX+ufqu6S8Gtjv/4xXWA0/xh/TBYxGJA+CL
N6WD3OKBJ8Ppwu+iAaCjzHthj6YHdrCE19lXB4AmezxcjXuM6fue5/mRB4G8
TYxhvcljHHW9nmWLYRBoab84wC/wGOdrmZSN7BsEMXV5FIk0d7x63u0wPjUI
XjyKPrNU4IY9WAtm7v43CDhe5t1Vm3XBrIFbql1Og4Ch2vCQXZELTqaopOp4
DAKfdhFlkrcL/rbWrAdCtuPxP2F3OF0wZXCuiP3jIBitu2gopeKMAwuP++Dh
QTChKZXEkfcIx9xK49prOgQezhjav/vngG3U9peJWQ6BXLbySNOPDljupN9d
JfshYMk0EuH+xAH30lgXPPAYAnZNIYm9Qg5YLFlcrzFxCEh3DInKOzzAqPvL
i5CeIRBEDmxJFrqPQ6uEz6WNDAG64LMJKuv/YbOsl91oZns/c2eaUtN/mOrh
fHySPAyktNvslLz/w5p8srXqgsOghFFj9sKYPe67Xs7AeGsYxJCeaNkE2eG8
C6eyBKyHweTGnMUeFTvse+yt/rkHwyCcJZHQItthsY3nby2fDYOr0HDX60f3
sGOcmlJlyjCoTynJlrK2xQz/Gp949Q+D5WV0ztjWGh8z6FncvD0CRMk/vts3
38Fxe8BmgO0I6IiXORufcgcz1sbRcz4cAQEP5mQk79/Bw/IG7Ce9RoCFW22e
/+47OFW0XuJO8ghY+/hRbOiqBebaKrap79w+37EIEwfNsd9XLgfjwREgOfCz
s7XQHC8/cHIdmRgBsEur3zrEHDcPn/Sn3RgB93RtrsafM8ehje/TznCPgoVJ
r27+sFuY8ja6N0F/FNiZqe4jaZvhh6aLI2I3RsGuu8dDA8TMcD+XzsxXi1Fw
oNgw2YJihktDWEhND0dBlLjF3h1FN7Gbsw8PQ8QoEI36Uj1x+CaeVXcwsP81
CnRMLSc/sJjizrkrdfDSGLj7LqiZQdgYB3O3HLS/OgZMzvw5Xj1wDcspmjgn
GI4B48xvZw68vYYTwmyENu+OgRj6dhdbkWvYVMLPpch/DDhKHFlMPmmE++6V
CZ+uGQN94Yft1W4Z4IioS263m8aAXY+gznNRA6yEfjVEtI+Bcyc2uOTn9XHq
zi63ufExsE+Me//R5/rYImOtMWvnOEjbFw5yc/Tw8IjUE9Er4yAESIgTfLo4
mrW4yUh/HFTU0pw3nNLBF88pHvW/MQ5e0DZWmGEdnO57tXnYbhyw8qSkFJrq
YKvD90Tfho4DV8bUD7feaeMJ87QW/sZxQJ1+f61GVQvPdnGe4NCdAKF3WQ8y
ZVzB/LeWpPiuTwBKpXhomPkVfGWw6ZzI7QnAWR947yvPFZwxHqIo/XACBF6j
JHe90MAWK/T6JpEToM9K7uDtp5dx255Z97fNE2A+uEb2rJsaZoiq9/zUMQEO
HbyszyGnhs9wfnxeMDABxj0qQp6Q1HAEn+WL6oUJwOoYnDbpo4o1xDpTJ/dO
gv+udD3ifXUJl16o/nlabxK0cu2oLG5VwdNVab+2hwFw7SVfME5Wwbzq3s0X
LSaBVyYekrZVwS5asMvIcRKco+fzeUmrgqVu5M0+jpoEeXi0pfaUMn7nlMxZ
+WcSsFecYzf6pIRDP7jc0def2n4yxN7qTsvja+QLNc0mU+BZ40CjTrU8FtZn
kdCxmAKdQZfKU1LlcTFN6qrmwylQIhvnLG4kj4cNa4NUw6fAj13SdQNVEAMG
/lzZ+ilAfLkjk2wJMKPJ6P7iP1NAn6lImk4Y4KbPue7SnVPASL9waKZPDlvd
uKRyZmIK3H/ZpG19Uw6rXTtnG00/DbJ0Mkj5ZrL4UY4ZKezgNEgeiWVocJfB
xh2VklcPT4MRz2/7bBVlsALDsdu7RafBzvK30l47ZDCzydKPYMlpUKHliPhe
SuPkHYHhAfLT4JgEe+NU/jlcZ/pF2PvGNGi/ltjAznIWC7MwXHaK3cbXvh7J
tfMUzph++tY3YRro7Vx95tkuhSUb17aiU6ZBW5jZD8MMKQwip3K+fpgGl7Q9
5LUuS2ED7pb9a0XToGboygWNiJPY//Dbfvf2aaByUufdy1OSePcOfrng7mlQ
sCIQ8oRJEkeNxryM758GK9T7W5U9EjjlY5AqHt/Wa50m9ShEAheffJhF2pgG
VNOalTNTJ/AkUHJ7xjMDFEc1zDmeHMcOAqg5XGAGDL+P9JY8fRyv0pw9nnpo
Bui76LgsTIhjaoVob/mxGVB2INH17g1xzK/OdpEiNwPiRCKq+i4dw1oGvWx+
JjOAwZHksCYjivPsPT4EJ8yAyf+YzvoFHMb+RdO5hikzoGU447CvwWF8g3IT
CaXNgLuhYwnzhw5jhjj5hsLMGfC+9nTZnjJhbFRJszRIzIDRZ6ULaluH8CaP
twJonwHX1wL05gKFcKPlghpj9wx4otgVb24qhNM+39Zt7psBZLH0+lNSQljz
krKl9dgMuCD90nO+/SBOdqAGv1zd9ustZfhT8iC+8NPv79T+WbCuS3BKTQlg
Lo7V3sIDs6CavkDvQpUAnjS1GvfmnwVviIcv3icJ4KhF1S1ukVnAcZjh0j1d
ATwswHzo4plZ8Jr5KKos4ceBTsH2ibqzgEzTYqSrzoebDoVTr4bNglXqFUJT
gxtfOrz/rG3ULLj02UVrbSc3RiKvLf1ezYKSPYNfztdx4XTRtB+lybPgae3W
7ceaXPixRFGA5OdZEKDR1v3nGicWke1jYW+aBc/5bhinB+7Dr+Us4YnWWbDf
TNGPR3cf3gMn7NXbZ0FhZ3A6G+8+vKGw1ODVPwvGdGvNnmZz4MaLTBEL87Og
YJRup1LnXuymc3J/y9454CCgNGKvwY5ndAsuznHOgUcmsx0evOzYQl/WmYV3
DqSz1wPyFBu+aqTSpiI8BwyKvUc0XrBhYdNrcQWn58B63SmzrbY9+Jf1M/5X
+nNAQO9AcM9TViz07LfI9Zg5wBE+kcV9fBc2yKGVsHg9BwpuqPJvDe/EgT0n
z9klzYErZww6n6XsxAsg4tLT9DkQPHKfasO1E1es61i9+ToHsvz36YSxMOO7
jn8+TPydA1dBPiMrByOOf0PJXeyYAwT4QbL5uwM3Np0u3uqZA9pNMpe0X+/A
0idf1rCObvPHiYeVCu/AzNP6E6dW50BfM6G6DBhw5t2/4o+55oGBBIrL86fg
3ugdZ57zzoP5pAfeUI+C91WdA6GC88DvZk+noiAFewi/upJ8dB4wS3cW5BTR
46t9RvYV0vOg/YJIO9s8HZ43bs/edW0eYAddx1VnWnxOs0sqIXYecET3FBn/
JuHiYfoJs4R5MKVSbF6WScJyT8XeCKfMg6YUp1uP/ElYKcd5b+b7eSCVKJ1T
o0DCGuzsi8Vf58HR7jKvg/e2kFnrxfy2lnmwsGegstNoA/Xb29nF/5sHn+QW
Uue5NtCdHVGHzbrmAWgjx0b8W0c20n0vRwbngeizvqB7JuvIMc7daXlhHkD/
4GwbqzUUYJpzjoN9ARR25VBSXq2gXSutM3/3LQBG6kXHNrMVFPpiK/019wJw
FRae9BddQVFl6lyHDi6AJ3ahOVpoGSUKDa2elFwA8/v7sm6MLKHcYe7iq5oL
4N1iiZyvziLqsPeWCwpcAEzrQ2cpznOIVFLCkxy6jXdfoX1FdQ4Jsayv50Us
AK6to/RGPHPI6uP9ou64BVC862H2tW+zaHnkxlmpjwvg1nT4sjL7LNpzS1ry
X+0CkGTdO99RNY1O5zxknW5YAP63fPkFk6aRITl7mu7PAojfuz7yzXkaJSYc
/iTeuQDMC7l4ecSm0bF2djHPyQXQ03vjEN/RKXRRd+rQEZZFYNMq2Ph0chxZ
px6ll2NbBG80vx/fSB9HwXO3+7X2LYKPEZycXBbjqPlFe7Ib3yKQ+qZ4ULJ7
DJnV/eD7dXwRHAqNEMr8N4rcVVI5H2kuAkbddfPoyWGUc85w5/cXi0C0rexr
susAEpr1j4uIXATmfLdVmNUHUOT7YlHzmEVwlu9GUueBAeTEza9Km7StR02i
7CvuR3Ibgz7yWYvgqJDuLnHGfvSzxIGE6haB5U2NUf3sXnTe+W1IUOMi+DPr
+KX/eS/KlGjlvf5nEbyn9eavNelFYckysusdi0Bi4uKfjzt7kYEXjYv0xCII
75UsibHrQf0qoXN5TEvgok1awAPFbqRHKvP0YVkCnWGCOqZ83aiyYI5Vj20J
HEYlTueWutD7I/onFriWgNet0600Vl3InonX9uTRJVBV+jysWq8TbdR9GPx0
cQlc0HrszKLejjj0Kv++814CCcKr1m6vW5Hy+VR4228J2GrxOPbeaUWPBJ+m
CQQtAUUyW36xZCtqnZR++CpiCTAnrkT8+NGCYp9n7g5MWQLGw5e/C2/8Qfxf
I1XsSpfA7UnbeS6nZqSZcD9T9PsSGHnZyXzlUjN66n1l73DVEujO+VczzNWM
eq/u6DP9tQQmmxipqrgJvRl1e6zVtQTcJ48QGcxN6OgB8y+nNpYAXVLTkuzX
RmREI39glrQMdIS7H1iHNqKAYZ5nmXTLwMU1783MnUY0ntuieZh5GTAd056k
29+IPl1WG9/PvQzON56zOeHWgKSeSB5cP7sMAgW1a6e1fyHQS3pR5rAMWgNv
/fV3rkG7n8zy/nJaBtFvn70WOl2Dern7MzrclsFAx9HdJnM/kZduZdWy1zLo
ft4+km73E1VXBZGORy4DpxXbGhe7aqT3ics+9ssyaPurJZPhX4VE1Jk3331d
Bhd16U/4a1ahleGNgDxiGSw/cnSc4qhCcYI9aQ3fl0G91+FGtTeVqCcyrYv6
ZxksWDx1kKqqQDZuUlccFpfBb6dM8dZD35Ecp3DH09Vtvw4GGZ/nyhFL3j7r
kM1lsNOUl41SVo5yplZ93lNWwJGHn4yZTMvRklkp6uZYAefjSoRckr4hz0sa
4pfPrIBkWrtPq2fLUAyH5U5hpxXwa8cgq4sFRgUHNNUmXVeA3D3eN938GLUK
nvXLe7Kd/xu30v0Pof3HGehVnq8AjprbLO+1EYpSebd+J2oFFChuMp9XJVCE
0/BYeu4KmMteVdbUKkK5j38duV+wAm6KdxeV7i1Cv70K7kgXrwDGqrnIr38L
0Z4Xvn3V31aAikFC8plbhehFusi/scYVwMzWeV7N7SsKbrOsPjazAq4d+mBd
+j0fZXZrMizOrwBWTkxieJGPagfPKqPlbT4wEl9qnI+Y5xjKNEirAJZnqQcs
5KEApvSvdiyroFxnrMxcLA/5nh95l31sFXznGKP8l5mLPOPvPj9ltQoOxpSP
LGxkI4VrFuMa91ZBrn3b0OfGbES7/9ZVy/ur4GdGYvjftGzk9cKYO9ZlFTjs
GIrV185GPl5XPpECVsEP7WU60qcs5Gd1quXnh1VQ3SM/qTydiVQPS54f+LQK
7uEEgx9vMhFjv3jS5udVIMtQd2XzWibyvy5iLVG8zTe7q925+iMK1OTeiqpZ
BVn1KieCPmWg0NPkw2YTq2D5V9lwY/R7pDm3EeA6swoSBVP5fhi8R6xZq9MR
C6vgqaxgqSHnexR2ZL6wcmMbb/COjFJcOgo/MKRxbNca8Pkg18CW/g5F0dQ6
LouvgZ2HVFLUOt6i13XRFcH2a0D5J/xLTUtBB75C2kiHNfA8YqLF0ykFxW3P
zrFOa8CO9e0xG9UUFOt09muaxxooE0zv8J5KRjGCrR9KQtdApx9J/atcMop0
3PdiNmsNFMTLKMDpRMR+E9cu527jn36TKFKViCLU7jBuFayB1ft/tO0SE1E4
f/4zptI1oN+6mc+mlYheVOs5CjWsAbdr1TNnHySgIN6oa3oz23l7PSuy5GvE
vEMu2nhhDbgP3h+rH49DgXMDTWYra6CWee9xhXdxKKDqlIYdeR3U7XzvxSwQ
h/zuN0Nf1nWgZaSzfw9XLPKuYBculFgH8UOR1zJFYpD7vfBpnvvrYEBIVOBl
ZiRSLZPo6Hy4Dqp3Mqu8exyJ9nP8+pHgvA6EBm92C1yJRLkEc4rA03Ww6mm+
fmkmAo0y++geCl0HoeeDyzSkI5DBB6dCscx1cHVgKsy0MwwJb3GkTWSvg5af
BYk+uWFoXutLeOaXdfB1eqmLGhCGQlZnbE4Q6yAy5rgt57kwVHHJmk+qZh1I
9fVy3Yl5gaSGr3vJjK4DNanLPnxWoYjm/Lr9+sQ6CDqTRP54IRT9Cnl1nZhZ
Bww7Kl4GCIQi6zMtp8HKNv/DbJ4HuSEo2UdzRIFhA+i8I5OD44PR7kOKGqrC
G+C7W8LdUyGBaOymyH5Dsw1QLvKCrPXXFxnZ/BO1ttgAVTV9F0Nf+6Iqx2Dg
brUBXO6YFV8z80VvAuYtku5vAG/rzs3IiefoxpeSLyOeGyCKK7PRhfE5+s1g
qO2SsgHCHoYUH7jujRTYmO8Epm2A5B07lrOOeKMsHuwS/2EDtIFXRaWLXihI
8lBy2ecN8MB9M1snzAupGM9MM5ZvgBfp788frH+Gij75Bcf2bwA74Ye/nE08
0dHC88kfhzfAI7NfyFDSE0WXT33B4xvg0Lj4izcUT/Twr25H3/x2/Hu6wC3r
KTpOKygmRr8J6I3NF5h2PEUpeoU/ig9tgta0Dt4LMU9QwMYoXafFJiiDRgpj
Yq7o4n8RVe+tNkHbtHfV8pQLohuQDXx0bxN4lZY8Dfnsgh7XhLKxOm4CYUVr
Wp3zLsg+9rSgkvcmMIJV7pw6zkjvnCd4n7IJ2Pou8EfHPkJsH0VpH6VtggJn
pYwsi0foF39zheKHTXBLzF4RSj5ClxhENDpyNkGhud6OkmpHdL6l1nh32SZQ
iwk7Jkh2RIIPOV0cuzeB1BfpoFueDqhruExWsX9bT1rW4es6DijO2Ia8e3gT
ePKc3lck7ID2KmHf9KlNwPHI6VJSzQPEwHb7ZfvmJhDbw6lCx/MATWZl5Srw
bAEjxyKGkPr/UOG4ytQuoy0wVCdotXfyHjodHOdfdX0L3CCp2/en30M5x2cO
ed7cAss2S3JqFvdQ+v1XxguWW4C27uCxf922KHp5/Me/R1ugImCVpafdBjnS
haW+i9wC4rLLDlZTVmj2zSAwi9k+b6r28kCuFbqnIvOP+/UWOL/IUa/pbIVu
+/ezhqRuAeOPd6pk6K2Qzu4zTx5+3gIaf/j7yAfvopMH2g0VGraAicHjsscP
76BM4sTCWtMWeCOMf/fK30FHb3iHfmndAvnKX/kKd91BgsnilSLdW+BJ7pFs
lG6B9og8lWKZ2gIK9WJF9AO30TJnOPUehQT/KV98WGRnjv4cOtsrLUSCWndO
112ov4n6G2wUoTAJOkyXzC6m3kSz7kmpF0RIEPv6ZDO73kQsfxjvaIqRYC4z
H7gpchNd9OkYuy1FgpI2jOZBz01R4aDnQqgSCcZzVDCPfTRBVWH5elHKJDg8
eNNmzNwE/ZEbz4+9SIKLfjl6SQdM0FyUrstbdRLcHFJ6IRx8HYmpiGwV6ZBg
htk0xdzZGCWk1TIMmZPgfqWH0hx2RihTm8Zq3IIEhVaYHaJOGKHirdM/ZyxJ
cB8p9cqnWUPUqp8YtG6zHack56Q4GaI9DA/27HlIgv6xqaHmAQbIy3L/AVlv
Eky4VDebXa2HLI/cOh7+hgQtRTU9mlO0ES9j+PDDNBLciC2yZHLSRr9Hy5IM
0klwz56/C+Hq2kguQ5Cd9yMJdnfY8b1c1EJsx3uX3+WSICVpIfq8hhZCUjfL
0DcSTOYUv2fPfBU57H3hmvSdBNMK/X99H9BERxZLpLwqSdBQxKj4PtZEEfn8
aZd+kmB9gLX8rwea6K50d0BTIwm2VfLOMpZeQezwhu5oDwlGfj1UYBl2GVXz
h+yq7SNBkziDjzpXLqMnZFz5aWA7FlWQa2W+jEbLeKUfjmzfR5itbqKfOsIX
OnlJMyQ4aB5+kclfDVmpXR/eSyJDOWF/gvbNJVSqd81VnpcMPxvHEdLnlFFF
2N4qdX4yVOyZJTbJyqimrp7dQJAMPW4Pxsn+vIBalZUy7wmT4QHdu+5CNy6g
6dPHemLFyfDBYXkns0AlxLtvS3lRjgzbihT7n28oICHtr+FkeTIM1Xf51FOr
gI6GPOhmViTDvEC7yC/xCugUddj5oAoZ1sgYaVfKKyD1pV8ZmlfIMHkphNYh
SB65tCTv+XCDDH1lH0VvnIPIg+36jbybZPgq8DWdIytEPlf2ZZTeIkP/jyKH
MhsBelEZcKH1DhkWp9tZv5YC6F2+gxO9PRmqe1szjpHl0J+Xyp03PMhQyonF
wLBEBp00GE1nTyLDppKPN88SZ1B3VYLGRjIZ1g+ZRa97n0GB53TnBlLJsOhD
x0PpK2fQIFfJ+fx3ZJj9us2es+80etURWW+YRYbGNlpxuSynEc0t+YV4TIa7
rs9n/3KVQp9+L8Y8LyXDBS0/xKkmhYyVMuTsv5FhzHubiEouKZR3aJ+vfCUZ
cjzhjbtadBLdHR7n6q8jw81icW4+8kn0yzYaHukkw92B5NaEBAnk3nl5gLWb
DEteuzmfeiiBjl6h9V/tIUMxVuX+42oSyOvEvd8/B8hQhqd8r/byCXRmTtHi
3gQZKlXbDGvpn0DxTlMBn9fJUGKqO9peUxypjaSeiNskw4OqKfSnGMTRsqFR
sxeJBgZZ0tB/KzmGtGS+8+rR0cC6qagiGaljiH7zVfYyEw3kE+FkSBQSQzbP
lFtkuWmgJvDklRI9ipb9G4YO8NDAbqsWhqLpI8g7zHh5jZcGXnn8NIc2/wiK
T7rPWShIAy9fb1Jsu3AE/cLx104fpYHCNKHiZCsRdHJ9sUv83DbeSmCJ63dh
VELrOb1ThgYqsL1cywsTRupMO8kT52nggdvGVgamwsic66DgB0gDpbP299Wu
H0JRZ6+YH75IAwf79OWfSR9Cqw5pw3z6NLCxdDpr34+DyMdNcmXTgAYWGGQe
zos7iNi8iB2dRjRQ7/DhxkL7g0gs/PfROBMayGqjWrbIeRCZZG/Z7LeggcfC
9VnO/SeISif0Z3Y/pIE7DQKNhyQFkMZCL3nakQYWWm/sGmEWQG3rtnvqnWjg
pfwjC5pD/GiWyetkkBsNrF/4bKz9mh8JHc16uMOLBhruDokW3MWPfC0YVsnh
NJDGCfs00/Oi2z944ndE0sDYWsajGqU8SEHspALrSxqIzpuo57vzoLWZ6/78
sTSw5A7PrmsrB9A9989cIGWbf1Sy0X+VG+lGmMi4faaBbekPlizZuJDk0oOu
Z19oYG3a3LMnrZxol5Hfs4B8GsiVmJJJiedEVXy5P18V0UCpJ+GdFkc50fkP
O4y/fqOBSss57+5d3I8Ey3LdFn/TwD1/pgdiYzjQllA1/2YzDfz7yF63+DYH
an/eVU7fSgPb2fhvXZbkQFGXGXfubaeBcdIshqU1e9GOvzden+yngbsVj32a
puxF01OMyH5+2z+wpLMNZUMEz82tUXZa2D7wV6t9aTeCX/5bq+eghbsumuqG
Ne1G5eqeS7n7aeHgqWr799m7UY1rytTjA7Rw/NiJM39tdqP2vwNde4RoYZbM
ybjPP1nQeqRVifRJWnglbtFNtnwn8jjmWsx3iha61PvZynjvRHTfAwroztDC
94lB/94q70TM8xlZddK0cD/P0PGKamZ0QGsq0UyBFko87vkq3MqEZHY5PPW/
Sgsf9Mxp2VEZEXrj5W6nTQuZF0K5LtTvQAqykc46urQw8G38Dd+XO5CqTd5/
vIa08FUfk5n+kR3IqHr5Zo4pLZz/fuziPi0G5OLjrtBmRwvjRENieAso6Oum
D+3RYFpY71KlqfaHFgXPCISfCaWFw9f3jqm8o0Vm/cWCF8JooVLvSc7vLrSI
sXpW3jSKFuaVF9hAAVpkHGniERVPC60rDkxH3qdBm6KnN2g+0UK2+yk/JIXI
qJG3IXB39nY9Dkftrl0joTRWmwO8n2nh5eZxpvzfJKS5lCRzLp8WdnFX8Ll4
kVBS2U4XO0wLpd5qOjn/3iKUDAcW/9XTwsO/9ULu+GwQ+9U9fEYaaKG+QVF6
GNggxuW4OZZ+00LJ+iGx6yvrRKTQ1VN7Wmlh1Yto21/31onBqeIHF7tpoYC1
Yevxm2uEn0/EdO40Ley0NdBuvLVC1H1WHA1ipYP8uWpdb7oXCE/Z3IEXbHRw
8vhVvZjMBeJ0pVBP5F46OG3pPT/itkDEt9G3vuakg8z7W4diuRYIW3LV948C
dDDDSvi9gtE8wXxFPalWgg6K9Fi8jh2dJUpai+MaTtLBCDXxOoBmCQezY9HN
p+hgDl/MoFzYLNH+cFdIxzk6SEtvWHdZZpb4EPfLbUKeDu4qf+qc+WKGUB3V
MdipRQdN2R7JuV6ZJjYffNdm1aGDQ/sfjtSKTBM5G6eu7NXb1u/L4eZKM01w
se5T5jGig5oqz7PqbKeIkTN/Tx4zo4PS8UGttBcnCV/v6yyX79NB/8keem/e
ceI7v0VFYBgdhGvcMsLawwR/VwPnvYht/TdaDljwDRMur2Vtr0TRQfP//7LH
hogTXHvZ97yig+oVEqNnfYaIOLbymy+T6GCx13W6JjRIOFAEN5Ky6CBP+6Jz
Chwg6suDNJ/l0EGvk1UV1nsGiKPPVlLMc+mg0Kjqq8D+fqJ765fq4YLtej40
b27x6yfUV55EZ2A66EIejo1o7SOExjtO5tfRwT/zJ6zSfHqJJ+8vPY/+RQcR
2C+4fL2XaLP80ubcSAc7RrJMk071EqEDgU/P/6GD5dcW/9sY6CHWO2XqSzvo
4Im8hv5/qj1EU0OMVc04HfS9UM0keaib8MrXTephpId0xfYa1862Eyca1HzH
mOlhV9gFh+Slf8S/UXm7hV30sLE2J+BG/j9CkldcdgcbPXxspxcic/Yf0eVF
+XuCmx4Gm5WNuIA2Qlorf7eHKD2cphwb4zBvJQatPy75HaOHSjy+R4mjrcQL
75TO8OP08MNL12t/Z1qI4YKQjLST2/kC0bAHT1uISD7Li/Uy9PBoepbW8bd/
iOnx/R686vRQ7tJl/nL6ZiKOwnJHRIMeMiaIO//43USo8NNrSGrSw0GDd9+U
kpuIeO0ZbmUdemi7bH7sNWwi1Ap/5Nsab+MN0eg0e/4m3j53mSq2oYeTng0T
ZjyNhLFgu8m1IHqoN5Mu9u9KPZFpX/taIYQept/9rfmAqZ4gY9R+5AU9FCCp
xt2qrCPeXksyWo6gh8y+vOnqsI6YjrDQi4yjh8q0t1/B07WEF3Xmcv0HegjS
7vz7JPmTyBinl1WspoeabxRbPthWEpvSS65Ha+jhm8HdAxelKomrfsOFrHX0
8JCyKJfcWgWxeOjn2e4GeshtqrJ6wr+CgDdCpdz/0kPLrQNhZzO+b98fl1j+
MD30G5PlryeVE2t5x7lFqRRI46KXxzleQojHLX5n2EGBcT154qmohDB9StgP
MlLg+Zn6G89elBDlamoVSbso8CKD2Dg4W0IEdlv8t5+DAveJ7r92iw0TBxjj
K+kPUaCrYcubKadiQmPK/H6fMAW+E/74MVakmPBoEuUpFaHAbMV54ZnWIqI/
/ut9NzEKNLT9YxstU0RknGzmmTtJgZuPR9VbGQqJ89eZHboVKDAp9qomz7d8
4p7Cb16kRIFRFuftTN3zicTDr37EKlPgnafRW+pn8wm62cN8+qoUmPA21UEw
K4+o8VGsrr1KgeafmLNQ2hfCOMuFv8iUApULuW2K8z4TwZHyP6PNtv0/406O
cv1MlLgwODqaU2BsbOAlLvnPhNCFqJ8SlhR4q7hsnKcuhxj/m+34zm7bf/Fj
L47pbMKNdqQm8jEF3v1yaqVGO4vYVJRmivOgwAivM4LCfFnEU6+AS8meFHgB
PXoc9OcT4UMvXpHpQ4GJttHvi5k+ESHUB7gymAJlujn6an0/Ensulm/UhlLg
8dOKD5dEPxIRvnvPN4VRoGqKw9SnXxlE9I6Cgu4oCrQtG4yt5c0gkpk2slfi
KXA3O0NzUe17QkhdY3orkQI3BK6nGbu/J9ICE8QpKRRIKOffDBR/T2TsVPiw
J40Crza7BEdHphN5LM9TRT9RoAQFVN1yfEec1WztlcimwNGfxW2uku+IotAj
Amc/U6DbO9AsOJ1GlLDWvFbKp8DMtzqePPZpxA821pfXMQUO5hUVf/d8S6jr
mDXfKqVATSkzFl21t0RdxGc2q28UGBL5JIdp71uica9eqGMlBVbIXFa9m/6G
aN8X6xdST4HqqpnOOc2pxDT3IbfSru362z9vcTufQnAInbt5iESFFr2RITMK
iQSM8V5ioKHCxf0R1Z37E4m7uxqDxmmpcCjKm+tAZwJRvGxV+JlKhSUqt7Rv
n00gzGrj2BRYqPD1hffuInOviUxHUoUJLxXy5Fjk/vc0lmgdUzdW4KdC0Vf3
+YNOxRLkmzGzhwSpkNWlK1Zs9BWhoybJN3GIChF/e8mSzitilc/cyfUYFaoy
3vyGTsQQyj8qj0afp8KDGjHvWcgvCXs59lJXOSrkzc5ltiGiiJjPpvo3IBWO
M0k8VneJIsZfrzwTVqJC+3fqITELkUTYfdGOXDUqfOfOYmU+G0F0coeENBhR
4b/ob2SCLpx4dE9vntGZCvWEfj6Y2x9CHDhtXiXsSoWFTMP+7W+DiZKN/+IU
3KnQwd+7bNfpYIIxKEjJ5SkVNqsrhGsYBBHxH8ojRvyokGaorFAmI4CoGJY8
VfWKChn/6xaoeeFLWGfBHf1xVKhdTZFXkfIldjtpdGzFb+MXfvRgan1OGFGt
vM+kUGG/qftNu4PPiYlDSc1vP1BhTdnB9NQf3gT7LRZH72Iq5GgP1Pyu/Yz4
epRHNQlRoWJa8aNGxmeEyexRXqKECoN32GKRb57Eu6fKFfPlVPgk/EpW1hlP
QibRncO8lgpHi7n3i594SnTfCRh9Uk+FDPKail4zHoTX8RgU20CFZsb0IQdz
PYg6lGvxu5kKpQxmnsvKehBmHWN5Cp1UGFCduEUQjwnqmxV/k24q/KDEZrKu
85jIsKHecOndxpvw2aiZdCcW1wSpOYNU6Fj135bQUXci9tuJf7XDVOi3Nnwz
46cbAQPkPo2MUmGr8U36Cjs3wp/LSF9gars/3uuyZGFX4njvHVHZGSo8EdXw
0MPalWhKf7hlMEeF/2Vp8PRxuhK8516khS5RYbqd+vEbj12Ib6QE14wVKkxk
r41xknIhLKsyrlStUeHvIY0LQhPOBHNo4cH+DSq8NdIgYfbOmcjWr1ra2qJC
Fk69G5IWzsT/AO6J+LE=
          "]]}, Annotation[#, "Charting`Private`Tag$18219#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SubscriptBox["x", "1"], "(", 
         TagBox["t", HoldForm], ")"}], 
       RowBox[{
         SubscriptBox["x", "2"], "(", 
         TagBox["t", HoldForm], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.891079032726654*^9, 3.891079527262289*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"1fa5c0e8-e5f6-4946-99d6-8baa9307821d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVV3c4Ft4Xf722lPWSnWQUIdFW9yZtWWUks6wk+QpJiqxkZ2XPkIzs/d77
UhmRzJCZFbL39vP76z7nOedzz+dzzr3Pvefg/ScapkQCgQCoCYT/r6s3rWPV
nthcMGxcdCUSGCheJuKHf4qpgJgn+nr33zFQfkwPW/qLGQDdv0ahoQcYKbP5
l/ysxKyBd7EqT/xxJoob1wK/ntgrsKy0Jugvz0xpybtdF7zkClgGopMrs5gp
Jr+lPFY63EBznh5ZWGQvxevI4BolxgsIjSYcDmPYR6mvuTFyWywAuKZvJ+jl
slCyn7Gr6dEEgfWCjct+TKyUZ74uWQFLQcCnt+3OkXOsFIb8uxYLHcFAQmdx
LT+ClSJB3NdXERMO9J4RTPwus1HmOV+cm/F/D04yc26NPGajlB8ZizjoEgF8
9mi8OxTGRlFWr7rtZRwFzn+iPL83wEZ5kuBQpyoWB2Sze37IWbJTThcMibnt
jwe01eJpwj7sFILJYUVdmgSgzP/anyudnVL3LCzebykBTMrsNPAPs1OyqZQb
Ra0TgfClxfqTBA5KsC9xC40mAg8YcciUj4OiG/9Ed64jCSh47WfZp8pBuXBE
7K2PWjLwOHGlP9CcgyKc31N8qC4ZyFO7Bsu7cFD+VV/n1Cr7AArT9gQuZnBQ
nKcPNZXFpIKrVxkmPm9wUIwcf2/f5kwD5Eiaq+l7SRQl4jupKf80cPrjG6sB
QRJlL9e2zwGXj0CbSrCCBEiU+fiC0pKVj4Be7fM5bhUS5deRR2PqNukAT1aL
memRKHHnOy97GH8CPGsPVicdSBS3mgA7gd+fQLZdWYKkO4lirn45uUgjA2gX
LlynBJAoyt0bzar1GUCubaktK5JEOWaaRxi/lAn0J1KFV5JJFNKMhYxbRSaY
eSjIGp9Foqw6HjDgO5EFCs45aXwsIlEq/fzKb4llg1zZ/26OV5MoaKKrYU/6
rm0reKu8kUSpuCbeVyf5GextsTDsbydRSlPtZt5kfwZ3qxd+6fSQKPeIxoRk
7hxwIVafUXKQRNHNpWck6uaAorRvgnf/kig6RtlsxtE54N+mCPvoPxJFi0WT
l9KTA6xevOptmyFRNNGG8AHBXFBN1e50eIFEufM4SfKVYS7wsZYcHloiUTT4
r8v3JuSCywkeHEyrJIp6/YyCwmAu8LIfIsatkShqTuGXow/lgez6C5lJ6ySK
ypHzKusmeUDwoMsc7waJcqtzSOtuah64p0L1nHHXVn7jY1jyNw9YX7UcsNmN
v3FS1mL/kXygTzD8dnt3v2sjHTYOlvng+GOPbwUrJMrV0FfP2zPywfJrl1fh
u3yuXBJ1k5/KB9nHl/w35nf7PV/vEyJdAMye+rwb3dWjmGgbMv+kAAxbSorq
TpIoF9V4YtRzC0AOqKnQGSNR4A7+kDNfAJqFT6QMD5EoF7LNsljkC0HWSvUR
Qj+JoqC/t8javhBkJjaGZXWRKOeYC9CPokJwkiZOfqaVRDltSdXke6YIeLh2
nzpdQ6Kc4vnYOeFUBLiNp44rUUiUk7Uqf65XFAGje4VeUyUkipxYzDw9KAah
8+nPhNJJlOPtihtmrsXgF/rLnZ2we148xqmrK4tBZqSe1J/3JIr04ElOD6US
4JfCWAI8SZTDcc2nCDdKAbt2IB/X7vkUu+UIDX1LwZouUyKdOokiuil4HTWU
gsMEzt8Zl0kUYV0rXWfVMtCpfNGST5pE4eeif7l6pxyECjxZxbv3hfdblqd2
eDko0Uku8ZrmoPDY3Qko6igHOiAvgeUPB4WrJTHeTrcCrK4forH+xkFhDVCo
mjUkgzpjkfY3vhwUWjpb+nFLDL7Ger+y3sdBGbvuwrKQhsHrBOMCgR12ynd/
v/1bwxj4l8yrfZphp9T4tIZ4y1AAN5X7C8Mmdoov+3RyTDoFhPcrfbkdxE4h
CR/6+jW2EnzHK7Iye9gpYhf9aTi9voA7LQsT8vOslOsuxp6FWjVAb1yvtU5t
L+V4YOWVRLsa8PXhC5Pho3sp/PEHGfyDawCh5ek1esa9lFn0x8eksQYkxYyp
WVQyU8K3jYM4rtSC41Ox99KOM1OGX96P/u9EHaCr/fwrfP8eiqvzg1wpUj3w
Wnv299k0A8XS74stz/F6IBaUYR/WwEC5E3NInlatHkyz+qbXfWKgiFcMFfX4
1gOKEOPVZ+YMlMaNBxW+1A2AYcpHYvYPPYX/hUnN+HwD4L6+eiW4m45S/Ny0
N6W5EZjqsgxxDNFQUi886uCdbwTVgYcP/a2koYRT/9ccyP4TWLx52t2TQENx
8Hf+9vz2T5Bc/tHsmCEN5WRiSNat9p+gODuP5UUvNeXe8ABysmoCB43YuwoG
iJTfe1gChW2agaP/kyVIpKJoTLMx67s2AzZNrbeBIwTK9ybS2/dBzeCQSEkC
sY5AKQvjdWfObQbZE+ZXtYIIlKgDYs+W55rBpfft83lCBIqu3HnD709bduOb
7Z2CtnGX7iMZ22etQLqj8T8Pkw3sM3jV6r1XK8h/9vK69qkNfNZSJL0irBW4
f6ydM2PawDHPe4XpC1oBFUermELuOjaKUOWKmW0FtU+ZL5dRreO/7XJb3x62
gQuOnzSGslbxktrmdx69djDzNkajUHYZp3Z20oNH7eBj8nu/lj3LWMuoUMnE
qR18chPiEx9dwiVPrFF2RDsgLW4/sY9ews4BA7mX2tuBLreveyLDEqZu+Brx
WOUXiKloM2ecWsBsV/3NKmEH8PopEpXUM4eV0iuApHoHSBUyyUotm8OOeya5
w4w7wPe86D9DEXN44OeNegu3DvBvYy6UQWsO5+gwHGP92gFcp185LbTMYjVL
9zWDq53A8fL+PYeyZ3CQ/3O/zVtdoOwm3ynavZP468xHUzODLnBu/YLV5V//
8Kp654Um6y7Qcmf7wWj8P2zEdWouObALkO00/7sm/w8fi1/UvNncBfpsNtZe
Gk/gppwnB6Lu/AYPP59gP/NjDLO2meadutcNyidtZJVHRzCcujhx51E30F3W
krcqH8E2dILCti+6QY/Dq+CuoBHcfPrXu8zoblD2Nv5VlMIIDo698t/Bnm6g
o/nL8uP7YcxpLn5sj34PuPmmQCDo3hDmXR/L6jPoBdc3iVcd9//BNzi+jWxY
94LJBxx05ksD2OloogCPSy9Yp2Y6HNY6gLsN7vrfju8F7MqkjaygARzzpc6q
tr8XKKHAv9V7B7Cg/yfJPKM+8Nj9mI6zWB8+JGSV7nm/H1xpHOKWePcb+/Ud
TPT/rx9IH5A33zT4jZdjOiLCXPtBC/8JtsNSv3EtzyXvlLh+ELXEoPj2exe2
4uA1//a7HzAeeEpjwtiF71GbBLsdGQDrcP0V8X0HTllmU6tKHADmLwu+yE63
4d/tkzevpA+AuIhut8PVbXhfYc3V7zkDINLmMrNFXBt2fPoStOABcO9IsBdW
bcM3ZsekB3sHQG/4sbGqwlY8PY73Enn/gPKdPZNFAS34dO/j+ovBf8C7dk1t
hf+acPYRW06LqD9A745LaKVKExZxcDAMSPoD6nbad3yPNmFWFpeF33l/wNv2
Owk9zT/xOAzis2v9A+x0X68X1DXiqA95j1JJg+DFcFlefXMDZp0rKmzgHwTS
KckjtGEN2Ot8+c68yCC4qveXtVynAdv++hICTgyC1FNnwoL/1OObDO3lnZqD
wOEstOtZ/Y43H63s2fN+ELizarbynq/DtiUbmrLxg2Dvfq+zUfR1eIyGkKCd
NghAyhvk1VKL22IZ5D8UDwLLqCZK8sNanPWTR+985yBgDjvw+FdMDTaQU8h8
wjMETn7ZjP2PqxpXrrsqt0UPAWLkQOlV9S+4jcd2+UnyELj3ekArQ+ILHj39
IGFPxhBIYCl4c5fmC2Z+dnlRsWwIbJ74+l9ISRXWWmCMye0cAmMPXh+1FqnC
E/+C/wVwDoMr8QoWKoyVeJPJI0xCYBg0dIt28/+lYBYJe1AtMgxePXOqkvpG
wfIW2iFbcsPAPIB5heRGwS7DfOesNIYBf+Jd+19bGJN6P/hcDxwGvr6lMwkM
CItthsmPhA8DxqfX6vgayPgM35s+17hhkBibvMgcRMYGdx8eL8kaBuczlatU
eMg4vV3qt1jDMOi8cPPrKdkKfKGx6AgN4wi4wYTjB+3LsAWurUVuI8Btleq5
xK1ivHaGVVjeZwTMMrHe/C5YjH0KtF+kvxsBFkTFiS+zRTgjfVQqNGHX1j5H
qAorwtMhNCEP0QjoikyL7hgqxHYWUJ+0PgL0OvvvdQUWYNqhN0VvqUbBiMtb
vzqzAhyu/5Nlh2EUOGZ5hTJeKMDFGgZV4/tHwTHpV+MOU/l4XcFZHJ8YBe0/
ng4sq+ZjV7aSuYf/jYKzzYz1ew/lYTa/nRv9jqNAnCWgo3g7FyfRXf1wx3UU
rHOS6z/+zsVfNtq1QOAoEDp1y0Y/JBfTjS6Uk7JGQWPbu0ZqhlzsVybjhcdG
gUgrD23mxmcc+SCNl9PoLyCX9AWaHsvEVje5q45a/AWXr9+z/zafgS/IvX2o
ZPMXLB7YQ51emIEHiY9Knrr+BeMNbmnLChn4aJK0VkvCXzB6kDjtr/4Jo4HC
d4F//oKaz1aUn+8+4qBasTNp439B5EB75/S9j/h+zvsBNPcX3HHzCHot9hHT
uz6XmaYaA2qyshtbFWlY7cD5H8rCY2Bs7y320zOpeEj/KwPTgzHAFPf3xT/z
FFx0+UTOwUdjYNrpxdiv0ynYWypV+8zTMdAkMlQqzpSCj269SbVwHwM8C75g
OesDdoi5qVSTPAboYp/RH1tPxgzdLS4ew2NgplTL1PRDEpbS+bO8bToOTrzJ
uR9/NgHHsINt38fjIFE03PQATwJm+hFDy2M/DviDt1yqZ+Lx2EUdkpzHOGi7
NlZpYRWPP0j+lDVPGgfv6Fpqux/FYd6dCquffeOA95zE5yi3GPy2lNdOb3Qc
bGu00MVcjcGrTx1fjE+NA7Plz9c598bg9jE5H+qtcdB37dDQo8hoHNTyKe0U
3wQo3fBPDiyOwnSpEYPx2hOAbZ/DpxGGSGxvtDx+1HACnDbZoFlri8DDvHfm
Ss0mwKDTAQWHxAhcGchCaLOfAH2vMFXGuQjs/NxLgCF0AnxdxPJ/7d7jeWU7
HZumCWBknBOztBaG+xZUG+H1f2Bad3Pi3PUQHMDXcchG/R9oSL4I8gRC8IVL
Bs/j7/4DIbarim/ng3F8sJXI9sN/4PortqNascHYSPatU7nPP+Csqa6sufIO
D1lXiZ1s+AfUE1Mun6oIwqHh151N2/6Bj1a/6++GB2El1NQc2vMPyNBYf2yy
CcIf9vY7L0z+A6acL2JKxIKwWeZGS87eScBlZDBVfjQQj43Lu0iqToJXepe7
vzH44wi2ijZd7UlgdrE/babaD187c0nCx3ASTK+8ccv09MPp3urtY08mwUGm
PLffNH7YUtxaMjVoEvByCoaMMPriKZO0DqGWSfBPgm00Veotnu/nOcalOQV2
RKkPL7d6YqEHK/IH9KdA3B3vGMlkT6w62nbmsOkUsIAMCQ22njhzMvDSWfsp
wCphYXOLwxObrdFqG4RNgcKAdSmZux74N/v8y9T2KfBpNWC2cMUNM4T/dPvc
OwUGqbzLz/xww6d4st6UjEwBsy9aQXzJbjj0gMW770tT4MKvOLllVTescrTv
wzTnNEhl2jCdy3qNKy9/rz+pNQ0OqjInqzq54tnatCZgMA2qEmVHNTVdsaCy
Z/s1s2kgf0P/V9YxV+ykAft1HaYB4esxs4QmFyxvWDT/Knwa3BdPFYsqeoU/
Oibx1PyaBs3me2SPxzvjoAwnc23tGXAtuIMg8NsR36O63NBuMAMKkvDCaIoj
FtNmkb1jNgOiki31BWwdcQXxw7qa/Qy4kp8DGvY44rG7P/xvhMyAY7mBE7xK
zzBgECo4/3MGbBlKS1fW2GMmgwnuil8zQNG/z2860h635Re8PNs3A77HTDO/
sLLHlobXr56amgEfWTr4stnt8c17Zx5H0M6CT6UKt8wf2OFnefcJwYdmQSR/
f3gA51Os11tzXF18FoQYy+pqT9liRQYpU1bJWXBrnwmr3TdbzGywUhdwfBZI
h/GmpDrY4iRGvxDfi7PgKHtMbG/Pf7jRqFDM03AW1Lr9AJvFNliMheGWY/Qs
EATwzMPrj3Hm7OtU7/hZ0HO1MkWF7jE+3rKxE5E8CwpsBq0avlhhEDaTV5qx
G58q5+4LrbAOXwf3Rvkun9PaPHPwEfYRTx1+2TMLhJVo0mT1HmJWRqELAQOz
QOuAVfPWwYc4fCLyfdzwLEj9de2mypgFTs7yv4EnZ4HjPtqyZw4WuELOPoew
NQsecNLp/Ygwx9NAydldYA54snM5+CyaYruDqD3k4Bx4NcjIwVVliteJp2U+
iM6Bo/epj5OCTDF9teTgV6k5MNq2N/GBlCkWUua4RndhDgT8aDM48dgEa+gM
crw1mAN+lbYXewgPcJGNa0ZA/BzIf9jdufqfEfYpny24mzwHYqudFMNUjLAh
nTESSdvFD5uzvZQ0wgwxF5vLsucA/0oh990GQ6xbQ1wZJc8BDach0yWyAd4W
8FQEPXOANjjsRnK5Hm6xWLrJNDAHkugLDMgv9XBavqlm+9AceI4mUu9BPax2
/YrFo39zYPwAQVqo5h5OsqMPeL8+B3iEToZ+/K2LL9e/7Zrhngfx9GN+P7jv
Yl6u9cEy/nkwKvEfOX1QB08bWU56Cs2DVE2lrrVMHRy+fGOH7/A8mIjN4ptX
1MFjB5lFr52aB4JUjXWH7bSxn2OATYLmPNBQ0yL3TWjiNtEQevXgeaB2E82f
PnQbXxfnPv04fB54tg2Mmy1rYHQ41uJt1DxQufBEdqtOA6dLptVVJs2DsJLz
/wxsNfAr2XLf4/nzQOlRcnRPjTo+fH6IhdQ2D+YTjR2nPdRw7AULeKxz1+9h
+kzWQA2zwykb5Z55EHSr4VnjKTW8pbjS7DE8D75RdyyIdarilmt7QpcW5wH+
JdBvkauCne/IcXdwLoCUA+XE2+7KeE6z5NoCzwLguVzsZgKVsZn2+ecsgguA
L54yzbZ9E6vrXv19VWwBPPiu7Hn2xU0sZnQvpuTkAjgpUN8U4XwDNz1yF4rS
XgAm3wMGzKKuYRH31sP6kQtgiJnPsufMZayTRy1rFrsAuoWvHmthuIz9/sid
eZK4AM6KzJBOdyrhJRB6/XX6ApC68zxKzVEJV2/esUwpXQAftYbORZMv4YcO
vzKmuhZAvLo9dcM9RRyXQlew3LsACJ8SGLRlFXFL28mKnT8LgDvK+PMlekV8
Vu59A9vEArifaal4oeAiZp7VnjqxvgC+edGJxLNfxNkPu6Rf8S4Clmo/xVgK
wIMRjKfeCC6CDPc/tNzPAN5fewYECS+Cfd6HF89JA+wqFqWaJLEIrpw47/88
7gJWH9K1qT67CJibVG8ne53Hi3o9ufvuLYJvzoHnre3O4TNq/fLx0YtAOJ/N
42TFKVwxRjt1P34R5PbmqbR5n8IXXh9NEUteBP8aItsHNE9hpbznnNmfFkGv
2oC+4txJrEIiLVeULgINzSGwV+okvt95rfh3xyIY/f1yaq5YHg/bPHkS170I
yFI1T5h95bE5Y7j4/f5F0MWua/nGQB5bnR16Pz66CFg7Vpqj6eR3/ysvHVeX
FoEqv0b2kXty2Nco7wwXaQmIKToWynEex/vWOue69i8B9lC/ns0pWRz0bic9
lm8J6HloJ/HWyOLwKmVe0UNLoN0tk0PdSRYniPxdlzu+BBob3jWFDh/DBWN8
FepqS7vvuzdfdqAM7rXxvODvtwTGDG6igz6SmEChCCQFLQGcR/v35nVJLMKy
uVkUutt16wrWfYyS2DLLtnwgZgl4fv7ic8dHAq+OG56Wz1oCO8ql7JUhRzD7
g7PHu38sATXDtaA/FHF8Ms+ebbZ5CUiLPNwe9hbHd6lyZ2l+LQG/4iPpj9TF
cUK8+GfpviVgvNKvsD0khqV6SEfdppfA2ZgFBh4WMXxNc0b0CMsyKHp1K1jC
WQQ/+iBBe4FjGUR5RwV13xTBAQumwxr7lwE/96WRLT4R3P6uJ8n5wDIosR/f
H0w+hO831h1oklkGApP6Kl20h/DLqx94nqktA3J19SPaTwdx3pm7e7+9WwYK
UtSx2faCWGTeJyY0bBnMLup/eHFcEId9qpA0iVwGLZ8vrXbPCGBHPqEb1InL
4J+s27qalQC+sDXqdTFnGdhsB1WPPOLH9RQ7AmpcBrrGrE/LPHixwvPUQP+W
ZUAMqcw9fIMXZ8t2Cur/2uVLdefnflZeHJx07vxm7zKwhmZ2drE8WMeD6HR2
ahn0MSlRMyFuPHw1aKFozwo4WkvkL+fcj7UIVW5eLCtggsdSu3SQC9eULLBp
cayAeIOuVPEcLvzpiPaxJd4VcMeaR1VNmQvb7BF8LCexAvKe//eg4C0n3mrM
GP18bQVQuRf+2t5PwlxaNV0fPVcAZ+j5KqaXbPiKwgdo+nYFMJJPc/Bqs+Fn
wq/TDvqvgD+f5ZVfyLLhzumz9lGhK2BdvNr+2F9WHP0mm9UveQVYNf/3QU2L
FQuVhl19UrkCxtzl1dM892G1eNtsyW8rgPihR8Xg0j782lOVc6x2BURoj2d9
oNqHB9UZh4yaVgBF4ARtt8tenDLh/EqjfwUkJBfdbHRjxhL8JoUntlaAt6dp
c1MiE9YlXuSfJ6yCcsHB6CVzJuw7JuCeTbMKvHvao99LM+HJgg41ceZVYGsp
nqtCZsSfb92c5OZbBTK3QkweDjBgeZfjhzZPr4IvrbrRxgr0GAwS3lXZrQLR
y/G/r1+mwawu84JNjqtgmUtb9TknDR7kG87sdV4F1zW8I3hGqbGHZk3tqscq
gAyXjD56U+Pvtf4EmbBVsO3m3zDQQsRan3ltogtXwcql/Xd+OFHhw8rM2x9L
V0HGxt64t+pUeG1sy7eIvAouiEvHpBymwjHCf9Kav62CDtOIr2sdBPwnLK2f
/tcq6JeVBMRzBGzlLK9qt7wK7gawvOo6tI0u8Ij1vl5fBSWJByvie7YQS9H+
R4Hbu/y1Tp3fF76F8mbWvT7RrQGtWT/mPqYttHK/Eg1wrYE2lopNwc0N5HZd
RfrWqTUwIUrN1LGxhiK5LPaKOa4BJ28u+y7TZVTCr3Zz+sUaeLIHsenLL6NO
4dNvi1zWwMUC6qhb1MuIW4aB9uqbNdC6yU1tm7SEwq9+3DQPXwMje0+r5ows
olDHsX/pBWvAXS3L/5LLAip41XTEtmQNsPyotZa5s4BaPUrMz1asgTMeMNjp
yAJif+c99P3LGrAQXzwh2T6P3qUf7v7XsgbsR04z9B2bRwG/Lb5Lza2BUuPY
8O+rsyh7QI1heXENWAvvO6zUOot+jJ6+glbXwMPjkRos2bOIeYGhSoWwDp4N
f/CLMJlFvnvSS5+wrAOBOPGLzZ9mkLfC+MdcqXVw8Iy436zPFHKLe/jmhOU6
8O+eMjxbNI4U75lNqlivg+RV7+b3juOImvuBuoXtOpDy7X/lfW4cebzT44t2
Wgef/vVZCHwZQ14eqp8JvutgJozWZaLzL3preaKjPmMd2N6Jf/dLYBTdED+u
MPJ5HVie4fJEYyOIaVg6cTt/HehKlKuJFowgH/3Dj2Qr1kHSuU2JR8ojyE+N
bye8YR3se6xFU+Y2jIJOUonfn1oHweGX2e1ph5Dawpbvi7l1wPrexPh7xyBi
y1mfDV1aB1PNprb+nwZR8JHFspqtdRBEdA7VUR9EIfx/VaT2bYCchPm54eQ/
KJz4w2FVegOs6w51jd4bQLGNEdUBNhvAp7h78rxwD+IvhdRhdhvgKD1vcFt/
N4rZnZ2jHTeA9siUAkNcN4p2PF2a5roB2giey5C/G0UKd2ZQgjaAYnQxaDrw
G4U57H83n7MBYsJN9Q4rdiKSMf6xWrABUIs97whDJwq9ac60U7Lrt/wlcbip
A4UIFbvvqdwArMbFYeeMOtC771oOIs0bAH5v/PPE6xfyFwy/pzW3Ae7flqfi
nmhDzIwXIvSWdvEy5+w+lrQhv4WRtvtru/Gh3j5Zb9qQb+0JlSdUm+Dr/grE
Jt6G3tq2Q2+2TSA/Nc4p/qgVeVaTxMpkN0Hltgsxk74FvbQOmRWw3QSGNwS7
U7h+ohtVsr199puAW8LjJXdLI+LmaqqLf74J9tQcOiAU0IgKyMzJB19vghYj
P/Yx+kY0weylKRq0CSSPWkRLE38gnQzHsqPZm2Ayouy2A2s9EtvhSpvK3QQV
M3wq4W3f0aJGYUh24SaQHlY0Px35HQWuz1kdI28CoYrDBjuHvqPq648OyDds
gqyqy6ddQB2SH9P3ODexCYIJGo9f+tcgosKmzebUJkiqNfa7fbcGNQVG6ZPn
NgH2uv0oVrQGPTrVcRKsbYKbG4eavXE1SvJSG1dk2AJCRpZcKavfEKvoJZUb
Ylvg9zSPtoTLV/TP+DD33ftbQOJ56nGajkqka9Ut+chsCzjLW50/nVmJah0C
wEvLLXA/pUqw+XUlSvFdNEu03QKBBm8e7054yLCQUjjutgU0pU87uPlSUCvD
3dtOyVtA132a1PYZIUUOZnO/tF28h/miiBlCOQLYKS5jl0+azFdxAYT8j4sm
VeVvgYPY8fJ5fzK6qjc3y/R1CyyffqX0yr4ClX9+GxA9vAVIar8G9piWIYky
haSssS1Qq8RNrhMtQxFfZwrx5Bb4ytbRcPBvKbLv0uwdWtwChKTw91GPSpEM
tfDRo7Tb4HJ0lqrnixKUrFVWVyG6DeRyzHWqCouQ79YETZ/ZNnj81Gct5G0+
uvZfaO0ny23gcNK+7Ld+PqIZOe/3zHobTK78SXc/no9eNQRxsDlsgzZZ3s7V
njxkE31SWMlzGzSlzDfcPZmHtM64gU/J22AkI3MGrucgjixJ6mdp26D+noDf
9bYc1CTUXn0pYxtMrNmapWXnoOsMh1V687ZBe0VKhKFJDlLo+KHHWrUNvlNJ
xWilfUbC9jxODgPbYCNAfKH/dRbqH6s6f2l4G5S6SjA2gCwUo2dFxTq2DTRe
ZQ5f3c5EnErYO31mG2y/zOH+55yJGDhM3/ds7/ItUM786pqBpnNyChQFdoDC
sWcXphPTUdnk1Zl9ujugqit2weJSKjoZEONTq78Dzu8xZ7NmT0V5MnOibsY7
YPBRxEL/nxSUbhult2SxA7odnlrSuaWgiNXJuu5nO+B6Z+2oUs0H5EAT/OFj
2A7gkB/sIpsko/mUUXA/chf/1sTu4NlkZH31XDdf7A7wGbukPciSjEx9htkC
P+yAxp/PlJ9XJKE7rKdc7PN3wH+5V9THeZKQHH/PXcXmHeAuQEpXGElA2eRj
SxttO+DrD6sxEUoCkjD0DCrs3AFXvkbVGUYnIOEk6ZrDAzvgTUhbzXeNBMR+
+LU8y8wOYLj1QajaJx6t8oTQW9MR4IMlVisW21j0S/T04FkRAnzltDY3+ykS
DTdbXYJiBNj+RmyCZB2J5l8mfrh8mABvT5RK1clGIpZfTOZqRwnQ/5dKXXdZ
BLrm1fvPVJ4AGx/8zH3e+h6VjbotBSkRIF/2i2RpgXBUG1ysFX6FAJWU1SrT
xsLQrwuTxdHXCJCjVFgquSAMLYRrOqUqE6DMzYQvfCph6OjVwzvldwhQy5IH
zXiFovi0Hwx/TQgQafc8p2IJQdm3iZaTZgRo0V3ykGYwGFXsnKyfsyBAIyPW
DbvCYNSpneC/aUWAoWUsHZH6wYid4Sk7u/2u3lrLK41575CHBTf/eU8CVN73
KITyJAhZHHkgE5JCgPNVBb9fafohQaaQMfs0AnT3aml+zOWHWieqEnXSCfDk
ZGJza4cvupApTBLMIkDWVjqvzXu+iENmcPVjAQF6e1Vuej70QUjeuAp9IUCH
PP8fbFHeyI7z3YvEb7v707lTGd/3RkeWKfIeNQSoP3WFR1rSG4UWC6VdryfA
1xy26Dx6gx6eHfBtayFAwYvdZpwTXogEDTUn/hBg/ZaIVZm2J/ouFLjvxxAB
ZqR4Bz4U90QuVLjm8wgBnn0SiT1XPNBEleBZ+3ECnGVaZ6GK9ED4cp8gYY4A
fw4orI0MuCPLm/pjnAQq6DK4eOSluxuq1Lr34qIgFTx4yH/EjdkVVQdz1ioL
UcEG5zdvH9e5oIbGnyQdYSr4wertKS8nF9R5RSnbWowK2pNlPuK+V2j2pNSf
aGkqGEWj9I3+80skuH/nyvIFKjhwLV/qpM0LJHK7NITqIhUMjNAb8JZ8gSQC
nw4wX6KC8+M6J3z/OqET9GPPD12lgrdIhS8ijJ2Q8kpTppoqFbyxf+RJuv5z
5NSRxJ5hSAUN7tmkKNk9Q64c+oZFxlRQfu833HbmGfJS3Z9Z+YAKHv/OpbGx
44De1fhe7jSngiJjfKG0AQ7oY7GdI60NFfx9Kdx9MMce/Xp/pc/QlQo677zH
+qx2SE5nIp2USAW5M+TEtCX/QwO18SpbSVQwfNXurRP1f8jvjObCyAcqyHT0
/J2lbhs0yktRKP5IBTvrxSQn/G1QVG/Yz7s5VLDuiSrPx4kniPjg4lIc3s23
mnrdK/kx+ty6HPmmkgqqV6fLyOg/RnpKmRdsvlDBpK3TZx7uf4yKRPd7X6yh
gm3pm0VB/lbo4dgk73AjFQxY5dbPcn2Emh5HwCN9VLDMOuW2gNtD9LLv1gjb
ABVs7rK27VR6iCRUqX3W/1DByuyvBSIMD5HHMevW+hEqKBPO+cEmyAKdWrhk
Zj1FBY3vKUv9SjNHcY4zvvmbVNAN7Z3omDNFN8c/HIvZpoKnamIvppBN0epd
3XYPAhHWnCmroPYxRRrnvglq0RChnV6EgJ2IKaLdjspd3UOEAhHjb4WNTJCV
+5WO83xEKDvWz1w0fx+t+jT/5RcgQoKy7wer2vvIM1hvdUOQCE3aNMnZcfdR
XKItT5kwEV6/fc22Xfk+asJx905KEOFyibFMY5Yxkttc7pc+Q4Q9uvu4I18a
IQq12+zec0R4Il4uuU/HCCnv2Us1pUCEtoW5O4/ljZAJ7yHhDEiEZdk2d9s6
DVH4aVUT8WtEmPCnLysHG6B1u7SxA9pE6LXE2Lk/XQ95OR9f29YhQrMSa55e
Cz3E4UFm7NMlwq+CnlsnjuihoyGtEjEGROj5qzorKeMeMsjdseI2I8KAudhs
82JdVDmlPcdqT4Sd7VGyCRM6SGVpkGrWYTdfC09cfL4O+r35mP2nIxEefnoj
6/hLHTS/x0PO35kIueIp+RzsOkhEIsee0YMIQRLBuFJRG3mbMaxThRBhltZP
hXqsiUzrBOIYw4jw/WwVu2SAJlI8KqfI9p4IW5lHYk7ra6KNOX0foWgiVG8o
+KG3dQdZv8znBclEKNlQX/FD6Q7SDDU455xPhFSJporrQxro+MrTfvdCImzz
E91SKdVA+3TfuvsWE2GGu4PqUoAGqj1QUB9VToQ0wfVlJ89pIIUMRr3SL0S4
LquY6fdeHQlXFTgvtxKhqIvxuoehGtoR+S603b7bX97j0gtn1FDPm/6vtJ1E
2IBD1vJIaij8FtNezh4itNQhZauEqyLGLsNYuWEiRKxv7lY/U0GzM0zIZpEI
n0Y3eancVUZkAeOdCRI1rOJZPFsVfg3Bwv82fnJRw4GLFJbUB9fQV2W3lQLu
XTvkBiO37DXU8CJ55hU/NTzwqbrd6sdV1NM10s8uQg1PEfsfjzFeRZthlpSz
ctRQQP9DFnp3GblKvag4cIIavlhlNxQ0uYxovvmW0JyihuTMNqMfJy8j5sXM
nMaz1HDSUF2Tp1cJ8WvMJNxXpIarszLEh1JK6Nw+u9c+6rv5ya8f/e1RRCjF
4+WT29Tw3d+DwgoFikjxfNjzO5rUkFWC88iAryK6YVX0n+Bdali2tijOpaCI
dL+vGucZUcOKL5HjZxIuIievl4q/n1BDR6Kjs9EziEq3vaglAqjhT819lber
FFDA3MGQU0HU8NM5dtp8FwV0f7hC+HIwNZzm3vuu4bwCYvo+f9EonBoSFzcf
SFWcQ3phBq7hcdRQ1ivVXRGfRduSJ7eIn6lhWH6yzJ7u06hFsNmPNZca8t+4
fcA34TRKY7PiF8ynhoxcc/demZ1GaiuJ584UU8MglZVytHAKJVbtdXqCqeHE
Ren9aRynkNLdkeXun9RQWfbKWa6HJxC3sqvXeDM15BTqWv1+4gSavMDHtdJK
DY2VdGkWiCdQmIj6CfZOamgtJU6MjZNHozMVT68NUMO21/8idLrl0Fuv0NmC
WWqoLicoZ215HDXmX5rwZ6OBe55qy4shGeR2vmDkHQcNjKj+mJtgL4NO1oj8
CeOkgYtsJsuJUjIo7jdtZywPDWw8ycQpEy+NHlPVfss6SAPFS0lpT72lELOq
cuIPWRpYHS8smPpUElE6K2Ka5WhgTW69sp6cJLK7LxXRfoIGtsV6EMMXJFCP
/b7A3jM0cB+NGHWovQTKiGlynrpIA0UYxe+WuRxBNybu6OzVoIGKSwd1cjLF
0fbTb7fZ7uzySatdibMTR3lbJ1Q5tWhgjryLINt5ccTLtv+KgC4NvNnDR+X6
UwyNn+qSk7pPAw+YcPB5r4sib099llu2NLBMcyPx4kMR9E3IrNovmAbeFo1u
a/54EAn1N/NYh9LAM7IEk2vuB5FT7PnHquE08JNKC8+O/kF0jJeTxB61q49M
Xj1KOohiOL4av0+kgT6Pc9193IWQHZ3wVmIODfQT446J7BFEP7/6q7nn0UDR
xx7evpGCSMJ9LdmkgAam//peuaUliAZ2mm6Il9BAJ/ZR3getAkh5zSUiE9NA
eSktc9kWfiQy2StX3Lhbnxn+hz1/eZHLp+tvIppooJ2J5KHWTF7026Lw9/MW
Gvh1k0Pihi0vChrxe63wiwZKhz8VLN3mQZt9535W9tJAHiurxCgBHtTWHGnZ
MEkD73xQYrV6uh95FGsm/mGihZYq+aJHXEjoWPNN73/MtPCDrGuhtBoJdU9c
fLK0jxaGsXB2vT1IQscFpc8zctDCK+Xh3fAbB+r3oOs6xkcLVVvWfuSycqCz
GsWsrpK0MGD7gkV8MRsafZS18laKFg74+spv+7Ohd57JfSEytHCUIyE0z4QN
jZUEZqbJ0cJqjoOs/BxsKOyAxbWf52iheKvb4txTVjQ7ye0qqEwL5RN8RjR8
96EYOhbzwyq0kI7l0EqV4j50VYhW5bgaLYRPbx7rW9+L4m7P8V25Qwvv8inz
cD3ei26W1RU/1qOFjRPM1b53mVHqG6eZCitayOvl5xOgwYT0hHsM7vnTwvQZ
Ne5ACh3KtvkRqxhIC2kZapKGA+gQFUY9R97RwlnVYjEnfTqUei9RdzWUFvZZ
0/GZbtCi2VAzrbAYWpg5ZlB49iwt8qCfu/UzgxbuaVjNGf5CjTInac9f+k4L
e9SbvsjRU6HtsysvJBpooYmh30vvXgJSfztWxtZIC11jqo4JFBDQsmj96YFm
WliXEutOd5+AoGGQ/MsuWhgzxleU+3qH3NbMe7R4jBaeJH5OXCVtkTeKZPgk
6elgQT5/jnP0Klk6ZvkbAyMdnPe/JOdwd5Vs9JpsM8pEBwXUJbMn9q+Sv968
WZ24jw62vzvvqxS+QvYbMPuPm4sO1mxaDZZHLJP5meJqaEXpYK7jCk1pwSJZ
ZcbEdkiMDuL+ozT3nRbJrm2SApWH6WCEzKENT7hIHo4rtXU+Sgcz3mo0XWhc
IGfKtQssyNHB2+IV++1m5skK+sx2A4q7foZy3qlrc2RrxVZBpEQHzTe3wy5z
zZETxKPqoq/QwelOakae4Vkyzbz4Ae0bdFBPWe3Xsdez5AavS99/qNPBp2fG
+K65zZD1cpyEyo3o4HZ146BsziQ5IOxifcR9OthU87T5ou4kmeLE4OBgQgfP
REV9vko7SRa5HF4va0EHG/Ifnz1h8I882ZXr8PEJHVwqPeLznm+C7Ew93hD2
ig7eZV9je/71L3n70tk9Ma500LuLr3zx2V/yaw/f60luu/yuvhp8d/Qv2YtW
ujrbaxfPS8w8FjlKDqR/imsC6ODLSFoJgusImf3a160fQXTwcbTotzcKI+RQ
b06FtmA62K3k2XdsfZgcwVhSMhBOB+v9qf3+Og6Tk/Zs5a7F0cHKlY3mUfch
soiyyuxOAh0slOcxdLo+RE7zi5emS6aDY9wOljKsQ+TMvYoZ7Gl00K1jemMr
YZBcxPLmg+RnOrhXqodRqukP+bRa56BsLh0c+rDs3RD3h1wedOTg6fzden1R
8/K3/kOmsDXEKhXTwfurXzaesv0h13GwvdfHdDD8TGpzi8kAWfnO/fYHlXRQ
YZKs+EphgNwYms9h+YUOSn/1ZiZwDpBbOLWCHGroIIOCbIqJfz+5Z3/028Cf
dDAxl3FK524feZZP1Lmynw6ydQiem6btIXOJnDEWJdDDY3t+N9XndpBhpOcK
A5EefhDyexZs10F+uK/Ff5KaHk594DxYeqqDXLFqWZZPTw9d17KdxfAv8v0f
MRyKLPRQunVd83VLOznbgVBtIEgPo66tBJ3a00bu/KespyhEDx9dFzLdbm0l
UxlHzosK08N9pUIKorGt5Ds3jx+YEqWHusNp88HHWsnrB0wcX0jRw2ePfr6e
vtdCvlJXIxGhQA+/nXM/nPq1iWxzgVT54gI9XBQ/JPE4pIkcmW+kbQjp4bxb
lHTo/SbyZOyau5gSPVzxYIFEYhM52Fayt+AmPWR8KspE9mkk9/EFBjbr0sOH
dRvSMhX15GfWWotMz+lhildj+f7P1WT+kya1Yi/o4eHR/gAmvWoyZeu/GMWX
9DCOPfrTJGM1mcnfX8npNT2Mb95X8criGzku42vo+Ntd/eP/rvw+9pVcPXb8
RG0UPfR65bxpPV1JfpQDGYdj6GH1JwldrU+VZFZHld6dOHrYkuxGkDKvJOvS
W3qeSqaHKpsy4h+HKOQp0cT21Ax6OORPKM34icmkBywOnhX0MNxj+ofA2Qpy
qYTAjURED4McPOLaf5aTDeYlBMkUeihMtCZYmZeTP76+Ur34lR4yj55zlI8p
I59LeMll8mNXz5+qU/L8peQBc98Jl5/0sC9+KXiAUkL2kIlE0c30UGv1hcsj
8xJyIyowa22nh8X27swCZcXk+73/ihT7dvMnv1yeti8i06es+RgM7NZT5lZP
4JEicqYVvaHTID0k3bG5zdJfSF7eEKbPG6WHc5a5S+mqheToL8e6f4zRwyq9
n0LfmArJ0PfC5/EJenh0DPaimgKyD6+u9sGZ3frUCzKpXC0gywyaS56f2+3f
IV+nIcYCclu6/Y7OAj3EnDedtRvzyYJn3qUFrdBDrupvct16+eQvhPgXmWv0
MNXDdXxCLJ9sUZupWrtBDxt6Ao51zeeRmYPKDg1v0cOkxlmGVEoeOVe7dmVn
hx6u3k21VQ/KI/8Pl+UOKw==
          "]]}, Annotation[#, "Charting`Private`Tag$18414#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ZWXT9evvJP0Pp8ZxcQ==
          "]]}, Annotation[#, "Charting`Private`Tag$18414#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(y\\), \\(1\\)]\\)(t)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(y\\), \\(2\\)]\\)(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.891079032726654*^9, 3.891079527307191*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"1bf060a6-26d2-443b-ac83-493d31c56215"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
s3FpHA==
          "]]}, Annotation[#, "Charting`Private`Tag$18506#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
bs3q7i4Re5n7kKtHJJH+B8edtXc=
          "]]}, Annotation[#, "Charting`Private`Tag$18506#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(1\\)]\\)(t)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(2\\)]\\)(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.891079032726654*^9, 3.891079527351815*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"8e5b6db1-e5ce-41e7-b318-305f8f6d35b8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Question 3", "Title",
 CellChangeTimes->{{3.8910744902261753`*^9, 
  3.8910744970478373`*^9}},ExpressionUUID->"dec26376-7597-4fc5-b705-\
2892e22d8b54"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.890127957032926*^9, 3.890127958819178*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"2770c619-508c-40b2-8e14-339cddb7a103"],

Cell[CellGroupData[{

Cell["Part i) State Space Realization", "Chapter",
 CellChangeTimes->{{3.89108055759299*^9, 
  3.89108057387521*^9}},ExpressionUUID->"d8ac9945-e837-45ef-8068-\
082d64e0d4e0"],

Cell[CellGroupData[{

Cell["Construct N and D matrices.", "Subsection",
 CellChangeTimes->{{3.6513668033322268`*^9, 3.6513668124054823`*^9}, {
  3.891075016217269*^9, 
  3.8910750274214687`*^9}},ExpressionUUID->"bb5c1425-bc10-44c8-a39e-\
871181c98ebf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"N1", "[", "s", "]"}], "=", 
   RowBox[{"(", GridBox[{
      {"1"},
      {
       RowBox[{"s", "-", "1"}]},
      {
       SuperscriptBox["s", "2"]}
     }], ")"}]}], ";", 
  RowBox[{
   RowBox[{"D1", "[", "s", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"s", 
      RowBox[{"(", 
       RowBox[{"s", "-", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"s", "+", "1"}], ")"}]}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<N(s) = \>\"", ",", 
   RowBox[{"N1", "[", "s", "]"}], ",", "\"\<\\tD(s) = \>\"", ",", 
   RowBox[{"D1", "[", "s", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"N1", "[", "s", "]"}], ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{"D1", "[", "s", "]"}], "]"}]}], "\[Equal]", 
   RowBox[{"G", "[", "s", "]"}]}], "//", "ReleaseHold"}]}], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"54d953ff-1988-41e9-a3b4-f09081c093d9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N(s) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "s"}], "}"}], ",", 
     RowBox[{"{", 
      SuperscriptBox["s", "2"], "}"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"\\tD(s) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "s"}], ")"}], " ", "s", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "s"}], ")"}]}], "}"}], "}"}]}],
  SequenceForm[
  "N(s) = ", {{1}, {-1 + $CellContext`s}, {$CellContext`s^2}}, 
   "\tD(s) = ", {{(-1 + $CellContext`s) $CellContext`s (1 + $CellContext`s)}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.890691170272896*^9, 3.8910745370761557`*^9, 
  3.8910747148069*^9, 3.89108034010268*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"91c2a447-cea4-45c6-8095-f84718f695db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "s"}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}]}]], "}"}], ",", 
    RowBox[{"{", 
     FractionBox["1", 
      RowBox[{"s", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}]}]], "}"}], ",", 
    RowBox[{"{", 
     FractionBox["s", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "s"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}]}]], "}"}]}], "}"}], "\[Equal]", 
  RowBox[{"G", "[", "s", "]"}]}]], "Output",
 CellChangeTimes->{3.89069117027988*^9, 3.891074537079565*^9, 
  3.8910747148103113`*^9, 3.8910803401077423`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"15008e02-95dd-4f64-94f9-262b9e51be25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<det(D(s)) = \>\"", ",", 
   RowBox[{"Det", "[", 
    RowBox[{"D1", "[", "s", "]"}], "]"}], ",", 
   "\"\<\\nThe minimum number of states is \>\"", ",", 
   RowBox[{"Exponent", "[", 
    RowBox[{
     RowBox[{"Det", "[", 
      RowBox[{"D1", "[", "s", "]"}], "]"}], ",", "s"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.651366394695929*^9, 3.651366398703354*^9}, {
   3.651366476195414*^9, 3.6513664806255198`*^9}, {3.651431734359571*^9, 
   3.651431737760668*^9}, 3.891080347069483*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"35c6c775-9ef2-4e7b-8856-017acf34aa3b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"det(D(s)) = \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "s"}], ")"}], " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "s"}], ")"}]}], 
   "\[InvisibleSpace]", "\<\"\\nThe minimum number of states is \"\>", 
   "\[InvisibleSpace]", "3"}],
  SequenceForm[
  "det(D(s)) = ", (-1 + $CellContext`s) $CellContext`s (1 + $CellContext`s), 
   "\nThe minimum number of states is ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.891080347988278*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"0009acf5-8b17-4561-888a-66809bfd9452"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find the GRCD:", "Subsection",
 CellChangeTimes->{{3.6514316019000235`*^9, 
  3.651431619851531*^9}},ExpressionUUID->"148b22b2-451f-495d-b79c-\
fb27bfc82699"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Make", ":", " ", 
    RowBox[{
     StyleBox["DN",
      FontSlant->"Italic"], "(", "s", ")"}]}], "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"D", 
        RowBox[{"(", "s", ")"}]}]},
      {
       RowBox[{"N", 
        RowBox[{"(", "s", ")"}]}]}
     }], ")"}]}], TraditionalForm]], "Text",
 CellChangeTimes->{{3.6513659949974194`*^9, 3.651366010083755*^9}, {
   3.783732950727421*^9, 3.78373297128181*^9}, 
   3.891074540651293*^9},ExpressionUUID->"2b239223-1faa-421a-9083-\
106f8fcd1d8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DN", "[", "s", "]"}], "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"D1", "[", "s", "]"}], ",", 
     RowBox[{"N1", "[", "s", "]"}]}], "]"}]}], ";", 
  RowBox[{"TraditionalForm", "[", 
   RowBox[{"DN", "[", "s", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6513528933257027`*^9, 3.651352907621656*^9}, {
  3.651352972662306*^9, 3.651353025374586*^9}, {3.651356702600258*^9, 
  3.651356706438117*^9}, {3.6514317517752633`*^9, 3.651431763948384*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"56b49c97-b210-4032-8435-96456f80d518"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "-", "1"}], ")"}], " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{"s", "+", "1"}], ")"}]}]},
     {"1"},
     {
      RowBox[{"s", "-", "1"}]},
     {
      SuperscriptBox["s", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.6513529089907913`*^9, {3.6513529679478397`*^9, 3.6513530261610813`*^9}, 
   3.651356708155239*^9, 3.651357032022594*^9, 3.6514203021260157`*^9, {
   3.651431743519826*^9, 3.651431766042838*^9}, 3.6514326123355894`*^9, 
   3.651850413060766*^9, 3.6518508977380004`*^9, 3.7837327006980667`*^9, {
   3.783732982984148*^9, 3.78373300163069*^9}, 3.7837350122567177`*^9, 
   3.78373987842194*^9, 3.783742195393031*^9, 3.78377503463776*^9, 
   3.7843090989484873`*^9, 3.7849116597493787`*^9, 3.784911812780014*^9, 
   3.7849142728682537`*^9, 3.78499918049981*^9, 3.7850910345817046`*^9, 
   3.7850918538994913`*^9, 3.7851098440872464`*^9, 3.785112650335189*^9, 
   3.785178845160668*^9, 3.8275278811354537`*^9, 3.890127991481821*^9, 
   3.890691178772067*^9, 3.891074543557969*^9, 3.89107471993451*^9, 
   3.891080354839529*^9},
 CellLabel->
  "Out[6]//TraditionalForm=",ExpressionUUID->"d338d1ae-f752-41f5-8154-\
a823fc1a8ab5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
ExtendedHermiteForm and other helpful functions given in course documents:\
\>", "Subsubsection",
 CellChangeTimes->{{3.6514318500504794`*^9, 3.6514318566828585`*^9}, {
  3.6514318919868083`*^9, 3.6514319022311306`*^9}, {3.891075105114663*^9, 
  3.8910751282046137`*^9}},ExpressionUUID->"b7a6b6fa-84d1-473e-a6ed-\
18ccd5c46d48"],

Cell[TextData[{
 "ExtendedHermiteForm[",
 StyleBox["A",
  FontSlant->"Italic"],
 ",",
 StyleBox["s",
  FontSlant->"Italic"],
 "] yields the Hermite form ",
 StyleBox["H",
  FontSlant->"Italic"],
 " of a matrix",
 StyleBox[" A",
  FontSlant->"Italic"],
 " of polynomials in ",
 StyleBox["s",
  FontSlant->"Italic"],
 ". The result is a list {",
 StyleBox["H",
  FontSlant->"Italic"],
 ",",
 StyleBox["U",
  FontSlant->"Italic"],
 "} such that ",
 StyleBox["H",
  FontSlant->"Italic"],
 "=",
 StyleBox["U.A",
  FontSlant->"Italic"],
 " with ",
 StyleBox["U",
  FontSlant->"Italic"],
 " unimodular"
}], "Text",
 CellChangeTimes->{{3.651431910302951*^9, 3.6514319496654406`*^9}, {
  3.651851013793321*^9, 3.651851049375512*^9}, {3.891075064124434*^9, 
  3.891075070662866*^9}},ExpressionUUID->"84715eec-0317-4723-b362-\
b2f4dd6112a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"myBlockDiagonalMatrix", "[", 
    RowBox[{"b", ":", 
     RowBox[{"{", 
      RowBox[{"__", "?", "MatrixQ"}], "}"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", "c", ",", 
       RowBox[{"n", "=", 
        RowBox[{"Length", "[", "b", "]"}]}], ",", "i", ",", "j"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r", ",", "c"}], "}"}], "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"Dimensions", "/@", "b"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"c", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "n"}], "}"}]}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindMin", "[", 
     RowBox[{"at_", ",", "kt_", ",", "xt_", ",", "pt_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "=", "at"}], ",", 
        RowBox[{"k", "=", "kt"}], ",", 
        RowBox[{"x", "=", "xt"}], ",", 
        RowBox[{"p", "=", "pt"}], ",", "i", ",", "rgmin", ",", "degmin"}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"i", "=", "k"}], ";", 
          RowBox[{"rgmin", "=", "k"}], ";", 
          RowBox[{"degmin", "=", 
           RowBox[{"+", "Infinity"}]}]}], ",", 
         RowBox[{"i", "\[LessEqual]", "p"}], ",", 
         RowBox[{"i", "++"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=!=", "0"}], "&&", 
            RowBox[{
             RowBox[{"Exponent", "[", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}], "<", 
             "degmin"}]}], ",", 
           RowBox[{
            RowBox[{"rgmin", "=", "i"}], ";", "\[IndentingNewLine]", 
            RowBox[{"degmin", "=", 
             RowBox[{"Exponent", "[", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}]}]}]}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", "rgmin"}]}], "]"}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Variabile", "[", "at_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "=", "at"}], ",", "xt"}], "}"}], ",", 
      RowBox[{
       RowBox[{"xt", "=", 
        RowBox[{"Variables", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"xt", "===", 
          RowBox[{"{", "}"}]}], ",", "d", ",", 
         RowBox[{"xt", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtPolQ", "[", 
     RowBox[{"lt_List", ",", 
      RowBox[{"xt_", ":", 
       RowBox[{"{", "}"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", "=", "xt"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "===", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Variables", "[", "lt", "]"}], "]"}], ">", "1"}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"General", "::", "badarg"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "$Failed", "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"x", "===", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"x", "=", 
            RowBox[{"Variabile", "[", "lt", "]"}]}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "If", " ", "all", " ", "the", " ", "components", " ", "of", " ", "lt",
          " ", "are", " ", "polynomials", " ", "in", " ", "x"}], "*)"}], 
       RowBox[{
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"PolynomialQ", "[", 
             RowBox[{"#", ",", "x"}], "]"}], "&"}], "/@", 
           RowBox[{"Flatten", "[", "lt", "]"}]}]}], "]"}], "||", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"or", " ", "in", " ", 
           RowBox[{"x", "^", 
            RowBox[{"-", "1"}]}]}], ",", 
          RowBox[{"the", " ", "function", " ", "returns", " ", "True"}], ",", 
          
          RowBox[{"False", " ", 
           RowBox[{"otherwise", ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "Substituting", " ", "all", " ", "the", " ", "symbols", " ", 
               RowBox[{"x", "^", 
                RowBox[{"-", "n"}]}]}], "\[Rule]", 
              RowBox[{
               RowBox[{"x", "^", "n"}], " ", "we", " ", "can", " ", "use", 
               " ", "PolynomialQ", " ", "also", " ", "in", " ", "this", " ", 
               "case"}]}], ")"}]}]}]}], "*)"}], 
        RowBox[{"Apply", "[", 
         RowBox[{"And", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"PolynomialQ", "[", 
             RowBox[{"#", ",", "x"}], "]"}], "&"}], "/@", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"Expand", "[", "lt", "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"x", "^", 
                  RowBox[{"(", 
                   RowBox[{"n", ":", "_"}], ")"}]}], ")"}], "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"x", "^", 
                  RowBox[{"-", "n"}]}], ")"}]}], ",", 
               RowBox[{"x", "\[Rule]", 
                RowBox[{"x", "^", 
                 RowBox[{"-", "1"}]}]}]}], "}"}]}], "]"}]}]}], "]"}]}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtendedHermiteForm", "[", 
    RowBox[{"at_", ",", 
     RowBox[{"xt_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "=", "at"}], ",", "p", ",", "m", ",", 
        RowBox[{"x", "=", "xt"}], ",", "u", ",", "v", ",", "k", ",", "kcl", 
        ",", "i", ",", "j", ",", "q", ",", "deg", ",", "esp", ",", "coef", 
        ",", "rg", ",", "rmin", ",", "upc", ",", "lpc", ",", 
        RowBox[{"ch", "=", "False"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "===", 
           RowBox[{"{", "}"}]}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Variables", "[", "a", "]"}], "]"}], ">", "1"}]}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"General", "::", "badarg"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "$Failed", "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"x", "===", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"x", "=", 
            RowBox[{"Variabile", "[", "a", "]"}]}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"ExtPolQ", "[", 
           RowBox[{"a", ",", "x"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"General", "::", "pol"}], "]"}], ";", 
          RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"Apply", "[", 
           RowBox[{"And", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"PolynomialQ", "[", 
               RowBox[{"#", ",", "x"}], "]"}], "&"}], "/@", 
             RowBox[{"Flatten", "[", "a", "]"}]}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"a", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "^", 
                RowBox[{"(", 
                 RowBox[{"n", ":", "_"}], ")"}]}], ")"}], "\[Rule]", 
              RowBox[{"(", 
               RowBox[{"x", "^", 
                RowBox[{"-", "n"}]}], ")"}]}], "}"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ch", "=", "True"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"(*", 
        RowBox[{"Initialize", " ", "the", " ", "variables"}], "*)"}], 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p", ",", "m"}], "}"}], "=", 
        RowBox[{"Dimensions", "[", "a", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"u", "=", 
        RowBox[{"IdentityMatrix", "[", "p", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Main", " ", "loop", " ", "on", " ", "k", " ", 
         RowBox[{"(", 
          RowBox[{"and", " ", "kcl"}], ")"}]}], "*)"}], 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "=", "1"}], ";", 
          RowBox[{"kcl", "=", "1"}]}], ",", 
         RowBox[{
          RowBox[{"k", "\[LessEqual]", "p"}], "&&", 
          RowBox[{"kcl", "\[LessEqual]", "m"}]}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Find", " ", "the", " ", "first", " ", "non"}], "-", 
           RowBox[{
           "zero", " ", "element", " ", "in", " ", "row", " ", "k"}]}], 
          "*)"}], 
         RowBox[{
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"a", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"k", ",", "p"}], "]"}], ",", "kcl"}], "]"}], "]"}], 
              "===", 
              RowBox[{"Table", "[", 
               RowBox[{"0", ",", 
                RowBox[{"{", 
                 RowBox[{"p", "-", "k", "+", "1"}], "}"}]}], "]"}]}], "&&", 
             RowBox[{"kcl", "<", "m"}]}], ",", 
            RowBox[{"kcl", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "With", " ", "this", " ", "loop", " ", "we", " ", "eliminate", " ",
             "all", " ", "the", " ", "elements", " ", "in", " ", "column", 
            " ", "kcl", " ", "below", " ", "position", " ", "k"}], "*)"}], 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"k", "\[Equal]", "p"}], ",", "False", ",", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{
                    RowBox[{"k", "+", "1"}], ",", "p"}], "]"}], ",", "kcl"}], 
                 "]"}], "]"}], "=!=", 
               RowBox[{"Table", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"{", 
                  RowBox[{"p", "-", "k"}], "}"}]}], "]"}]}]}], "]"}], ",", 
            RowBox[{"(*", 
             RowBox[{
             "Put", " ", "the", " ", "least", " ", "degree", " ", "element", 
              " ", "within", " ", "column", " ", "kcl", " ", "in", " ", 
              "position", " ", 
              RowBox[{"(", 
               RowBox[{"k", ",", "kcl"}], ")"}]}], "*)"}], 
            RowBox[{
             RowBox[{"rmin", "=", 
              RowBox[{"FindMin", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Transpose", "[", "a", "]"}], "[", 
                 RowBox[{"[", "kcl", "]"}], "]"}], ",", "k", ",", "x", ",", 
                "p"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"rmin", "\[NotEqual]", "k"}], ",", 
               RowBox[{
                RowBox[{"a", "=", 
                 RowBox[{"a", "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "rmin", "]"}], "]"}], "\[Rule]", 
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
                    RowBox[{"a", "[", 
                    RowBox[{"[", "rmin", "]"}], "]"}]}]}], "}"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"u", "=", 
                 RowBox[{"u", "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "rmin", "]"}], "]"}], "\[Rule]", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "\[Rule]", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "rmin", "]"}], "]"}]}]}], "}"}]}]}]}]}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
               "Lower", " ", "the", " ", "degree", " ", "of", " ", "non"}], 
               "-", 
               RowBox[{
               "zero", " ", "polynomials", " ", "in", " ", "column", " ", 
                "kcl", " ", "below", " ", 
                RowBox[{"a", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", ",", "kcl"}], "]"}], "]"}]}]}], "*)"}], 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"i", "=", 
                RowBox[{"k", "+", "1"}]}], ",", 
               RowBox[{"i", "\[LessEqual]", "p"}], ",", 
               RowBox[{"i", "++"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "kcl"}], "]"}], "]"}], "=!=", "0"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"lpc", "=", 
                   RowBox[{"PolynomialQuotient", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "kcl"}], "]"}], "]"}], ",", 
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "kcl"}], "]"}], "]"}], ",", "x"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"a", "=", 
                   RowBox[{"ReplacePart", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"Together", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "*", "lpc"}]}], "]"}], 
                    ",", "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"u", "=", 
                   RowBox[{"ReplacePart", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"Expand", "[", 
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "*", "lpc"}]}], "]"}], 
                    ",", "i"}], "]"}]}]}]}], "]"}]}], "]"}]}]}], "]"}], ";", 
          RowBox[{"(*", "Endwhile", "*)"}], 
          RowBox[{"(*", 
           RowBox[{
           "In", " ", "column", " ", "kcl", " ", "lower", " ", "the", " ", 
            "degree", " ", "of", " ", "polynomials", " ", "above", " ", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "kcl"}], "]"}], "]"}], " ", "having", " ", 
            "the", " ", "degree", " ", "higher", " ", "than", " ", "that", 
            " ", "of", " ", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "kcl"}], "]"}], "]"}]}], "*)"}], 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "kcl"}], "]"}], "]"}], "=!=", "0"}], ",", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", "k"}], ",", 
              RowBox[{"i", "++"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "kcl"}], "]"}], "]"}], "=!=", "0"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Exponent", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "kcl"}], "]"}], "]"}], ",", "x"}], 
                    "]"}], "\[GreaterEqual]", 
                   RowBox[{"Exponent", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "kcl"}], "]"}], "]"}], ",", "x"}], 
                    "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"lpc", "=", 
                    RowBox[{"PolynomialQuotient", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "kcl"}], "]"}], "]"}], ",", 
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "kcl"}], "]"}], "]"}], ",", "x"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"a", "=", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"a", ",", 
                    RowBox[{"Together", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "*", "lpc"}]}], "]"}], 
                    ",", "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"u", "=", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"Expand", "[", 
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "*", "lpc"}]}], "]"}], 
                    ",", "i"}], "]"}]}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Make", " ", 
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "kcl"}], "]"}], "]"}], " ", "monic"}], "*)"}], 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "kcl"}], "]"}], "]"}], "=!=", "0"}], ",", 
            RowBox[{
             RowBox[{"lpc", "=", 
              RowBox[{"Coefficient", "[", 
               RowBox[{
                RowBox[{"a", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", ",", "kcl"}], "]"}], "]"}], ",", "x", ",", 
                RowBox[{"Exponent", "[", 
                 RowBox[{
                  RowBox[{"a", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", ",", "kcl"}], "]"}], "]"}], ",", "x"}], 
                 "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"lpc", "=!=", "1"}], ",", 
               RowBox[{
                RowBox[{"a", "=", 
                 RowBox[{"ReplacePart", "[", 
                  RowBox[{"a", ",", 
                   RowBox[{"Expand", "[", 
                    RowBox[{
                    RowBox[{"a", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "/", "lpc"}], "]"}], ",", 
                   "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"u", "=", 
                 RowBox[{"ReplacePart", "[", 
                  RowBox[{"u", ",", 
                   RowBox[{"Expand", "[", 
                    RowBox[{
                    RowBox[{"u", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "/", "lpc"}], "]"}], ",", 
                   "k"}], "]"}]}]}]}], "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"kcl", "++"}]}]}], "]"}], ";", 
       RowBox[{"(*", "Endfor", "*)"}], 
       RowBox[{"(*", 
        RowBox[{
        "Put", " ", "all", " ", "the", " ", "zero", " ", "rows", " ", "in", 
         " ", "the", " ", "last", " ", "positions"}], "*)"}], 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "<", "p"}], ",", 
         RowBox[{"k", "++"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", "k", "]"}], "]"}], "===", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", "m", "}"}]}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"i", "=", "p"}], ";", "\[IndentingNewLine]", 
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"a", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "===", 
                RowBox[{"Table", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"{", "m", "}"}]}], "]"}]}], "&&", 
               RowBox[{"i", ">", "k"}]}], ",", 
              RowBox[{"i", "=", 
               RowBox[{"i", "-", "1"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", ">", "k"}], ",", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"j", "=", "k"}], ",", 
                RowBox[{"j", "\[LessEqual]", "i"}], ",", 
                RowBox[{"j", "++"}], ",", 
                RowBox[{
                 RowBox[{"a", "=", 
                  RowBox[{"ReplacePart", "[", 
                   RowBox[{"a", ",", 
                    RowBox[{"a", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "+", "1"}], "]"}], "]"}], ",", "j"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"u", "=", 
                  RowBox[{"ReplacePart", "[", 
                   RowBox[{"u", ",", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "+", "1"}], "]"}], "]"}], ",", "j"}], 
                   "]"}]}]}]}], "]"}]}], "]"}], ";"}]}], "]"}]}], 
        RowBox[{"(*", "endif", "*)"}], "]"}], ";", 
       RowBox[{"(*", "endfor", "*)"}], 
       RowBox[{"If", "[", 
        RowBox[{"ch", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "u"}], "}"}], "=", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "u"}], "}"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "^", 
               RowBox[{"(", 
                RowBox[{"n", ":", "_"}], ")"}]}], "\[Rule]", 
              RowBox[{"x", "^", 
               RowBox[{"-", "n"}]}]}], ",", 
             RowBox[{"x", "\[Rule]", 
              RowBox[{"x", "^", 
               RowBox[{"-", "1"}]}]}]}], "}"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"a", ",", "u"}], "}"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"MatrixQ", "[", "at", "]"}], "||", 
     RowBox[{"Message", "[", 
      RowBox[{
       RowBox[{"General", "::", "mtrx"}], ",", 
       "\"\<ExtendedHermiteForm\>\""}], "]"}]}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.651431841999446*^9, {3.6514320897734404`*^9, 3.6514321000877295`*^9}, {
   3.651432214076404*^9, 3.651432217383689*^9}, {3.6514323171864653`*^9, 
   3.6514323248618793`*^9}, {3.6514326703507795`*^9, 
   3.6514326733022547`*^9}, {3.6518508391971908`*^9, 
   3.6518508412634673`*^9}, {3.651851104355658*^9, 3.6518511051388874`*^9}, 
   3.783733887002005*^9, 3.890128066574518*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"6a12a0ee-f05a-408a-8d4f-b1e413efcbda"],

Cell[BoxData[
 TemplateBox[{
  "SetDelayed", "write", 
   "\:f3b5Tag BlockDiagonalMatrix in \!\(BlockDiagonalMatrix[b : \
{__?MatrixQ}]\) is Protected.\:f3b5", 2, 203, 10, 23985850225408363824, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.890127962147509*^9, 
  3.89012810874358*^9},ExpressionUUID->"05bda47c-5bcf-448d-b0cc-bcefeff7bbca"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Minimal Order State Space Realization", "Subsection",
 CellChangeTimes->{{3.783732877620532*^9, 
  3.7837328952542686`*^9}},ExpressionUUID->"969593d9-b0ba-405e-94b7-\
b930718f8583"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"H", ",", "U"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"H", "[", "s", "]"}], ",", 
      RowBox[{"U", "[", "s", "]"}]}], "}"}], "=", 
    RowBox[{"ExtendedHermiteForm", "[", 
     RowBox[{
      RowBox[{"DN", "[", "s", "]"}], ",", "s"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "[", "s", "]"}], "//", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"U", "[", "s", "]"}], "//", "Simplify"}], "//", 
    "TraditionalForm"}], ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Wg", "[", "s", "]"}], "=", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"H", "[", "s", "]"}], ",", 
     RowBox[{"Length", "[", 
      RowBox[{"D1", "[", "s", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\!\(\*SubscriptBox[\(W\), \(g\)]\)(s) = \>\"", ",", 
   RowBox[{"Wg", "[", "s", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.783733222950739*^9, 3.7837332894912577`*^9}, 
   3.7850917932799025`*^9, {3.78509186621233*^9, 3.785091875869753*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"266e69b5-9083-4237-90bd-fe603656647a"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1"},
     {"0"},
     {"0"},
     {"0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.783732686927472*^9, 3.7837330278604717`*^9, {3.783733259402375*^9, 
   3.7837332902021914`*^9}, 3.783735012308548*^9, 3.783739878486972*^9, 
   3.783742195463471*^9, 3.7837750347101097`*^9, 3.7843091161464834`*^9, 
   3.784911659838339*^9, 3.784911812864964*^9, 3.784914272960458*^9, 
   3.78499918085067*^9, 3.785091058320373*^9, 3.785091808988901*^9, 
   3.7850918770110893`*^9, 3.785109844198181*^9, 3.7851126504271355`*^9, 
   3.785178845213814*^9, 3.827527891946971*^9, 3.8901279949059057`*^9, 
   3.8901281156975603`*^9, 3.8906911830998373`*^9, 3.89107454830018*^9, 
   3.89107472458992*^9, 3.8910803640203342`*^9},
 CellLabel->
  "Out[14]//TraditionalForm=",ExpressionUUID->"2dcbe472-a452-4941-8f62-\
30f8fbb2b50d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(W\\), \\(g\\)]\\)(s) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}]}],
  SequenceForm["\!\(\*SubscriptBox[\(W\), \(g\)]\)(s) = ", {{1}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.783733290205368*^9, 3.783735012322362*^9, 
  3.7837398785100517`*^9, 3.7837421954660482`*^9, 3.783775034712522*^9, 
  3.7843091161524925`*^9, 3.7849116598423333`*^9, 3.7849118128829536`*^9, 
  3.78491427296439*^9, 3.7849991808712673`*^9, 3.7850910583243527`*^9, 
  3.785091808994899*^9, 3.785091877015087*^9, 3.7851098442051764`*^9, 
  3.7851126504321327`*^9, 3.785178845216416*^9, 3.8275278919614205`*^9, 
  3.890127994909341*^9, 3.8901281157012*^9, 3.89069118315061*^9, 
  3.8910745483066683`*^9, 3.891074724594936*^9, 3.891080364025659*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"d22833fb-1767-49cb-81f9-6c61cf786bbf"]
}, Open  ]],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["W", "g"], "(", "s", ")"}], " ", "=", " ", "I"}], 
   TraditionalForm]],ExpressionUUID->"60f79443-24cb-4f0d-b645-d3738cb1aa9c"],
 ". \nRealization already has the minimal number of states."
}], "Text",
 CellChangeTimes->{{3.7837333100474663`*^9, 3.783733371725522*^9}, {
  3.7837341295596447`*^9, 3.783734131315752*^9}, {3.8910803724745073`*^9, 
  3.8910803880805883`*^9}},ExpressionUUID->"e6f5a9e9-2b62-4c35-b23b-\
7fde908b659d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Controller Form Realization of MFD", "Subsection",
 CellChangeTimes->{{3.651366063514999*^9, 3.651366080602545*^9}, 
   3.7779173570450935`*^9, 3.777917600276498*^9, {3.777917642307438*^9, 
   3.777917664275324*^9}, {3.777931018548155*^9, 
   3.777931046839435*^9}},ExpressionUUID->"6ef83d0d-a693-4b17-8425-\
4dd7df65ffa3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<D(s) = \>\"", ",", 
   RowBox[{
    RowBox[{"D1", "[", "s", "]"}], "//", "Expand"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.777917782020051*^9, 3.7779177885782595`*^9}, {
  3.777917821525508*^9, 3.7779179267956066`*^9}, {3.777918670370057*^9, 
  3.77791867260973*^9}, {3.777919245949049*^9, 3.777919257451863*^9}, {
  3.7779193441250687`*^9, 3.7779193497266474`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"654434f0-88d5-4605-bf4c-f19ffc830b33"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"D(s) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "s"}], "+", 
      SuperscriptBox["s", "3"]}], "}"}], "}"}]}],
  SequenceForm["D(s) = ", {{-$CellContext`s + $CellContext`s^3}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7779178409529724`*^9, {3.7779179048881235`*^9, 3.7779179273512917`*^9}, 
   3.7779186730465164`*^9, 3.7779192464829617`*^9, {3.7779193449645867`*^9, 
   3.777919350403257*^9}, 3.777930175616632*^9, 3.7779909266970544`*^9, 
   3.783733641367569*^9, 3.783735012343656*^9, 3.783739878524866*^9, 
   3.783742195477453*^9, 3.783775034727984*^9, 3.784309129153941*^9, 
   3.7849116599502726`*^9, 3.784911812903941*^9, 3.784914272981099*^9, 
   3.784999180939094*^9, 3.7850919152595654`*^9, 3.785109844271146*^9, 
   3.7851126504930964`*^9, 3.7851788452722893`*^9, 3.890128132143003*^9, 
   3.890691186478386*^9, 3.891074550166491*^9, 3.891074732718934*^9, 
   3.8910804057208652`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"bff56334-2204-456b-85ca-6851ceafaee0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"j", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"D1", "[", "s", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"Exponent", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"D1", "[", "s", "]"}], "\[Transpose]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "s"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S", "[", "s", "]"}], "=", 
   RowBox[{"DiagonalMatrix", "[", 
    SuperscriptBox["s", "k"], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dhc", "=", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"D1", "[", "s", "]"}], "\[Transpose]"}], ",", 
      SuperscriptBox["s", "k"]}], "]"}], "\[Transpose]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<k = \>\"", ",", 
   RowBox[{"k", "//", "MatrixForm"}], ",", "\"\<;\\tS(s) = \>\"", ",", 
   RowBox[{"S", "[", "s", "]"}], ",", 
   "\"\<;\\t \!\(\*SubscriptBox[\(D\), \(hc\)]\) = \>\"", ",", "Dhc"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.777917935132189*^9, 3.777917973235611*^9}, {
  3.777918045750128*^9, 3.777918062407254*^9}, {3.7779192083722763`*^9, 
  3.7779192120611196`*^9}, {3.777919260225134*^9, 3.7779192633429756`*^9}, {
  3.7779193363080163`*^9, 3.77791937121303*^9}, {3.7779194488186884`*^9, 
  3.7779195399489155`*^9}, {3.777930193055221*^9, 3.7779302112230453`*^9}, {
  3.78373367506146*^9, 3.783733699687276*^9}, {3.8275279075697985`*^9, 
  3.8275279135148478`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"f5947b63-3205-4c96-918f-1e1cb01d7bbd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"k = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"3"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\";\\tS(s) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"{", 
     SuperscriptBox["s", "3"], "}"}], "}"}], 
   "\[InvisibleSpace]", "\<\";\\t \\!\\(\\*SubscriptBox[\\(D\\), \\(hc\\)]\\) \
= \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}]}],
  SequenceForm["k = ", 
   MatrixForm[{3}], ";\tS(s) = ", {{$CellContext`s^3}}, 
   ";\t \!\(\*SubscriptBox[\(D\), \(hc\)]\) = ", {{1}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.777919491237039*^9, {3.7779195358469195`*^9, 3.777919540418645*^9}, {
   3.7779301776499357`*^9, 3.777930212392455*^9}, 3.7779302804958763`*^9, 
   3.777990926739029*^9, {3.783733648897232*^9, 3.78373370012953*^9}, 
   3.7837350123545017`*^9, 3.7837398785530977`*^9, 3.7837421954994087`*^9, 
   3.783775034758832*^9, 3.7843091385344887`*^9, 3.7849116600142403`*^9, 
   3.7849118129269276`*^9, 3.784914273019167*^9, 3.7849991810606117`*^9, 
   3.7850919256165404`*^9, 3.7851098443420963`*^9, 3.785112650554061*^9, 
   3.785178845283812*^9, 3.827527916055087*^9, 3.890128137047132*^9, 
   3.89069118796572*^9, 3.891074551557188*^9, 3.891074733997031*^9, 
   3.8910804074146013`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"b207668b-72e6-40da-aec9-8fd698e7ccd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Build up \[Psi](",
 StyleBox["s",
  FontSlant->"Italic"],
 "), ",
 StyleBox["L",
  FontSlant->"Italic"],
 "(",
 StyleBox["s",
  FontSlant->"Italic"],
 "), and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["D", "lc"], TraditionalForm]],ExpressionUUID->
  "1b99736c-66a9-4a86-b1b3-aaea095e3279"],
 " :"
}], "Subsubsection",
 CellChangeTimes->{{3.652039787165371*^9, 3.6520397994192905`*^9}, {
  3.6520398579994435`*^9, 3.652039860308303*^9}, {3.652041965870859*^9, 
  3.6520420161443663`*^9}},ExpressionUUID->"b7be06e5-c607-4991-8fd0-\
9dee16bc8d39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"L", "[", "s", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"D1", "[", "s", "]"}], "-", 
     RowBox[{"Dhc", ".", 
      RowBox[{"S", "[", "s", "]"}]}]}], "//", "Expand"}]}], ";", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<L(s) = \>\"", ",", 
    RowBox[{"L", "[", "s", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7779198649188766`*^9, 3.7779199272284675`*^9}, {
  3.827527926175377*^9, 3.8275279418122697`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"13680301-7bc1-4caf-aa28-e3a6ab5f45ac"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"L(s) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"-", "s"}], "}"}], "}"}]}],
  SequenceForm["L(s) = ", {{-$CellContext`s}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7779199278420706`*^9, 3.77793018208086*^9, 
  3.7779302828031282`*^9, 3.7779909268369894`*^9, 3.783733651630966*^9, 
  3.7837337275506907`*^9, 3.783735012375964*^9, 3.783739878566475*^9, 
  3.783742195510438*^9, 3.783761670655814*^9, 3.783775034775525*^9, 
  3.784309165250973*^9, 3.784911660134165*^9, 3.784911812949914*^9, 
  3.784914273041286*^9, 3.784999181154439*^9, 3.785091930171886*^9, 
  3.785109844405059*^9, 3.785112650612026*^9, 3.785178845310254*^9, 
  3.8275279430273027`*^9, 3.89012817061712*^9, 3.890691190527692*^9, 
  3.891074553532465*^9, 3.8910747359271584`*^9, 3.8910804094626102`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"10e0deec-a291-4b47-8c00-2379477bd016"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Reverse", "[", 
      SuperscriptBox["s", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"k", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "-", "1"}]}], "]"}]], "]"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", "[", "s", "]"}], "=", 
  RowBox[{
   RowBox[{"myBlockDiagonalMatrix", "[", "p2", "]"}], 
   "\[Transpose]"}]}]}], "Input",
 CellChangeTimes->{{3.7779197969399805`*^9, 3.77791979737673*^9}, {
   3.827527951577979*^9, 3.8275279521063585`*^9}, 3.890128082942904*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"d9ac7a2e-4071-422b-99d7-0700ccc6f0f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["s", "2"], ",", "s", ",", "1"}], "}"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7779198088023615`*^9, 3.777930284956505*^9, 3.7779909268609686`*^9, 
   3.7837338108553963`*^9, 3.7837339004648647`*^9, 3.7837350123860703`*^9, 
   3.7837398785896063`*^9, 3.783742195534253*^9, 3.7837616737885303`*^9, 
   3.783775034805851*^9, 3.78430919008055*^9, 3.784911660320055*^9, 
   3.784911812971901*^9, 3.784914273108531*^9, 3.784999181241415*^9, 
   3.7850919345973067`*^9, 3.785109844478016*^9, 3.7851126506699924`*^9, 
   3.7851788453254213`*^9, {3.8275279482618155`*^9, 3.8275279527049046`*^9}, 
   3.890128176573186*^9, 3.890691191927679*^9, 3.891074557848234*^9, 
   3.891074736968574*^9, 3.8910804106639967`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"ca6570be-c2b3-438b-b0f5-2002f6f2eac3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    SuperscriptBox["s", "2"], "}"}], ",", 
   RowBox[{"{", "s", "}"}], ",", 
   RowBox[{"{", "1", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7779198088023615`*^9, 3.777930284956505*^9, 3.7779909268609686`*^9, 
   3.7837338108553963`*^9, 3.7837339004648647`*^9, 3.7837350123860703`*^9, 
   3.7837398785896063`*^9, 3.783742195534253*^9, 3.7837616737885303`*^9, 
   3.783775034805851*^9, 3.78430919008055*^9, 3.784911660320055*^9, 
   3.784911812971901*^9, 3.784914273108531*^9, 3.784999181241415*^9, 
   3.7850919345973067`*^9, 3.785109844478016*^9, 3.7851126506699924`*^9, 
   3.7851788453254213`*^9, {3.8275279482618155`*^9, 3.8275279527049046`*^9}, 
   3.890128176573186*^9, 3.890691191927679*^9, 3.891074557848234*^9, 
   3.891074736968574*^9, 3.891080410669065*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"148a74ee-5d8b-466c-96ea-1327be8c0710"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d2", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["d", "##"], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Total", "[", "k", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol1", "=", 
   RowBox[{
    RowBox[{"SolveAlways", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"L", "[", "s", "]"}], "]"}], "\[Equal]", 
        RowBox[{"Flatten", "[", 
         RowBox[{"d2", ".", 
          RowBox[{"\[Psi]", "[", "s", "]"}]}], "]"}]}], "]"}], ",", "s"}], 
     "]"}], "//", "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dlc", "=", 
   RowBox[{"d2", "/.", "sol1"}]}], ";", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<\!\(\*SubscriptBox[\(D\), \(lc\)]\) = \>\"", ",", "Dlc"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7779205280717735`*^9, {3.7779205835111074`*^9, 3.7779206041113715`*^9}, {
   3.7779206773237305`*^9, 3.777920715960829*^9}, {3.8275279564116535`*^9, 
   3.827527957131685*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"87983dd2-3f2b-49ba-8775-d5858573830b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(D\\), \\(lc\\)]\\) = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "1"}], ",", "0"}], "}"}], "}"}]}],
  SequenceForm["\!\(\*SubscriptBox[\(D\), \(lc\)]\) = ", {{0, -1, 0}}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7779207090525827`*^9, 3.7779207168752985`*^9}, 
   3.77793028893538*^9, 3.777990926940919*^9, 3.7837338150641623`*^9, 
   3.783733903695258*^9, 3.783735012409404*^9, 3.783739878602993*^9, 
   3.783742195546212*^9, 3.7837750348211317`*^9, 3.7843092171058383`*^9, 
   3.784911660432975*^9, 3.784911812998885*^9, 3.7849142731684113`*^9, 
   3.78499918137995*^9, 3.7850919381582184`*^9, 3.785109844556969*^9, 
   3.7851126507359543`*^9, 3.785178845354961*^9, 3.827527957634176*^9, 
   3.8901281788718433`*^9, 3.890691193474246*^9, 3.8910745590295143`*^9, 
   3.891074738144986*^9, 3.891080412508149*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"5e5120a6-6e11-4f71-aa11-f1920ad2c8a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dlc", ".", 
   RowBox[{"\[Psi]", "[", "s", "]"}]}], "+", 
  RowBox[{"Dhc", ".", 
   RowBox[{"S", "[", "s", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7843092538644876`*^9, 3.7843092564889755`*^9}, {
  3.784309308668654*^9, 3.7843093090834427`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"42eef8af-116f-45bc-b229-3b90a656c2be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "s"}], "+", 
    SuperscriptBox["s", "3"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7843092569447126`*^9, 3.784309309871972*^9, 
  3.784911660452976*^9, 3.7849118130218716`*^9, 3.784914273192384*^9, 
  3.784999181416209*^9, 3.7850919407737074`*^9, 3.7851098446299257`*^9, 
  3.7851126507969184`*^9, 3.785178845370429*^9, 3.8275279604679823`*^9, 
  3.890128183826776*^9, 3.890691194942341*^9, 3.891080413802884*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"a2ba120f-7747-46e1-878c-030c62350173"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Build up ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["A", "c", "0"], TraditionalForm]],ExpressionUUID->
  "62695091-0529-473a-b78f-739239c3bc80"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["B", "c", "0"], TraditionalForm]],ExpressionUUID->
  "11ada7b1-e482-4f33-9f2b-e80ece7aabb1"],
 ":"
}], "Subsubsection",
 CellChangeTimes->{{3.652039787165371*^9, 3.6520397994192905`*^9}, {
  3.6520398579994435`*^9, 3.652039860308303*^9}, {3.652041965870859*^9, 
  3.652042103090012*^9}, {3.65209876145965*^9, 3.652098765391951*^9}, {
  3.777930523092989*^9, 
  3.7779305271959*^9}},ExpressionUUID->"2cdf9d55-7e1b-473f-b0a2-5b53ac8de0fb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ai", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"k", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", "1"}], ",", "1"}], "]"}]}], 
        "]"}], ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"k", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ac0", "=", 
   RowBox[{"myBlockDiagonalMatrix", "[", "Ai", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"UnitVector", "[", 
       RowBox[{
        RowBox[{"k", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Bc0", "=", 
   RowBox[{
    RowBox[{"myBlockDiagonalMatrix", "[", "Bi", "]"}], "\[Transpose]"}]}], 
  ";", 
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<\!\(TraditionalForm\`\(\*SubsuperscriptBox[\(A\), \(c\), \(0\)]\(\\\ \
\)\(=\)\(\\\ \)\)\)\>\"", ",", "Ac0", ",", 
    "\"\<\\t \!\(\*SubsuperscriptBox[\(B\), \(c\), \(0\)]\) = \>\"", ",", 
    "Bc0"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.652041740085026*^9, 3.6520417573742695`*^9}, {
   3.6520418185490484`*^9, 3.6520418534775476`*^9}, {3.6520418990601425`*^9, 
   3.652041948086403*^9}, {3.652042133107786*^9, 3.652042134184214*^9}, {
   3.6520423418712516`*^9, 3.6520423433844905`*^9}, {3.652097596797842*^9, 
   3.652097636104454*^9}, 3.6520982917115793`*^9, {3.6520989455321884`*^9, 
   3.652098947965851*^9}, {3.6526398589210873`*^9, 3.6526398698435707`*^9}, 
   3.714431021848025*^9, {3.7144451470915165`*^9, 3.7144451715546565`*^9}, {
   3.7779303360185013`*^9, 3.77793040661027*^9}, {3.777930463989101*^9, 
   3.777930486872168*^9}, {3.777930535936635*^9, 3.777930617559799*^9}, {
   3.7779306679905033`*^9, 3.7779306680932693`*^9}, {3.8275279670734277`*^9, 
   3.827527972087692*^9}, {3.890128074981349*^9, 3.8901280924375477`*^9}, 
   3.8901281926921263`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"e3f0e4f8-be44-4659-ad74-755c8d7feda5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(TraditionalForm\\`\\(\\*SubsuperscriptBox[\\(A\\), \
\\(c\\), \\(0\\)]\\(\\\\ \\)\\(=\\)\\(\\\\ \\)\\)\\)\"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\"\\t \\!\\(\\*SubsuperscriptBox[\\(B\\), \\(c\\), \
\\(0\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", "0", "}"}]}], "}"}]}],
  SequenceForm[
  "\!\(TraditionalForm\`\(\*SubsuperscriptBox[\(A\), \(c\), \(0\)]\(\\ \
\)\(=\)\(\\ \)\)\)", {{0, 0, 0}, {1, 0, 0}, {0, 1, 0}}, 
   "\t \!\(\*SubsuperscriptBox[\(B\), \(c\), \(0\)]\) = ", {{1}, {0}, {0}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7779304882050943`*^9, {3.777930594138452*^9, 3.7779306180419064`*^9}, 
   3.777930668940216*^9, 3.7779909269648933`*^9, 3.783733906411619*^9, 
   3.78373501242025*^9, 3.7837398786269217`*^9, 3.7837421955704308`*^9, 
   3.783775034850854*^9, 3.7843092741637125`*^9, 3.784911660519924*^9, 
   3.7849118130458574`*^9, 3.784914273253941*^9, 3.7849991815082483`*^9, 
   3.785091945889491*^9, 3.785109844773841*^9, 3.785112650858882*^9, 
   3.785178845397955*^9, {3.8275279641789694`*^9, 3.827527972600312*^9}, 
   3.890128194511259*^9, 3.890691196288616*^9, 3.891074560474401*^9, 
   3.8910747408214684`*^9, 3.89108041629325*^9},
 CellLabel->
  "During evaluation of \
In[31]:=",ExpressionUUID->"5834aa5c-deaf-4649-874f-acd3be2c824c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Obtain the matrices for the controller - form state space realization :\
\>", "Subsubsection",
 CellChangeTimes->{{3.652119257734663*^9, 
  3.6521192994761353`*^9}},ExpressionUUID->"aafff173-ffed-49e7-bbf8-\
5026437334fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Ac0", "-", 
    RowBox[{"Bc0", ".", 
     RowBox[{"Inverse", "[", "Dhc", "]"}], ".", "Dlc"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"Bc0", ".", 
    RowBox[{"Inverse", "[", "Dhc", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.65209928572268*^9, 3.6520993142496185`*^9}, {
  3.7779306264216967`*^9, 3.777930681088911*^9}, {3.7850919853215103`*^9, 
  3.785091986172015*^9}, {3.8275279787443323`*^9, 3.8275279815753*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"a3071a5c-ac15-47cc-9340-b83c5718ac21"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nlc2", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["nlc", "##"], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"N1", "[", "s", "]"}], "]"}], ",", 
       RowBox[{"Total", "[", "k", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", "=", 
   RowBox[{
    RowBox[{"SolveAlways", "[", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"N1", "[", "s", "]"}], "]"}], "\[Equal]", 
        RowBox[{"Flatten", "[", 
         RowBox[{"nlc2", ".", 
          RowBox[{"\[Psi]", "[", "s", "]"}]}], "]"}]}], "]"}], ",", "s"}], 
     "]"}], "//", "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cm", "=", 
   RowBox[{"nlc2", "/.", "sol2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.652120910753295*^9, 3.6521209774956083`*^9}, {
   3.6521210116214867`*^9, 3.6521210250554314`*^9}, {3.6526173745525265`*^9, 
   3.6526173853374033`*^9}, 3.6526174558498163`*^9, 3.6526382602724695`*^9, 
   3.6526398131521053`*^9, 3.7144418456292486`*^9, {3.714442200578047*^9, 
   3.714442201391082*^9}, {3.7144422315654535`*^9, 3.7144422362686615`*^9}, 
   3.714442701554556*^9, {3.7144457585347757`*^9, 3.714445802352808*^9}, {
   3.7144458338712735`*^9, 3.7144458726400576`*^9}, {3.7144459863502827`*^9, 
   3.7144460112934513`*^9}, {3.714446043320925*^9, 3.7144460460710516`*^9}, {
   3.777930691693556*^9, 3.7779307056558247`*^9}, {3.7779307563824*^9, 
   3.777930792566605*^9}, {3.777930889772476*^9, 3.777930924892362*^9}, {
   3.7837339161085873`*^9, 3.7837339657364264`*^9}, 3.784911765905712*^9, 
   3.785091992424371*^9, {3.827528001473107*^9, 3.8275280018989515`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"2b81a5e9-3ba5-4eb5-b0e6-f7ab4ab15c0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\!\(TraditionalForm\`\(\*SubscriptBox[\(A\), \(c\)]\(\\\ \)\(=\)\(\\\ \
\)\)\)\>\"", ",", 
   RowBox[{"A", " ", "//", "TraditionalForm"}], ",", 
   "\"\<\\t \!\(\*SubscriptBox[\(B\), \(c\)]\) = \>\"", ",", 
   RowBox[{"B", " ", "//", "TraditionalForm"}], ",", "\"\<\\t C = \>\"", ",", 
   
   RowBox[{"Cm", " ", "//", "TraditionalForm"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7850919970526743`*^9, 3.785092015196119*^9}, {
  3.8275279992446656`*^9, 3.827528021400408*^9}, {3.890128222051796*^9, 
  3.890128236073547*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"9f175437-04bd-4378-99cf-ecd8868d5199"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(TraditionalForm\\`\\(\\*SubscriptBox[\\(A\\), \
\\(c\\)]\\(\\\\ \\)\\(=\\)\\(\\\\ \\)\\)\\)\"\>", "\[InvisibleSpace]", 
   TagBox[
    FormBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "1", "0"},
        {"1", "0", "0"},
        {"0", "1", "0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     TraditionalForm],
    TraditionalForm,
    Editable->True], 
   "\[InvisibleSpace]", "\<\"\\t \\!\\(\\*SubscriptBox[\\(B\\), \\(c\\)]\\) = \
\"\>", "\[InvisibleSpace]", 
   TagBox[
    FormBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1"},
        {"0"},
        {"0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     TraditionalForm],
    TraditionalForm,
    Editable->True], "\[InvisibleSpace]", "\<\"\\t C = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    FormBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "0", "1"},
        {"0", "1", 
         RowBox[{"-", "1"}]},
        {"1", "0", "0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     TraditionalForm],
    TraditionalForm,
    Editable->True]}],
  SequenceForm[
  "\!\(TraditionalForm\`\(\*SubscriptBox[\(A\), \(c\)]\(\\ \)\(=\)\(\\ \
\)\)\)", 
   TraditionalForm[{{0, 1, 0}, {1, 0, 0}, {0, 1, 0}}], 
   "\t \!\(\*SubscriptBox[\(B\), \(c\)]\) = ", 
   TraditionalForm[{{1}, {0}, {0}}], "\t C = ", 
   TraditionalForm[{{0, 0, 1}, {0, 1, -1}, {1, 0, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7850920024755135`*^9, 3.785092016459381*^9}, 
   3.7851098449087625`*^9, 3.7851126510547667`*^9, 3.785178845505319*^9, 
   3.8275280219643683`*^9, {3.890128250451483*^9, 3.890128255086828*^9}, 
   3.890691200288776*^9},
 CellLabel->
  "During evaluation of \
In[72]:=",ExpressionUUID->"410a63ed-2c5e-4a85-bf97-6101495a7034"]
}, Open  ]],

Cell["State Space Realization is found!", "Text",
 CellChangeTimes->{{3.891080522581051*^9, 
  3.891080536657178*^9}},ExpressionUUID->"8d47b183-667f-4ad5-99fe-\
8c26b7eb2df6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["State Space Eqns", "Subsection",
 CellChangeTimes->{{3.651366063514999*^9, 3.651366080602545*^9}, 
   3.7779173570450935`*^9, 3.777917600276498*^9, {3.777917642307438*^9, 
   3.777917664275324*^9}, {3.777931018548155*^9, 3.777931046839435*^9}, {
   3.777931155314493*^9, 3.7779311618347073`*^9}, {3.7837341034618464`*^9, 
   3.783734109153014*^9}, {3.891080548420121*^9, 
   3.891080549982953*^9}},ExpressionUUID->"ed41723c-c870-45ed-974c-\
aba300f9fe50"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "[", "t_", "]"}], ":=", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "#"], "[", "t", "]"}], "&"}], ",", 
    RowBox[{"Total", "[", "k", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "[", "t_", "]"}], ":=", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["y", "#"], "[", "t", "]"}], "&"}], ",", 
    RowBox[{"Length", "[", 
     RowBox[{"N1", "[", "s", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "[", "t_", "]"}], ":=", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["u", "#"], "[", "t", "]"}], "&"}], ",", 
    RowBox[{"Length", "[", 
     RowBox[{"Bc", "\[Transpose]"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.777931434536388*^9, 3.777931441838913*^9}, {
   3.777931483156397*^9, 3.777931527254376*^9}, {3.777931619935378*^9, 
   3.777931650757688*^9}, {3.777931746623228*^9, 3.777931752373206*^9}, {
   3.7779317890884533`*^9, 3.777931790080504*^9}, {3.777933975346682*^9, 
   3.777933976288417*^9}, {3.7837346249557247`*^9, 3.783734635932254*^9}, 
   3.7850933799352465`*^9, {3.785093413783534*^9, 3.785093414468114*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"d1da30e5-99cf-4748-b061-332bb8acdc5e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SSEQ", "=", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"A", ".", 
        RowBox[{"x", "[", "t", "]"}]}], "+", 
       RowBox[{"B", ".", 
        RowBox[{"u", "[", "t", "]"}]}]}]}], "]"}], "//", "Chop"}]}], ";", 
  RowBox[{"ColumnForm", "[", "SSEQ", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OEQ", "=", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"y", "[", "t", "]"}], "\[Equal]", 
      RowBox[{"Cm", ".", 
       RowBox[{"x", "[", "t", "]"}]}]}], "]"}], "//", "Chop"}]}], ";", 
  RowBox[{"ColumnForm", "[", "OEQ", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7779315598515882`*^9, 3.777931572364354*^9}, {
  3.8275280839824*^9, 3.827528136219555*^9}, {3.891080434666893*^9, 
  3.8910804864293423`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"15a69907-0d09-4c4f-ab47-e231871697a5"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["x", "1"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        SubscriptBox["u", "1"], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["x", "2"], "[", "t", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["x", "2"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["x", "3"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  ColumnForm[{Derivative[1][
      Subscript[$CellContext`x, 1]][$CellContext`t] == 
    Subscript[$CellContext`u, 1][$CellContext`t] + 
     Subscript[$CellContext`x, 2][$CellContext`t], Derivative[1][
      Subscript[$CellContext`x, 2]][$CellContext`t] == 
    Subscript[$CellContext`x, 1][$CellContext`t], Derivative[1][
      Subscript[$CellContext`x, 3]][$CellContext`t] == 
    Subscript[$CellContext`x, 2][$CellContext`t]}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7779315521155567`*^9, 3.777931572870102*^9}, 
   3.7779339916886787`*^9, 3.777990927413638*^9, 3.783734141131898*^9, 
   3.783734639363707*^9, 3.7837350134434443`*^9, 3.783739878787755*^9, 
   3.78374219563943*^9, 3.783775034954895*^9, 3.784309331823203*^9, 
   3.784911660994645*^9, 3.7849118132937107`*^9, 3.7849142734361467`*^9, 
   3.784999182244919*^9, 3.785092060995683*^9, 3.78509338432469*^9, 
   3.7850934283720055`*^9, 3.785109845014699*^9, 3.785112651144714*^9, 
   3.785178845542268*^9, 3.827528064060598*^9, {3.827528094743399*^9, 
   3.8275281004376264`*^9}, 3.827528136633472*^9, 3.8901282857733727`*^9, 
   3.8906912032435493`*^9, 3.891074569351283*^9, 3.891074746317733*^9, {
   3.8910804870330067`*^9, 3.89108049214419*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"c5689769-af51-4d45-aabe-b716d82ddf3a"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       SubscriptBox["y", "1"], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       SubscriptBox["x", "3"], "[", "t", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       SubscriptBox["y", "2"], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
       RowBox[{
        SubscriptBox["x", "3"], "[", "t", "]"}]}]}]},
    {
     RowBox[{
      RowBox[{
       SubscriptBox["y", "3"], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  ColumnForm[{
   Subscript[$CellContext`y, 1][$CellContext`t] == 
    Subscript[$CellContext`x, 3][$CellContext`t], 
    Subscript[$CellContext`y, 2][$CellContext`t] == 
    Subscript[$CellContext`x, 2][$CellContext`t] - 
     Subscript[$CellContext`x, 3][$CellContext`t], 
    Subscript[$CellContext`y, 3][$CellContext`t] == 
    Subscript[$CellContext`x, 1][$CellContext`t]}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.7779315521155567`*^9, 3.777931572870102*^9}, 
   3.7779339916886787`*^9, 3.777990927413638*^9, 3.783734141131898*^9, 
   3.783734639363707*^9, 3.7837350134434443`*^9, 3.783739878787755*^9, 
   3.78374219563943*^9, 3.783775034954895*^9, 3.784309331823203*^9, 
   3.784911660994645*^9, 3.7849118132937107`*^9, 3.7849142734361467`*^9, 
   3.784999182244919*^9, 3.785092060995683*^9, 3.78509338432469*^9, 
   3.7850934283720055`*^9, 3.785109845014699*^9, 3.785112651144714*^9, 
   3.785178845542268*^9, 3.827528064060598*^9, {3.827528094743399*^9, 
   3.8275281004376264`*^9}, 3.827528136633472*^9, 3.8901282857733727`*^9, 
   3.8906912032435493`*^9, 3.891074569351283*^9, 3.891074746317733*^9, {
   3.8910804870330067`*^9, 3.891080492149439*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"8c09215a-6dfa-4132-baa8-6e2fc53bfe01"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part ii)", "Chapter",
 CellChangeTimes->{{3.785092240217247*^9, 3.7850922585365653`*^9}, {
  3.7851080415976453`*^9, 3.7851080417575507`*^9}, {3.891080623432416*^9, 
  3.891080626402281*^9}},ExpressionUUID->"b9d2fb6a-fdff-45c9-a28d-\
ab69a53080b5"],

Cell[CellGroupData[{

Cell["\<\
Find Q, Sf and R matrices
Sf=0; Q=100 I and R= 0.01 I\
\>", "Subsection",
 CellChangeTimes->{{3.7850925028874874`*^9, 3.7850925063105054`*^9}, 
   3.785094200821842*^9, {3.891080710200919*^9, 
   3.891080725427367*^9}},ExpressionUUID->"b710bb56-2cf8-4103-b4d3-\
abbeca17cd3c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Iy", "=", 
  RowBox[{"IdentityMatrix", "[", 
   RowBox[{"Length", "[", 
    RowBox[{"y", "[", "t", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Iu", "=", 
  RowBox[{"IdentityMatrix", "[", 
   RowBox[{"Length", "[", 
    RowBox[{"u", "[", "t", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"Length", "[", "A", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.785092811907366*^9, 3.7850928188524923`*^9}, {
  3.8275281646239667`*^9, 3.827528172549595*^9}, {3.8275283182705564`*^9, 
  3.8275283353176947`*^9}, {3.827528597504598*^9, 3.827528604530279*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"89992dee-edfa-424d-a78c-e2af0b555fbb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.78509327808387*^9, {3.785109829051106*^9, 3.785109845095652*^9}, 
   3.7851126512086763`*^9, 3.785178845559067*^9, 3.827528277006001*^9, 
   3.827528335910158*^9, 3.827528605001896*^9, 3.890128483570868*^9, 
   3.8906912152992897`*^9, 3.89107457082684*^9, 3.8910747479282093`*^9, 
   3.89108049499791*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"89f83943-adfc-415f-9631-f172af67f441"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "1", "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.78509327808387*^9, {3.785109829051106*^9, 3.785109845095652*^9}, 
   3.7851126512086763`*^9, 3.785178845559067*^9, 3.827528277006001*^9, 
   3.827528335910158*^9, 3.827528605001896*^9, 3.890128483570868*^9, 
   3.8906912152992897`*^9, 3.89107457082684*^9, 3.8910747479282093`*^9, 
   3.891080495002776*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"c3a4938b-2ed0-4b5f-820c-83cdf8726ebb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sf", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"Dimensions", "[", "Iy", "]"}]}], "]"}]}], ";", 
  RowBox[{"Q", "=", 
   RowBox[{"100", " ", "Iy"}]}], ";", 
  RowBox[{"R", "=", 
   RowBox[{"0.01", "Iu"}]}], ";", 
  RowBox[{"tf", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<\!\(TraditionalForm\`\(\*SubscriptBox[\(S\), \(f\)]\(\\\ \)\(=\)\(\\\ \
\)\)\)\>\"", ",", 
   RowBox[{"Sf", " ", "//", "MatrixForm"}], ",", "\"\<\\t Q = \>\"", ",", 
   RowBox[{"Q", " ", "//", "MatrixForm"}], ",", "\"\<\\t R = \>\"", ",", 
   RowBox[{"R", " ", "//", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.785092510796898*^9, 3.7850925689073877`*^9}, {
  3.7850927326290274`*^9, 3.7850927535077567`*^9}, {3.7850927865474863`*^9, 
  3.7850928361314383`*^9}, {3.785092944724022*^9, 3.7850929465619416`*^9}, {
  3.7850932513264647`*^9, 3.7850933131660995`*^9}, {3.785101160282407*^9, 
  3.785101163424568*^9}, {3.827528279997489*^9, 3.8275282806392064`*^9}, {
  3.8275283427343407`*^9, 3.827528348145029*^9}, {3.827528379328692*^9, 
  3.8275283798814015`*^9}, {3.8910806422488194`*^9, 3.8910806575441113`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"f425ff9f-9310-4a36-81fc-96e1ae89c643"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(TraditionalForm\\`\\(\\*SubscriptBox[\\(S\\), \
\\(f\\)]\\(\\\\ \\)\\(=\\)\\(\\\\ \\)\\)\\)\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"\\t Q = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"100", "0", "0"},
       {"0", "100", "0"},
       {"0", "0", "100"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "\[InvisibleSpace]", "\<\"\\t R = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.01`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "\!\(TraditionalForm\`\(\*SubscriptBox[\(S\), \(f\)]\(\\ \)\(=\)\(\\ \
\)\)\)", 
   MatrixForm[{{0, 0, 0}, {0, 0, 0}, {0, 0, 0}}], "\t Q = ", 
   MatrixForm[{{100, 0, 0}, {0, 100, 0}, {0, 0, 100}}], "\t R = ", 
   MatrixForm[{{0.01}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.785093313894662*^9, 3.785093433640935*^9, 3.7851011678100057`*^9, {
   3.7851098292719755`*^9, 3.785109845171607*^9}, 3.785112651262645*^9, 
   3.785178845585762*^9, 3.8275282852514687`*^9, {3.8275283699339495`*^9, 
   3.8275283806744614`*^9}, 3.8901284949511003`*^9, 3.890691217053582*^9, 
   3.8910745722374973`*^9, 3.8910747495610228`*^9, {3.891080637813031*^9, 
   3.891080658177804*^9}},
 CellLabel->
  "During evaluation of \
In[55]:=",ExpressionUUID->"63ee5047-fa2b-47b8-a9d0-b4f69bee8734"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Riccati Equation (tf is finite)", "Subsection",
 CellChangeTimes->{{3.6513668033322268`*^9, 3.6513668124054823`*^9}, {
  3.783735833408043*^9, 3.7837358429178047`*^9}, {3.783736625997305*^9, 
  3.783736634251915*^9}, {3.783737171291432*^9, 3.783737197511902*^9}, {
  3.785094217157341*^9, 
  3.7850942295241528`*^9}},ExpressionUUID->"8109086a-4729-45e3-bd0b-\
b8a294fe7af8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S", "[", "t_", "]"}], ":=", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"S", ",", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"Through", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Min", ",", "Max"}], "}"}], "[", "##", "]"}], "]"}]}]}], 
       "]"}], "[", "t", "]"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"S", "[", "t", "]"}], "\[IndentingNewLine]", 
 RowBox[{"LHRE", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"S", "[", "t", "]"}], ",", "t"}], "]"}], "+", 
   RowBox[{
    RowBox[{"S", "[", "t", "]"}], ".", "A"}], "-", 
   RowBox[{
    RowBox[{"S", "[", "t", "]"}], ".", "B", ".", 
    RowBox[{"Inverse", "[", "R", "]"}], ".", 
    RowBox[{"B", "\[Transpose]"}], ".", 
    RowBox[{"S", "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Cm", "\[Transpose]"}], ".", "Q", ".", "Cm"}], "+", 
   RowBox[{
    RowBox[{"A", "\[Transpose]"}], ".", 
    RowBox[{"S", "[", "t", "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.7850939102658663`*^9, 3.7850939528608437`*^9}, {
  3.8275284976531744`*^9, 3.827528528507636*^9}, {3.827528612523235*^9, 
  3.827528615444952*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"ae42017b-a196-4bec-bab8-6824d34eb0a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"1", ",", "1"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"1", ",", "2"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"1", ",", "2"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"2", ",", "2"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"1", ",", "3"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"2", ",", "3"}]], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"3", ",", "3"}]], "[", "t", "]"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.7850939454591346`*^9, 3.7850939545598383`*^9}, 
   3.785094336958891*^9, {3.78510982938291*^9, 3.7851098452475624`*^9}, 
   3.7851126513216105`*^9, 3.785178845598557*^9, 3.8275285009147863`*^9, 
   3.8275285336618185`*^9, 3.8275286181311913`*^9, 3.8901286539058733`*^9, 
   3.890691218428364*^9, 3.891074750871656*^9, 3.891080730813326*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"ecc9e95a-e3c5-4628-bdc5-512c643740db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"100.`", "\[VeryThinSpace]", "-", 
      RowBox[{"100.`", " ", 
       SuperscriptBox[
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "2"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["S", 
         RowBox[{"1", ",", "1"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{
       SubscriptBox["S", 
        RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "-", 
      RowBox[{"100.`", " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "1"}]], "[", "t", "]"}], " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["S", 
        RowBox[{"1", ",", "3"}]], "[", "t", "]"}], "+", 
      RowBox[{
       SubscriptBox["S", 
        RowBox[{"2", ",", "2"}]], "[", "t", "]"}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["S", 
         RowBox[{"1", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"100.`", " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "1"}]], "[", "t", "]"}], " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["S", 
        RowBox[{"2", ",", "3"}]], "[", "t", "]"}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["S", 
         RowBox[{"1", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{
       SubscriptBox["S", 
        RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "-", 
      RowBox[{"100.`", " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "1"}]], "[", "t", "]"}], " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["S", 
        RowBox[{"1", ",", "3"}]], "[", "t", "]"}], "+", 
      RowBox[{
       SubscriptBox["S", 
        RowBox[{"2", ",", "2"}]], "[", "t", "]"}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["S", 
         RowBox[{"1", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", 
     RowBox[{"100.`", "\[VeryThinSpace]", "+", 
      RowBox[{"2", " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
      RowBox[{"100.`", " ", 
       SuperscriptBox[
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}], "2"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["S", 
         RowBox[{"2", ",", "2"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "100.`"}], "+", 
      RowBox[{
       SubscriptBox["S", 
        RowBox[{"1", ",", "3"}]], "[", "t", "]"}], "-", 
      RowBox[{"100.`", " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "2"}]], "[", "t", "]"}], " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["S", 
        RowBox[{"3", ",", "3"}]], "[", "t", "]"}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["S", 
         RowBox[{"2", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"100.`", " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "1"}]], "[", "t", "]"}], " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["S", 
        RowBox[{"2", ",", "3"}]], "[", "t", "]"}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["S", 
         RowBox[{"1", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "100.`"}], "+", 
      RowBox[{
       SubscriptBox["S", 
        RowBox[{"1", ",", "3"}]], "[", "t", "]"}], "-", 
      RowBox[{"100.`", " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "2"}]], "[", "t", "]"}], " ", 
       RowBox[{
        SubscriptBox["S", 
         RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["S", 
        RowBox[{"3", ",", "3"}]], "[", "t", "]"}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["S", 
         RowBox[{"2", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ",", 
     RowBox[{"200.`", "\[VeryThinSpace]", "-", 
      RowBox[{"100.`", " ", 
       SuperscriptBox[
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["S", 
         RowBox[{"3", ",", "3"}]], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7850939454591346`*^9, 3.7850939545598383`*^9}, 
   3.785094336958891*^9, {3.78510982938291*^9, 3.7851098452475624`*^9}, 
   3.7851126513216105`*^9, 3.785178845598557*^9, 3.8275285009147863`*^9, 
   3.8275285336618185`*^9, 3.8275286181311913`*^9, 3.8901286539058733`*^9, 
   3.890691218428364*^9, 3.891074750871656*^9, 3.891080730819305*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"e862a898-4bf5-4da1-8cb3-d4a56a17f341"]
}, Open  ]],

Cell["Due to symmetry there are duplicate equations :", "Text",
 CellChangeTimes->{{3.6564263353624725`*^9, 
  3.656426356442478*^9}},ExpressionUUID->"f70d0120-6001-43ea-b978-\
488620b26b4e"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"i", ",", "j"}], "]"}]], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"273b3633-2a63-44cf-8802-5ca3131af706"],

Cell[CellGroupData[{

Cell["Eliminate duplicate equations:", "Subsubsection",
 CellChangeTimes->{{3.656632230836926*^9, 
  3.656632245666877*^9}},ExpressionUUID->"b2b2ec74-1162-4cd0-9955-\
f0685a899b47"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"UpperElements", "[", "M_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"M", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "M", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "i", ",", 
       RowBox[{"Length", "[", "M", "]"}]}], "}"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LHREup", "=", 
   RowBox[{"UpperElements", "[", "LHRE", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ov", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"Length", "[", "LHREup", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RE", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"LHREup", "\[Equal]", "Ov"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sv", "[", "t_", "]"}], ":=", 
  RowBox[{"UpperElements", "[", 
   RowBox[{"S", "[", "t", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<RE: \>\"", ",", 
   RowBox[{"RE", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6564265441852913`*^9, 3.6564265478981633`*^9}, {
   3.6564334596453257`*^9, 3.6564335487050147`*^9}, {3.656433695260333*^9, 
   3.65643370499592*^9}, {3.65643383898139*^9, 3.656433839091592*^9}, {
   3.6564348321586256`*^9, 3.6564349209099364`*^9}, 3.656629742463505*^9, {
   3.656629969361375*^9, 3.656630000139638*^9}, {3.656630150026362*^9, 
   3.65663019396966*^9}, {3.7812791947560606`*^9, 3.781279199570257*^9}, {
   3.7812793408662443`*^9, 3.781279396878811*^9}, {3.7812794269762363`*^9, 
   3.7812794986861143`*^9}, {3.781280939595419*^9, 3.781281063709276*^9}, 
   3.7812811034327245`*^9, {3.7812811683063335`*^9, 3.7812812343455286`*^9}, {
   3.783737161432454*^9, 3.783737165561067*^9}, {3.7837399363864927`*^9, 
   3.783739947558539*^9}, {3.7837401228336277`*^9, 3.783740129725587*^9}, {
   3.7837401641724052`*^9, 3.7837401738843927`*^9}, {3.783740227001474*^9, 
   3.78374027964755*^9}, {3.783740313938148*^9, 3.783740343486065*^9}, {
   3.7837403792177143`*^9, 3.783740430272368*^9}, {3.783740528014173*^9, 
   3.783740562939344*^9}, {3.783741317274747*^9, 3.783741317879321*^9}, {
   3.783741675729724*^9, 3.783741676088523*^9}, {3.7850942688634615`*^9, 
   3.7850943325964327`*^9}, {3.785101237102662*^9, 3.785101237428486*^9}, 
   3.827529016271158*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"14d321d9-7ef8-46e9-a54c-fbd4046c90ac"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"RE: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          RowBox[{"100.`", "\[VeryThinSpace]", "-", 
           RowBox[{"100.`", " ", 
            SuperscriptBox[
             RowBox[{
              SubscriptBox["S", 
               RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{
             SubscriptBox["S", 
              RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["S", 
              RowBox[{"1", ",", "1"}]], "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]},
        {
         RowBox[{
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"1", ",", "1"}]], "[", "t", "]"}], "-", 
           RowBox[{"100.`", " ", 
            RowBox[{
             SubscriptBox["S", 
              RowBox[{"1", ",", "1"}]], "[", "t", "]"}], " ", 
            RowBox[{
             SubscriptBox["S", 
              RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"2", ",", "2"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["S", 
              RowBox[{"1", ",", "2"}]], "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]},
        {
         RowBox[{
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"100.`", " ", 
            RowBox[{
             SubscriptBox["S", 
              RowBox[{"1", ",", "1"}]], "[", "t", "]"}], " ", 
            RowBox[{
             SubscriptBox["S", 
              RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"2", ",", "3"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["S", 
              RowBox[{"1", ",", "3"}]], "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]},
        {
         RowBox[{
          RowBox[{"100.`", "\[VeryThinSpace]", "+", 
           RowBox[{"2", " ", 
            RowBox[{
             SubscriptBox["S", 
              RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
           RowBox[{"100.`", " ", 
            SuperscriptBox[
             RowBox[{
              SubscriptBox["S", 
               RowBox[{"1", ",", "2"}]], "[", "t", "]"}], "2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{
             SubscriptBox["S", 
              RowBox[{"2", ",", "3"}]], "[", "t", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["S", 
              RowBox[{"2", ",", "2"}]], "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", "100.`"}], "+", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"1", ",", "3"}]], "[", "t", "]"}], "-", 
           RowBox[{"100.`", " ", 
            RowBox[{
             SubscriptBox["S", 
              RowBox[{"1", ",", "2"}]], "[", "t", "]"}], " ", 
            RowBox[{
             SubscriptBox["S", 
              RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["S", 
             RowBox[{"3", ",", "3"}]], "[", "t", "]"}], "+", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["S", 
              RowBox[{"2", ",", "3"}]], "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]},
        {
         RowBox[{
          RowBox[{"200.`", "\[VeryThinSpace]", "-", 
           RowBox[{"100.`", " ", 
            SuperscriptBox[
             RowBox[{
              SubscriptBox["S", 
               RowBox[{"1", ",", "3"}]], "[", "t", "]"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             SubscriptBox["S", 
              RowBox[{"3", ",", "3"}]], "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["RE: ", 
   MatrixForm[{
    100. - 100. Subscript[$CellContext`S, 1, 1][$CellContext`t]^2 + 
      2 Subscript[$CellContext`S, 1, 2][$CellContext`t] + Derivative[1][
        Subscript[$CellContext`S, 1, 1]][$CellContext`t] == 0, 
     0. + Subscript[$CellContext`S, 1, 1][$CellContext`t] - 100. 
      Subscript[$CellContext`S, 1, 1][$CellContext`t] 
      Subscript[$CellContext`S, 1, 2][$CellContext`t] + 
      Subscript[$CellContext`S, 1, 3][$CellContext`t] + 
      Subscript[$CellContext`S, 2, 2][$CellContext`t] + Derivative[1][
        Subscript[$CellContext`S, 1, 2]][$CellContext`t] == 0, 
     0. - 100. Subscript[$CellContext`S, 1, 1][$CellContext`t] 
      Subscript[$CellContext`S, 1, 3][$CellContext`t] + 
      Subscript[$CellContext`S, 2, 3][$CellContext`t] + Derivative[1][
        Subscript[$CellContext`S, 1, 3]][$CellContext`t] == 0, 
     100. + 2 Subscript[$CellContext`S, 1, 2][$CellContext`t] - 100. 
      Subscript[$CellContext`S, 1, 2][$CellContext`t]^2 + 
      2 Subscript[$CellContext`S, 2, 3][$CellContext`t] + Derivative[1][
        Subscript[$CellContext`S, 2, 2]][$CellContext`t] == 
     0, -100. + Subscript[$CellContext`S, 1, 3][$CellContext`t] - 100. 
      Subscript[$CellContext`S, 1, 2][$CellContext`t] 
      Subscript[$CellContext`S, 1, 3][$CellContext`t] + 
      Subscript[$CellContext`S, 3, 3][$CellContext`t] + Derivative[1][
        Subscript[$CellContext`S, 2, 3]][$CellContext`t] == 0, 
     200. - 100. Subscript[$CellContext`S, 1, 3][$CellContext`t]^2 + 
      Derivative[1][
        Subscript[$CellContext`S, 3, 3]][$CellContext`t] == 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7812793576628304`*^9, 3.781279414669428*^9, 3.781279469266381*^9, 
   3.781279508174543*^9, {3.7812809348281736`*^9, 3.7812809403099875`*^9}, {
   3.7812809801158524`*^9, 3.7812810214878073`*^9}, {3.781281064674713*^9, 
   3.7812811042122574`*^9}, {3.781281169923394*^9, 3.781281235093069*^9}, 
   3.783737119081398*^9, 3.7837371523923693`*^9, 3.783739948648716*^9, 
   3.783740061189908*^9, 3.783740132688725*^9, 3.7837401743491592`*^9, {
   3.78374025648239*^9, 3.783740280193946*^9}, {3.783740314668201*^9, 
   3.783740345082141*^9}, {3.783740404539098*^9, 3.7837404314859943`*^9}, 
   3.783740563375367*^9, 3.7837407778615923`*^9, 3.783741318352697*^9, 
   3.783741352197394*^9, {3.783741672243884*^9, 3.783741676640369*^9}, 
   3.783742196061222*^9, 3.7837750137339773`*^9, 3.7837750489516068`*^9, 
   3.7843094015277257`*^9, 3.784911673391324*^9, 3.784911833075043*^9, 
   3.784914353145486*^9, 3.7849992018653297`*^9, {3.7850942948795443`*^9, 
   3.785094302075353*^9}, {3.785094342242813*^9, 3.78509434496123*^9}, 
   3.785101179427247*^9, 3.7851012393763385`*^9, {3.7851098295787945`*^9, 
   3.785109845380484*^9}, 3.7851126514655256`*^9, 3.785178845776827*^9, 
   3.8275289713833756`*^9, 3.8275290176682444`*^9, 3.890128671988555*^9, 
   3.890691225784663*^9, 3.891074762607257*^9, 3.89108075282397*^9},
 CellLabel->
  "During evaluation of \
In[61]:=",ExpressionUUID->"b19951c4-d35d-43e8-8f31-37774f7fcdd6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Solve RE :", "Subsubsection",
 CellChangeTimes->{{3.656641644625041*^9, 3.656641673286626*^9}, {
  3.783739953044331*^9, 3.7837399572963333`*^9}, {3.8910808238559504`*^9, 
  3.891080829690423*^9}, {3.891082364178104*^9, 
  3.89108237853319*^9}},ExpressionUUID->"90e5a4ed-b458-481a-a050-\
23a46ee7d4c8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"solS", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"RE", ",", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Sv", "[", "tf", "]"}], "\[Equal]", 
           RowBox[{"UpperElements", "[", 
            RowBox[{
             RowBox[{"Cm", "\[Transpose]"}], ".", "Sf", ".", "Cm"}], "]"}]}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"Sv", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}], "//", "Quiet"}], "//",
     "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sv", "[", "t", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "/.", "SolS"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "tf"}], "}"}], ",", "All"}], "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        SubscriptBox["\"\<Sv\>\"", "i"]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"Sv", "[", "t", "]"}], "]"}]}], "}"}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.656364523514758*^9, 3.6563645336287537`*^9}, {
   3.6563645798272424`*^9, 3.6563646084929943`*^9}, {3.6563647189309196`*^9, 
   3.6563647511525393`*^9}, {3.6563647965906143`*^9, 
   3.6563648100556736`*^9}, {3.656365041783351*^9, 3.656365054170989*^9}, {
   3.656365156764964*^9, 3.656365157544979*^9}, 3.656365287845086*^9, 
   3.65636532905548*^9, {3.6563653989314337`*^9, 3.656365495728301*^9}, {
   3.6563655921317596`*^9, 3.656365613255974*^9}, {3.656365650325688*^9, 
   3.6563656598272705`*^9}, {3.656365690344458*^9, 3.656365737822171*^9}, {
   3.6563657813092084`*^9, 3.6563658040428457`*^9}, {3.6563658401499405`*^9, 
   3.656365872275959*^9}, {3.6563659141239643`*^9, 3.6563659168852177`*^9}, {
   3.656366226239192*^9, 3.656366267228181*^9}, {3.656426389753119*^9, 
   3.656426395743634*^9}, 3.656426476653192*^9, {3.656426574859482*^9, 
   3.656426607066502*^9}, {3.6564284347255125`*^9, 3.6564284568965387`*^9}, {
   3.656428506371091*^9, 3.656428521709186*^9}, {3.6564285979482536`*^9, 
   3.6564285981666574`*^9}, {3.656428743851075*^9, 3.6564287520724335`*^9}, {
   3.656429067667139*^9, 3.6564291050262585`*^9}, {3.6564295874797735`*^9, 
   3.6564296812223773`*^9}, 3.6564349890804887`*^9, {3.6564369937689676`*^9, 
   3.6564369988390646`*^9}, 3.656442335380411*^9, {3.656443375158594*^9, 
   3.6564434096744585`*^9}, 3.6564452426545753`*^9, {3.656628122532887*^9, 
   3.65662816797976*^9}, {3.6566294296229763`*^9, 3.656629461811695*^9}, {
   3.656629801312118*^9, 3.656629808260708*^9}, {3.656630293620903*^9, 
   3.6566303670320387`*^9}, {3.656630702794252*^9, 3.656630716208251*^9}, {
   3.716572681210399*^9, 3.716572711628441*^9}, {3.7810037848388014`*^9, 
   3.781003787357334*^9}, {3.781270285671077*^9, 3.781270292343823*^9}, {
   3.7812792461438303`*^9, 3.781279253070751*^9}, 3.7812795510224237`*^9, {
   3.783739983794355*^9, 3.783740027687509*^9}, 3.7837400706287823`*^9, {
   3.7837404514030123`*^9, 3.783740474424596*^9}, {3.783740578066038*^9, 
   3.783740579776351*^9}, {3.783741241193651*^9, 3.78374127691003*^9}, {
   3.783741363561131*^9, 3.783741388564528*^9}, {3.783741680827836*^9, 
   3.783741680920446*^9}, {3.783741801102365*^9, 3.783741809814365*^9}, {
   3.7851006651123514`*^9, 3.785100709332425*^9}, {3.785100744138144*^9, 
   3.7851008360881195`*^9}, {3.7851008908432627`*^9, 
   3.7851009585648375`*^9}, {3.7851010378476534`*^9, 3.785101051474744*^9}, 
   3.7851011079258566`*^9, {3.7851011829362206`*^9, 3.785101195076129*^9}, {
   3.785101256956097*^9, 3.785101326944351*^9}, {3.78510136980042*^9, 
   3.7851013714094973`*^9}, 3.785102867957396*^9, {3.827529030372113*^9, 
   3.827529033291216*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"515ac02e-2a23-4bbf-a096-a7751c45cbf9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", 
      RowBox[{"Length", "[", 
       RowBox[{"Sv", "[", "t", "]"}], "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{"Print", "[", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Sv", "[", "t", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], "/.", "solS"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "tf"}], "}"}], ",", "All"}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         SubscriptBox["\"\<Sv\>\"", "i"]}]}], "]"}], "]"}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"GraphicsGrid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Sv", "[", "t", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/.", "solS"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "tf"}], "}"}], ",", "All"}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"ToString", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<Sv\>\"", ",", " ", "i"}], "]"}], ",", " ", 
            "StandardForm"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"Sv", "[", "t", "]"}], "]"}]}], "}"}]}], "]"}], "}"}], ",", 
    
    RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.783740585441722*^9, 3.783740655903327*^9}, {
   3.783740686382903*^9, 3.783740732048641*^9}, {3.783741689402557*^9, 
   3.783741689512251*^9}, {3.785100964949102*^9, 3.785100998212757*^9}, {
   3.7851014537635307`*^9, 3.7851014943189173`*^9}, {3.7851015247421865`*^9, 
   3.785101532110879*^9}, {3.785107317306903*^9, 3.785107379548277*^9}, {
   3.7851075180840797`*^9, 3.7851075191784005`*^9}, {3.82752904653329*^9, 
   3.8275290616140676`*^9}, 3.827529126927244*^9, {3.827529213675711*^9, 
   3.8275292333828325`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"47dbc55e-46e7-4416-9ad6-35172ee2bbc8"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
XRWH2orGQ9hG2QFPRxvFwYaQNsGujm9yk58Wh0/aT1/b4fU0b5WNmxUHxzyx
F9i5wq9ejSyIwxWJ7U3YJ1I/mT3gkoAJmZoqbMuceQ0nkgQ4KKhlYn8tXbOU
qCYBssnJDtiiT/MK/rhLwAZ1gzZbnH/e8M/t7RJwL/9lyXZkCqOle6FTAg4P
3szDbteTe7mqSwJ4RhLSsdcHND+M7pWAzxSV/7D5Xq88v/6nBNBERF2xSy7e
cbzAKQl8jEgSdr/B7PMDOpJQxP4YaoPsGXKkWjhXEi4piilaI2v6qrVbuksB
76urmyyQX0qoC4XrrwRdN8P7W5AflEefV+eWBkenPLFN+PssHSnZfNJQ/6nq
nymy7aDyOU5BaVAS6RjB/kG0Zb0lScO7fJEX2JLnZNJO0KXhWN7FeOz9Mdfj
3+hLg1VAKCc21flteFSQNOx0+fvTGOdj+srUQKg0GNTyd2PfSjsSantYGrQz
hZuxt7TJBysdk4axvrmL2KEm+wM6EqXhFJe3M3arOoenQqk0bOCzbgbkI5yq
2198kIbIpcV0Nj7/m4TeKX2Rho5bFSewt8cP7/mvH8Vns/0AtoJYxcH1v6Th
UoabGfYLms6Zi7Po+8mlf4zw+dUzag+TlIGk4stO2I2BdpZy22TghnYv90Zk
9cq1bw5bysCvoc4RQ+SsaSnXVzYyoGtxvRt7f1T3/jgnGfA6KFiGLZXgmvjb
Uwb+bvPeju1T4vO8+ZgMXG1ZnWmA61lf5NbAKhnYEi3AvQGv/+GrImfuysD1
GdshfWR3iXevKu7LwH+nQzux721dt/t3vQwUrIICbJ/qseCwNhkQl/+sh92Q
4nU+ckAGdooWeerh/q2Svvf8oAys7VbYii3b3KBYOywDPQmH1LEDF+g3Fydk
wObeySldXL/93jedWJIBbmujaN3l+mo9GisrCznBu9PXIxf3Rd0upcqCR2B4
GPbLw2URz+iyYBlm7YitVM7PLagoCy+PsqWxX1MeyyRrycJPQanMdbj/TOka
p5vLQmX59lgd5O+XmRkFUbJQyiGsqY3jPflljvuELPwbteDGnvAo3OMXIwuf
y5ndWsgcDKaaVoIsLBolHcWmZMs3NmbLwjpew+Y1eL3jGOPfK2VBz2XPRk3k
Hd6fHM3vyMKOy4KC2G6mBQ/Ka2Sh/7jKWw28Xkv0uMP1slBVVBOAHXuYThdo
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
           "]]},
         Annotation[#, "Charting`Private`Tag$14834#1"]& ]}, {}},
      AspectRatio->Full,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{17., 6.5}, {1.5, 21.19258318835773}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"\\!\\(\\*SubscriptBox[\\\"\\\\\\\"Sv\\\\\\\"\\\", \\\"1\\\"]\\)\"", 
        TraditionalForm],
      PlotRange->{{0., 10.}, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {195.42857142857142, -230.92732173671675},
      ImageScaled[{0.5, 0.5}], {359.99999999999994, 439.86156521279383}], 
    InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
RnmJyaQB3/5h/S+2BTv/B14jNtg=
           "]]},
         Annotation[#, "Charting`Private`Tag$15028#1"]& ]}, {}},
      AspectRatio->Full,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{17., 6.5}, {1.5, 21.19258318835773}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"\\!\\(\\*SubscriptBox[\\\"\\\\\\\"Sv\\\\\\\"\\\", \\\"2\\\"]\\)\"", 
        TraditionalForm],
      PlotRange->{{0., 10.}, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {586.2857142857142, -230.92732173671675},
      ImageScaled[{0.5, 0.5}], {359.99999999999994, 439.86156521279383}], 
    InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
r7SJihnZpfV1DHTkGyvrrLLe/Q+PEo87
           "]]},
         Annotation[#, "Charting`Private`Tag$15081#1"]& ]}, {}},
      AspectRatio->Full,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{17., 6.5}, {1.5, 21.19258318835773}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"\\!\\(\\*SubscriptBox[\\\"\\\\\\\"Sv\\\\\\\"\\\", \\\"3\\\"]\\)\"", 
        TraditionalForm],
      PlotRange->{{0., 10.}, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {977.1428571428571, -230.92732173671675},
      ImageScaled[{0.5, 0.5}], {360., 439.86156521279383}], InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag$15134#1"]& ]}, {}},
      AspectRatio->Full,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{20., 6.5}, {1.5, 21.19258318835773}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"\\!\\(\\*SubscriptBox[\\\"\\\\\\\"Sv\\\\\\\"\\\", \\\"4\\\"]\\)\"", 
        TraditionalForm],
      PlotRange->{{0., 10.}, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {1368., -230.92732173671675}, 
     ImageScaled[{0.5, 0.5}], {360.0000000000002, 439.86156521279383}], 
    InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag$15187#1"]& ]}, {}},
      AspectRatio->Full,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{19.999999999999996`, 6.500000000000028}, {1.5, 
       21.19258318835773}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"\\!\\(\\*SubscriptBox[\\\"\\\\\\\"Sv\\\\\\\"\\\", \\\"5\\\"]\\)\"", 
        TraditionalForm],
      PlotRange->{{0., 10.}, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {1758.8571428571427, -230.92732173671675},
      ImageScaled[{0.5, 0.5}], {360.0000000000002, 439.86156521279383}], 
    InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag$15240#1"]& ]}, {}},
      AspectRatio->Full,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{20., 6.5}, {1.5, 21.19258318835773}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"\\!\\(\\*SubscriptBox[\\\"\\\\\\\"Sv\\\\\\\"\\\", \\\"6\\\"]\\)\"", 
        TraditionalForm],
      PlotRange->{{0., 10.}, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {2149.7142857142853, -230.92732173671675},
      ImageScaled[{0.5, 0.5}], {359.9999999999998, 439.86156521279383}]}, 
   StyleBox[{{}, {LineBox[{{0, 0}, {0, -461.8546434734335}}], 
      LineBox[{{390.85714285714283`, 0}, {
        390.85714285714283`, -461.8546434734335}}], 
      LineBox[{{781.7142857142857, 0}, {
        781.7142857142857, -461.8546434734335}}], 
      LineBox[{{1172.5714285714284`, 0}, {
        1172.5714285714284`, -461.8546434734335}}], 
      LineBox[{{1563.4285714285713`, 0}, {
        1563.4285714285713`, -461.8546434734335}}], 
      LineBox[{{1954.2857142857142`, 0}, {
        1954.2857142857142`, -461.8546434734335}}], 
      LineBox[{{2345.142857142857, 0}, {
        2345.142857142857, -461.8546434734335}}], 
      LineBox[{{0, 0}, {390.85714285714283`, 0}}], 
      LineBox[{{390.85714285714283`, 0}, {781.7142857142857, 0}}], 
      LineBox[{{781.7142857142857, 0}, {1172.5714285714284`, 0}}], 
      LineBox[{{1172.5714285714284`, 0}, {1563.4285714285713`, 0}}], 
      LineBox[{{1563.4285714285713`, 0}, {1954.2857142857142`, 0}}], 
      LineBox[{{1954.2857142857142`, 0}, {2345.142857142857, 0}}], 
      LineBox[{{0, -461.8546434734335}, {
        390.85714285714283`, -461.8546434734335}}], 
      LineBox[{{390.85714285714283`, -461.8546434734335}, {
       781.7142857142857, -461.8546434734335}}], 
      LineBox[{{781.7142857142857, -461.8546434734335}, {
       1172.5714285714284`, -461.8546434734335}}], 
      LineBox[{{1172.5714285714284`, -461.8546434734335}, {
       1563.4285714285713`, -461.8546434734335}}], 
      LineBox[{{1563.4285714285713`, -461.8546434734335}, {
       1954.2857142857142`, -461.8546434734335}}], 
      LineBox[{{1954.2857142857142`, -461.8546434734335}, {
       2345.142857142857, -461.8546434734335}}]}},
    Antialiasing->False]},
  ImageSize->{
    UpTo[600], 
    UpTo[462]},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.7851015291336107`*^9, 3.7851015339538207`*^9}, 
   3.7851028715472283`*^9, {3.7851073230874653`*^9, 3.785107351813444*^9}, 
   3.7851073832871*^9, 3.7851075239395947`*^9, {3.7851098298256493`*^9, 
   3.785109846825632*^9}, 3.7851126529136753`*^9, 3.785178849835047*^9, 
   3.827529136993915*^9, 3.8275292349293675`*^9, 3.890128681025035*^9, 
   3.8906912310785913`*^9, 3.891074766298793*^9, 3.8910807710761967`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"e7d2e836-157d-4142-9db6-942855612983"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" LQR gain matrix :", "Subsubsection",
 CellChangeTimes->{{3.656641704480791*^9, 3.656641716043441*^9}, {
  3.891080819773439*^9, 
  3.891080821632505*^9}},ExpressionUUID->"acc376e0-72a5-465a-8766-\
a01ef32b1fe6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "Kop", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kop", "[", "t_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Inverse", "[", "R", "]"}], ".", 
    RowBox[{"B", "\[Transpose]"}], " ", ".", 
    RowBox[{"S", "[", "t", "]"}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kop", "[", "t", "]"}], "//", "Chop"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"Kop", "[", "t", "]"}], "/.", "solS"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\"\<K\>\"", "#"], "\"\<(t)\>\""}], "&"}], ",", "3"}], 
     "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6554885213103533`*^9, 3.6554885778410063`*^9}, {
   3.6556099242358093`*^9, 3.655609958553919*^9}, {3.6564297275652695`*^9, 
   3.6564298089982367`*^9}, {3.6564311513971124`*^9, 3.6564311526919374`*^9}, 
   3.656431199889846*^9, {3.656431279385375*^9, 3.6564313098879623`*^9}, {
   3.6564313437924147`*^9, 3.6564313886688786`*^9}, {3.6564314707726583`*^9, 
   3.6564314771541815`*^9}, 3.656435782860688*^9, {3.6564370042367687`*^9, 
   3.6564370044395723`*^9}, {3.6564433848639803`*^9, 3.656443393351544*^9}, {
   3.656631889883204*^9, 3.65663189945483*^9}, {3.7165726494292216`*^9, 
   3.716572669964275*^9}, {3.785101643198203*^9, 3.785101694394783*^9}, {
   3.7851018634443426`*^9, 3.78510190136926*^9}, {3.7851019622114167`*^9, 
   3.7851019648908625`*^9}, {3.7851020378218765`*^9, 3.785102052840137*^9}, {
   3.7851021104435797`*^9, 3.785102130997611*^9}, {3.78510527953976*^9, 
   3.7851052822351255`*^9}, {3.7851076966398335`*^9, 
   3.7851077348067875`*^9}, {3.8275292451588297`*^9, 3.8275292593002157`*^9}},
 
 CellLabel->"In[69]:=",ExpressionUUID->"1239c0f2-500d-40bc-a95c-68a7240cfc6d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"100.`", " ", 
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], ",", 
    RowBox[{"100.`", " ", 
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], ",", 
    RowBox[{"100.`", " ", 
     RowBox[{
      SubscriptBox["S", 
       RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{{3.655488540653288*^9, 3.655488578642086*^9}, 
   3.655493557734774*^9, 3.655493644861891*^9, 3.6555909573512435`*^9, {
   3.655609936439509*^9, 3.655609959061758*^9}, 3.655611816673424*^9, 
   3.655643566796733*^9, {3.656429735833428*^9, 3.6564298099030533`*^9}, 
   3.656430780583568*^9, 3.6564311535811543`*^9, 3.6564312008726645`*^9, {
   3.656431282489835*^9, 3.6564314051447954`*^9}, {3.656431458540023*^9, 
   3.6564314778883953`*^9}, 3.656435156609519*^9, 3.656435194910657*^9, 
   3.6564357841721134`*^9, 3.656437010716894*^9, 3.6564433942115602`*^9, 
   3.6564453747218027`*^9, 3.6564454981491785`*^9, 3.6564455362257147`*^9, 
   3.656445598598918*^9, 3.656445851780607*^9, 3.6564473643877287`*^9, 
   3.6566281809510403`*^9, 3.656628262137027*^9, 3.656628989257329*^9, 
   3.6566294712213287`*^9, 3.6566296217572308`*^9, 3.6566296883965693`*^9, 
   3.656629849645891*^9, 3.6566307281915283`*^9, 3.656631830950099*^9, {
   3.656631876086931*^9, 3.656631900028028*^9}, 3.6566793841200643`*^9, 
   3.7165718163641815`*^9, 3.7165719424155817`*^9, 3.71657267071735*^9, 
   3.7851016947655663`*^9, {3.785101886872676*^9, 3.7851019020668306`*^9}, 
   3.785101965983203*^9, {3.785102112168573*^9, 3.785102131323435*^9}, 
   3.78510528276581*^9, 3.7851077431450253`*^9, {3.785109829904602*^9, 
   3.785109847002528*^9}, 3.785112653065587*^9, 3.785178850052845*^9, 
   3.8275292620513453`*^9, 3.890128697990823*^9, 3.890691232367943*^9, 
   3.891074768003943*^9, 3.8910807784142103`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"d959eb50-4edb-4034-8c8e-7d1b8074d75e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$15943#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwd13c8VW8YAHB7yzWy571CSKgo5DwUsmWErBBug5AZqRCZSYoIKSoZCZWV
kJUVkpBSVvghMyv83uMfPt/Puee883me9xVzumTqQkVBQaGJ/uD/00Oc6BTO
xqibbDmwRNSRYbuxOkxUNBArENq74/SaOBFa0ShsKH2BGffFo77uKyIPMOLb
iB1/3iAnzYnkYkWMJUy46b8NS86IlGNFnPyMuLNaMr3+E/mIfftJoMOt7dY6
0r32EeP3+U6Le5p6xaLicwvmIPxix4ePGqlERbZhmReO7bjz5T8qyT+fMMun
l2hwX2uR1VNw+IxJPc6jwl34MurbRbkBzLfs9dZN5CmOqVg9xwHsJuX9HUv6
6alLJQ1gTrJ+O36kxpw1sjaAvZFU2nHix1jX0w3fsKA3pZu4/UZuz+vYfsce
SBT9w53J3BrGrvUTe/P56TpuN6zrwbT3CHa85vpf3B5je0dKCycxiWOis7h/
2vcz1H6cxE6RNmZwm/XdkmsfncSKR77s+HDr78Ax/ilMczt6x9SvcgjckVPY
cODiNO6UYDF1f4f/MEv1qv9w13LyPThCmME+/FCaxH0wrrlaS2YGq0ph2/FT
uoDRk9oz2GTgxATu2LXe/eeDZzDpp6k7PjWU1Jg6MYNZm1PseOoFYWmjZhZb
9+8Yx80kFi45dHgOKzzjOIq7We3O/hCtOewWtdqOI6wylIVM5zBxf+4dUyWU
6dhcmMNEmlpGcK9vTbt9TZ/DYpvkd/zfoMXzT1TzmOehuV+421Ik99a0zWN5
kvJDuKNLDyo49M9jpW+odnyiU+PI1tg8RmX75QfuenpbXbXteazz+5UdV/kl
nCtTWMDKLzZ+x11gvpZbdH8Bs5W1G8QdT2iVzjqziJ3+6tOPu1xZ6LWRxyLm
GQI7HrW/hP0LWsT4u5l3rFrAaW6ZvIhZeWb14Z7Qtb3K2rGIfRNt/or7WNjM
p0DVJWyAi6J3Z31fYKcldZewxeb6L7hTu+6M9pxawlxnb+14TkRpbb/3EhYd
wrbjjKoQ4vjzJUzaYHcP7tVlNl9T7mUs3YGiGzdJyGl7m7SMEd0runAbHS+N
KlBYxuirLu84J9Eqg8FwGfNTGOvEbbo/q6k6bBlTfPLh0874yYr8MvPL2J6l
8+24nb6Zv6du+4sNf9Nq3lnPtF/uXv1/sWs/Z5twF5/2EBwa/4vZcCfvmHog
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
I/pn+Ox6FVa9KLG2vU0CjeV1P71YPvX/AbfYktw=
          "]]}, Annotation[#, "Charting`Private`Tag$15943#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
xKSelaQcOUEEl9764dwjstjLXUtFI3ZE+HKv8NrNB7JYUMrhB2fsiRDV3ite
sWMn1u3+89U1KhEeF8pbuozuxPy45VmbTxNhf+EHy357eaz5ZHXIbn8iBLp/
U9qjpYi5dWzEPA0gQrCzm/2jBEWMV9k0zeg8Ec4vTlRYfFfEXBn+PDwdTIT7
vlqCtEm7MY4K5Zncy0Rw1+uSjfBWwmyXHjpyxxPhkXW12JMiZYzBifFszg0i
+Nt+9bvWpYxVd1te3JVABLJIO3XilzJGm7uQfvgWEd4Vf7Y7pq6ClR7UHLic
TgSNtcHVkSYVzOxu9BfOTCJY54daSn1WwVYFP/zOyiLCs1rz38s0qtiR6Qsc
dblEOHBcW8dUTxX7l9Rw8G8xET7lJjzOblTFctbYLcJKiBCXXh5jNqSKHXa1
c9pWhuLRPmOZvKiKZWmtX9pZSQSTKQfNJiU1bN9n3VpqDYo/6Nn7O9lqWIJC
q1x/ExHKisgtZVR1rFTzBGs4RgSGjzLpGxfUseb989+VW4mgygvqXYnq2IyN
dHFiO/oehys2mprVMaNrsRLHeogg/Xh7vcx2DcwpkbRB85IIf8qfpf+3UwML
zmocufeKCM6BId2pezWw0pqZdO4BInjJbXoPUjUwpk9m/K8/EOFfasOz9mIN
TGxyajZsGI0n674e9ZEGpvbvat/uUSJQs3nKz7ZpYM7sT27c/EyEoojT0eOf
0fsFjnpRvhKB8WDWHcMZDSxJ8qfR7zEiyEkobBJXNTCMLMJq+p0INjHH7+3k
I2OD+x5+3/hBhCw74v3j4mTst4nJ8+pJIhxpStZZlCVjTDbfiuyniXCYt06O
RZWMibuERXDOoHxsTDeJ3UvG1M8KOjX9JoInQS/k4kEyZhx8H7z/EiHd2CP6
iwkZC0kYW++dJ8KpXQnJq3ZkLCkzdOTiAsrv6Und+85krPzO9gaFJSK0CZ8R
f+9OxlruV6ePLhMhXKeNxessiq/xUFD8KhGiIyQG/PzJ2J+Oz1Y660RYSBAw
/xFExpgHLqj/2iCCVNp7+95QFN9HXv5sGhL4dSf0SF4mYxo/K2aN6Uiw96SP
30Q4GTOZP9C3Rk+CW0F50oKRZMxlc/RuJSMJNOKONtddI2OhbOdv2DGTYCxn
G9+LKDJ2azu3FwcrCZ5Jn1s6HI3iJZQZNbKRgDFDVF8DuVV+n5wnBwneehf3
J6L7P2gMs4hykuDHlyn/E+h9f/T8v3dzkUAsw57h1lUyxmKy7XkIDwlqNhit
NVE8EtZ3iuT5SJDYOa5vFIbidaZEDPOToE/pTGl3CBk7grLiugAJus/et6g7
T8ZOXfCFPYIkKI1UJfGfQ/FeZZOYEiJB60fnqWEvMpZ8s3A9Q4QEakJykdxu
ZKwiY++IoRgJmD6odN2noniL39aviJPg6XDdzWZbMjZ0zzu9nECCz4JL97TM
ydjfBuYgWyIJchR0GAlGKN6OPCs2KRKUbA845bePjBH6tdTr/yPBS9/uciUt
MkYe7ec7I0OCWnrPatvdZMx1jqGvS44EzsaSVn+FyJh9+YGXdrtIcPnT+yuy
XGTMinq1+7cCCVZ8VHk/0pMx/Vf0z7crk4BscuHnsykNTPfa/melKiQQvkYz
P/dRA9PQicD2qJHgvLTrz/w+DUy6gq6BSiaBfe1z0fNoPYg77aud1yTBv558
yZw7GpiAUPijKG0SFOxSy9qXitZTFO29Kh0StM9ZBNOf18AmnGiKl/eTwPX1
XC5VSQMbEYKCuIMkEGl9LuorpoG9eR2WK3GIBHdgTG6dVQNr091MP2hIgiPk
J/GxX9SxIuGNG4lHSTCaqnPtfKw6ltWnEydlRgJDanu+2zl1LDn6YswTcxI8
uVEf+vaEOnZ1YS1i1Ao9L9TIQZRXx1z6V4N2niTB4/qspYhnaphdzJ7ARnsS
WD//4HG0VA2zgJBzpo5ofAauX1Pj1LAD1SteAc4ksPDlj0g1V8OkYpedWtxJ
APcHTI8Pq2JjeovGNoFovvYtx3f2qWBDSxqG0+dJsE95c8feahWs/27gobAL
JLB0Z4zcGauCtYot6BWHonxWMxjwBRWsYHle4284Cfh0O5Ye31HGnO7PEmJu
kiDM8KQzu60S5hluvmaYSAKHr7YKc7JKWID5w/cct0iQEvXJz3VmNxb9L+BG
QgrKh/R9/wWRdmPVWsurqdkkuBc49/fLRQVsuWXz3Z0KtB44MZfhuZ0Y3S3H
GrcqEsgOMKrXhu7EOFxa4uXukuBGhfQzfYadmDhTxIHqGhLM9Ne9vsAlix0w
ZKp5VEeC9+5WNLoC0lhCP0d8WwcJNNdO9l+ekMQyCr3crnWRgJIda5JhI4kV
+r/cf7ibBEflxCQ9egjYY4GEle6XJPhoXDbnYSeBjdjyuQ28JUH0lebfUu3C
mMyY0P6vYyQYUqWxKyTxYEoPg8WLJtB4/5XVTvZwYdqRw8unvqP5q1JnJBzd
hhnLZN/7OUmCwse0xcfNWTCrpfXrFdMkqOTra1B7x4g5dNmf9pohgXfIhrm/
HT3m50EQ//sX5f9Sfq/nylpz6N4ryzVzJDjkIKWjuWepOXLb1zf+/0iwobbD
+1/6XPONj/vuaSySgH9Ps7rl3pnmtLuF15eWkDfMem+UTDQXXGY4Xb+Cfi88
+neW5XBzxbFT+0LXSCDX/lTXham7+SHxuZjuBvqebsIuvLpVzU1z0submySY
3NCtMohjbfofy8g5EQ==
          "]]}, Annotation[#, "Charting`Private`Tag$15943#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, "Effects" -> 
         {"Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SubscriptBox["\"K\"", "1"], " ", "\"(t)\""}], 
       RowBox[{
         SubscriptBox["\"K\"", "2"], " ", "\"(t)\""}], 
       RowBox[{
         SubscriptBox["\"K\"", "3"], " ", "\"(t)\""}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.655488540653288*^9, 3.655488578642086*^9}, 
   3.655493557734774*^9, 3.655493644861891*^9, 3.6555909573512435`*^9, {
   3.655609936439509*^9, 3.655609959061758*^9}, 3.655611816673424*^9, 
   3.655643566796733*^9, {3.656429735833428*^9, 3.6564298099030533`*^9}, 
   3.656430780583568*^9, 3.6564311535811543`*^9, 3.6564312008726645`*^9, {
   3.656431282489835*^9, 3.6564314051447954`*^9}, {3.656431458540023*^9, 
   3.6564314778883953`*^9}, 3.656435156609519*^9, 3.656435194910657*^9, 
   3.6564357841721134`*^9, 3.656437010716894*^9, 3.6564433942115602`*^9, 
   3.6564453747218027`*^9, 3.6564454981491785`*^9, 3.6564455362257147`*^9, 
   3.656445598598918*^9, 3.656445851780607*^9, 3.6564473643877287`*^9, 
   3.6566281809510403`*^9, 3.656628262137027*^9, 3.656628989257329*^9, 
   3.6566294712213287`*^9, 3.6566296217572308`*^9, 3.6566296883965693`*^9, 
   3.656629849645891*^9, 3.6566307281915283`*^9, 3.656631830950099*^9, {
   3.656631876086931*^9, 3.656631900028028*^9}, 3.6566793841200643`*^9, 
   3.7165718163641815`*^9, 3.7165719424155817`*^9, 3.71657267071735*^9, 
   3.7851016947655663`*^9, {3.785101886872676*^9, 3.7851019020668306`*^9}, 
   3.785101965983203*^9, {3.785102112168573*^9, 3.785102131323435*^9}, 
   3.78510528276581*^9, 3.7851077431450253`*^9, {3.785109829904602*^9, 
   3.785109847002528*^9}, 3.785112653065587*^9, 3.785178850052845*^9, 
   3.8275292620513453`*^9, 3.890128697990823*^9, 3.890691232367943*^9, 
   3.891074768003943*^9, 3.8910807785218983`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"89f85a31-7c59-430d-946f-11ad1a774c7e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" State Equation :", "Subsection",
 CellChangeTimes->{{3.65643096080984*^9, 3.6564309709208345`*^9}, 
   3.891080810570031*^9},ExpressionUUID->"5afa4180-254b-468b-a330-\
aca23dab9c4c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"uop", "[", "t_", "]"}], ":=", 
  RowBox[{"-", 
   RowBox[{
    RowBox[{"Kop", "[", "t", "]"}], ".", 
    RowBox[{"x", "[", "t", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StEqn", "=", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"A", ".", 
        RowBox[{"x", "[", "t", "]"}]}], "+", 
       RowBox[{"B", ".", 
        RowBox[{"uop", "[", "t", "]"}]}]}]}], "]"}], "//", "Chop"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ColumnForm", "[", "StEqn", "]"}]}], "Input",
 CellChangeTimes->{{3.6554881203782644`*^9, 3.655488178611087*^9}, {
   3.6554882306382895`*^9, 3.6554882345096765`*^9}, {3.6554882916153865`*^9, 
   3.655488307031928*^9}, {3.6554883448017044`*^9, 3.655488369098134*^9}, {
   3.6554885911463366`*^9, 3.655488602642486*^9}, {3.6554935700589323`*^9, 
   3.655493599293707*^9}, {3.655493629776498*^9, 3.6554936313677177`*^9}, 
   3.655609973265134*^9, {3.655610102469102*^9, 3.6556102353095617`*^9}, {
   3.6556102658474913`*^9, 3.655610292142717*^9}, {3.655610367910493*^9, 
   3.655610396732853*^9}, {3.655610470665916*^9, 3.6556104817917767`*^9}, {
   3.655610662979025*^9, 3.6556106849359627`*^9}, {3.655610721534943*^9, 
   3.65561076096257*^9}, 3.655643557862839*^9, {3.6556435904650993`*^9, 
   3.6556435914972024`*^9}, {3.65564362407446*^9, 3.655643659091961*^9}, {
   3.656430542129779*^9, 3.6564305961500187`*^9}, {3.65643064662599*^9, 
   3.656430669924238*^9}, {3.6564307165927362`*^9, 3.6564307169047422`*^9}, {
   3.656430979220194*^9, 3.6564310102011924`*^9}, {3.6564314395816584`*^9, 
   3.656431451659291*^9}, {3.656431502775874*^9, 3.656431503306285*^9}, 
   3.6564322176224165`*^9, {3.6564437708387785`*^9, 3.6564438278008757`*^9}, {
   3.7851022032076063`*^9, 3.7851022139882975`*^9}, {3.8275292852075567`*^9, 
   3.82752928790201*^9}, {3.827529323470603*^9, 3.8275294546671762`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"1e887f4e-6757-47df-947a-e46e71e211e7"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["x", "1"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        SubscriptBox["x", "2"], "[", "t", "]"}], "-", 
       RowBox[{"100.`", " ", 
        RowBox[{
         SubscriptBox["x", "1"], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{"100.`", " ", 
        RowBox[{
         SubscriptBox["x", "2"], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
       RowBox[{"100.`", " ", 
        RowBox[{
         SubscriptBox["x", "3"], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}]}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["x", "2"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}]}]},
    {
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["x", "3"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  ColumnForm[{Derivative[1][
      Subscript[$CellContext`x, 1]][$CellContext`t] == 
    Subscript[$CellContext`x, 2][$CellContext`t] - 100. 
     Subscript[$CellContext`x, 1][$CellContext`t] 
     Subscript[$CellContext`S, 1, 1][$CellContext`t] - 100. 
     Subscript[$CellContext`x, 2][$CellContext`t] 
     Subscript[$CellContext`S, 1, 2][$CellContext`t] - 100. 
     Subscript[$CellContext`x, 3][$CellContext`t] 
     Subscript[$CellContext`S, 1, 3][$CellContext`t], Derivative[1][
      Subscript[$CellContext`x, 2]][$CellContext`t] == 
    Subscript[$CellContext`x, 1][$CellContext`t], Derivative[1][
      Subscript[$CellContext`x, 3]][$CellContext`t] == 
    Subscript[$CellContext`x, 2][$CellContext`t]}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.656431439722061*^9, 3.656431451799693*^9}, {
   3.656431495128727*^9, 3.6564315039614973`*^9}, 3.656435159167968*^9, 
   3.6564351979537153`*^9, 3.6564357978575773`*^9, 3.656443777921315*^9, {
   3.6564438164524574`*^9, 3.6564438293609056`*^9}, 3.65644490532388*^9, 
   3.656445377579658*^9, 3.656445500709628*^9, 3.656445539409176*^9, 
   3.656445601937382*^9, 3.6564458592219505`*^9, 3.656447367133382*^9, 
   3.6566281874571342`*^9, 3.656628997167046*^9, 3.65662947627435*^9, 
   3.656630732831882*^9, 3.656631836613777*^9, 3.656631905469968*^9, 
   3.656679386881317*^9, 3.716571950243712*^9, 3.785102216092086*^9, {
   3.785109830653162*^9, 3.7851098472433863`*^9}, 3.7851126533314304`*^9, 
   3.785178850310132*^9, 3.827529297179044*^9, 3.8275293695110607`*^9, {
   3.827529441872788*^9, 3.827529455178808*^9}, 3.890128700909526*^9, 
   3.890691239264772*^9, 3.89107477035646*^9, 3.891080787087159*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"183cc296-0ad1-4a75-b280-51325f156dbb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tracking eqns:", "Subsection",
 CellChangeTimes->{{3.656632156810411*^9, 3.656632166557914*^9}, {
  3.891080799634375*^9, 
  3.891080808061516*^9}},ExpressionUUID->"b6a21c1a-91b7-43ac-8ee1-\
37b7bc45f2ec"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Xi]", "[", "t_", "]"}], ":=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Xi]", "#"], "[", "t", "]"}], "&"}], ",", "n"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", "[", "t_", "]"}], ":=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["w", "#"], "[", "t", "]"}], "&"}], ",", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Eta]", "[", "t_", "]"}], ":=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Eta]", "#"], "[", "t", "]"}], "&"}], ",", "n"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Xi]Eq", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Xi]", "[", "t", "]"}], ",", "t"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", "B", ".", 
          RowBox[{"Inverse", "[", "R", "]"}], ".", 
          RowBox[{"B", "\[Transpose]"}], ".", 
          RowBox[{"\[Xi]", "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"S", "[", "t", "]"}], ".", 
          RowBox[{"w", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cm", "\[Transpose]"}], ".", "Q", ".", 
          RowBox[{"\[Eta]", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"A", "\[Transpose]"}], ".", 
          RowBox[{"\[Xi]", "[", "t", "]"}]}]}], "\[Equal]", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"\[Xi]", "[", "t", "]"}], "]"}]}], "]"}]}], "]"}], "/.", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"w", "[", "t", "]"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "//", 
     "Chop"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"S", "[", "t", "]"}], " ", "yerine", " ", "Sr", " ", "koyarsan", 
    " ", "olur", " ", "zamanla", " ", "degismeyen", " ", "K", " ", 
    RowBox[{"icin", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ColumnForm", "[", "\[Xi]Eq", "]"}]}], "Input",
 CellChangeTimes->{{3.656435253281584*^9, 3.6564352741783867`*^9}, {
  3.656435306097001*^9, 3.656435414358287*^9}, {3.6564354668214993`*^9, 
  3.6564355248414164`*^9}, {3.6564359074328547`*^9, 3.65643590927369*^9}, {
  3.6564369233360987`*^9, 3.656436953876887*^9}, {3.656441743267144*^9, 
  3.6564417774746523`*^9}, {3.6564418334243283`*^9, 3.6564418407584696`*^9}, {
  3.656441908422515*^9, 3.6564419462948456`*^9}, {3.6564420130157866`*^9, 
  3.6564420256716304`*^9}, {3.656444678458712*^9, 3.6564446834352083`*^9}, {
  3.7165723575930405`*^9, 3.7165723681911*^9}, {3.7851022715244303`*^9, 
  3.785102316778289*^9}, {3.82752948894354*^9, 3.8275294957511425`*^9}, {
  3.8275295341042624`*^9, 3.827529539098873*^9}, {3.8275296803003416`*^9, 
  3.827529716334203*^9}, {3.890129026371516*^9, 3.890129052631935*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"80ebe1a4-0f8a-46ed-81d3-d91793dcfe84"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "100"}], " ", 
        RowBox[{
         SubscriptBox["\[Eta]", "3"], "[", "t", "]"}]}], "-", 
       RowBox[{
        SubscriptBox["\[Xi]", "2"], "[", "t", "]"}], "+", 
       RowBox[{"100.`", " ", 
        RowBox[{
         SubscriptBox["\[Xi]", "1"], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Xi]", "1"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "100"}], " ", 
        RowBox[{
         SubscriptBox["\[Eta]", "2"], "[", "t", "]"}]}], "-", 
       RowBox[{
        SubscriptBox["\[Xi]", "1"], "[", "t", "]"}], "-", 
       RowBox[{
        SubscriptBox["\[Xi]", "3"], "[", "t", "]"}], "+", 
       RowBox[{"100.`", " ", 
        RowBox[{
         SubscriptBox["\[Xi]", "1"], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Xi]", "2"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "100"}], " ", 
        RowBox[{
         SubscriptBox["\[Eta]", "1"], "[", "t", "]"}]}], "+", 
       RowBox[{"100", " ", 
        RowBox[{
         SubscriptBox["\[Eta]", "2"], "[", "t", "]"}]}], "+", 
       RowBox[{"100.`", " ", 
        RowBox[{
         SubscriptBox["\[Xi]", "1"], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Xi]", "3"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  ColumnForm[{(-100) Subscript[$CellContext`\[Eta], 3][$CellContext`t] - 
     Subscript[$CellContext`\[Xi], 2][$CellContext`t] + 
     100. Subscript[$CellContext`\[Xi], 1][$CellContext`t] 
      Subscript[$CellContext`S, 1, 1][$CellContext`t] - Derivative[1][
      Subscript[$CellContext`\[Xi], 1]][$CellContext`t] == 
    0, (-100) Subscript[$CellContext`\[Eta], 2][$CellContext`t] - 
     Subscript[$CellContext`\[Xi], 1][$CellContext`t] - 
     Subscript[$CellContext`\[Xi], 3][$CellContext`t] + 
     100. Subscript[$CellContext`\[Xi], 1][$CellContext`t] 
      Subscript[$CellContext`S, 1, 2][$CellContext`t] - Derivative[1][
      Subscript[$CellContext`\[Xi], 2]][$CellContext`t] == 
    0, (-100) Subscript[$CellContext`\[Eta], 1][$CellContext`t] + 
     100 Subscript[$CellContext`\[Eta], 2][$CellContext`t] + 
     100. Subscript[$CellContext`\[Xi], 1][$CellContext`t] 
      Subscript[$CellContext`S, 1, 3][$CellContext`t] - Derivative[1][
      Subscript[$CellContext`\[Xi], 3]][$CellContext`t] == 0}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.6564419294455214`*^9, 3.656441940444733*^9}, 
   3.656442026545247*^9, 3.6564428365083785`*^9, 3.6564436059970417`*^9, 
   3.6564439790223875`*^9, 3.656444490591695*^9, 3.656444686853674*^9, 
   3.6564454034821568`*^9, 3.656445883394816*^9, {3.6564473987787905`*^9, 
   3.656447423745366*^9}, 3.656629156323833*^9, 3.656629245862438*^9, 
   3.6566295050477858`*^9, 3.656629630746139*^9, 3.65662970055626*^9, 
   3.656629764468665*^9, 3.656629858665202*^9, 3.656630778112759*^9, 
   3.656631947698719*^9, 3.656679410784977*^9, 3.7165721098890343`*^9, 
   3.7165723689151726`*^9, 3.7851023175548058`*^9, {3.7851098308110685`*^9, 
   3.785109847327337*^9}, 3.785112653394394*^9, 3.7851788503454313`*^9, 
   3.8275295299696784`*^9, {3.8275296949078665`*^9, 3.827529716671075*^9}, 
   3.8901287496661053`*^9, 3.89069124112647*^9, 3.891074771914632*^9, 
   3.891080788465866*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"1ac43f5d-5330-490d-b97c-563180c72a88"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Desired tracking ", "Subsubsection",
 CellChangeTimes->{{3.6566321221713057`*^9, 3.656632151280548*^9}, 
   3.7851029515363245`*^9, {3.891080861951701*^9, 
   3.891080865668984*^9}},ExpressionUUID->"43ed54a3-134a-46b9-85a4-\
7075cecf7951"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"yd", "[", "t_", "]"}], ":=", 
  RowBox[{"ao", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Eta]", "[", "t_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"yd", "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"yd", "'"}], "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"yd", "''"}], "[", "t", "]"}]}], "}"}]}], ";", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<\[Eta](t) = \>\"", ",", 
    RowBox[{
     RowBox[{"\[Eta]", "[", "t", "]"}], "//", "MatrixForm"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Xi]Eq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[Xi]", "[", "t", "]"}], ",", "t"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"S", "[", "t", "]"}], ".", "B", ".", 
         RowBox[{"Inverse", "[", "R", "]"}], ".", 
         RowBox[{"B", "\[Transpose]"}], ".", 
         RowBox[{"\[Xi]", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"S", "[", "t", "]"}], ".", 
         RowBox[{"w", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cm", "\[Transpose]"}], ".", "Q", ".", 
         RowBox[{"\[Eta]", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"A", "\[Transpose]"}], ".", 
         RowBox[{"\[Xi]", "[", "t", "]"}]}]}], "\[Equal]", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"\[Xi]", "[", "t", "]"}], "]"}]}], "]"}]}], "]"}], "/.", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"w", "[", "t", "]"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "//", "Chop"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"ColumnForm", "[", "\[Xi]Eq", "]"}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.785102549451578*^9, 3.785102642314066*^9}, {
  3.7851026921761537`*^9, 3.7851027248112297`*^9}, {3.7851061257539673`*^9, 
  3.7851061335883284`*^9}, {3.785106193412916*^9, 3.785106196130302*^9}, {
  3.785106995750309*^9, 3.785106997974004*^9}, {3.7851098559832497`*^9, 
  3.7851098584667735`*^9}, {3.8275298245861335`*^9, 3.82752983544009*^9}, {
  3.890130203881261*^9, 3.8901302281717453`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"8efe5b4d-eb69-4bf5-b8a4-e14cca56797e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Eta](t) = \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"ao", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "\[Omega]"}], "]"}]}]},
        {
         RowBox[{
          RowBox[{"-", "ao"}], " ", "\[Omega]", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]"}], "]"}]}]},
        {
         RowBox[{
          RowBox[{"-", "ao"}], " ", 
          SuperscriptBox["\[Omega]", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "\[Omega]"}], "]"}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["\[Eta](t) = ", 
   MatrixForm[{$CellContext`ao 
     Cos[$CellContext`t $CellContext`\[Omega]], -$CellContext`ao \
$CellContext`\[Omega] 
     Sin[$CellContext`t $CellContext`\[Omega]], -$CellContext`ao \
$CellContext`\[Omega]^2 Cos[$CellContext`t $CellContext`\[Omega]]}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7851027153958898`*^9, 3.785102725231*^9}, 
   3.785106135481203*^9, 3.7851061969807963`*^9, 3.7851071274592857`*^9, {
   3.785109830903014*^9, 3.785109859007455*^9}, 3.785112653454358*^9, 
   3.785178850368162*^9, 3.827529873909522*^9, 3.89012875212847*^9, 
   3.8906912425050373`*^9, 3.891074773753602*^9, 3.891080789844077*^9},
 CellLabel->
  "During evaluation of \
In[81]:=",ExpressionUUID->"e7ae28bd-e0f2-4ae8-b6dd-1ce061851c69"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       RowBox[{"100", " ", "ao", " ", 
        SuperscriptBox["\[Omega]", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "-", 
       RowBox[{
        SubscriptBox["\[Xi]", "2"], "[", "t", "]"}], "+", 
       RowBox[{"100.`", " ", 
        RowBox[{
         SubscriptBox["\[Xi]", "1"], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"1", ",", "1"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Xi]", "1"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"100", " ", "ao", " ", "\[Omega]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "-", 
       RowBox[{
        SubscriptBox["\[Xi]", "1"], "[", "t", "]"}], "-", 
       RowBox[{
        SubscriptBox["\[Xi]", "3"], "[", "t", "]"}], "+", 
       RowBox[{"100.`", " ", 
        RowBox[{
         SubscriptBox["\[Xi]", "1"], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"1", ",", "2"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Xi]", "2"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "100"}], " ", "ao", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "-", 
       RowBox[{"100", " ", "ao", " ", "\[Omega]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "+", 
       RowBox[{"100.`", " ", 
        RowBox[{
         SubscriptBox["\[Xi]", "1"], "[", "t", "]"}], " ", 
        RowBox[{
         SubscriptBox["S", 
          RowBox[{"1", ",", "3"}]], "[", "t", "]"}]}], "-", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Xi]", "3"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  ColumnForm[{
   100 $CellContext`ao $CellContext`\[Omega]^2 
      Cos[$CellContext`t $CellContext`\[Omega]] - 
     Subscript[$CellContext`\[Xi], 2][$CellContext`t] + 
     100. Subscript[$CellContext`\[Xi], 1][$CellContext`t] 
      Subscript[$CellContext`S, 1, 1][$CellContext`t] - Derivative[1][
      Subscript[$CellContext`\[Xi], 1]][$CellContext`t] == 0, 
    100 $CellContext`ao $CellContext`\[Omega] 
      Sin[$CellContext`t $CellContext`\[Omega]] - 
     Subscript[$CellContext`\[Xi], 1][$CellContext`t] - 
     Subscript[$CellContext`\[Xi], 3][$CellContext`t] + 
     100. Subscript[$CellContext`\[Xi], 1][$CellContext`t] 
      Subscript[$CellContext`S, 1, 2][$CellContext`t] - Derivative[1][
      Subscript[$CellContext`\[Xi], 2]][$CellContext`t] == 
    0, (-100) $CellContext`ao Cos[$CellContext`t $CellContext`\[Omega]] - 
     100 $CellContext`ao $CellContext`\[Omega] 
     Sin[$CellContext`t $CellContext`\[Omega]] + 
     100. Subscript[$CellContext`\[Xi], 1][$CellContext`t] 
      Subscript[$CellContext`S, 1, 3][$CellContext`t] - Derivative[1][
      Subscript[$CellContext`\[Xi], 3]][$CellContext`t] == 0}],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.7851026436172843`*^9, {3.7851027154098806`*^9, 3.785102725238987*^9}, 
   3.7851061354881988`*^9, 3.785106196987779*^9, 3.7851071274672985`*^9, {
   3.78510983096098*^9, 3.78510985901445*^9}, 3.7851126534593554`*^9, 
   3.785178850370248*^9, 3.827529873909522*^9, 3.890128752132636*^9, 
   3.890691242509966*^9, 3.8910747737787457`*^9, 3.891080789865965*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"2d3cdf74-2645-4386-94a3-5dfb4a6116c5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part iii) Simulation", "Chapter",
 CellChangeTimes->{{3.785092240217247*^9, 3.785092241914264*^9}, {
  3.7851028780033827`*^9, 3.785102878145276*^9}, {3.7851080476291*^9, 
  3.785108048253728*^9}, {3.891080869313568*^9, 3.89108087216774*^9}, {
  3.89108175879475*^9, 
  3.891081761222907*^9}},ExpressionUUID->"4523b170-3f55-407b-8d0c-\
e9194a62731c"],

Cell["Given values:", "Text",
 CellChangeTimes->{{3.8910747945562153`*^9, 3.891074801555488*^9}, 
   3.891080882128131*^9},ExpressionUUID->"f82248a2-bdfe-48d9-a59b-\
2e96f5136843"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Vals", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ao", "\[Rule]", "5"}], ",", 
     RowBox[{"\[Omega]", "\[Rule]", "\[Pi]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sol\[Xi]", "=", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Xi]Eq", "/.", "solS"}], ",", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"\[Xi]", "[", "tf", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"Cm", "\[Transpose]"}], ".", "Sf", ".", 
             RowBox[{"\[Eta]", "[", "tf", "]"}]}]}], "]"}]}], "}"}], "/.", 
        "Vals"}], "//", "Flatten"}], ",", 
      RowBox[{"\[Xi]", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}], "//", 
    "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Xi]", "[", "t", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "/.", "Sol\[Xi]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        SubscriptBox["\[Xi]", "i"]}], ",", " ", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"\[Xi]", "[", "t", "]"}], "]"}]}], "}"}]}], "]"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.785102786389309*^9, 3.7851028261994486`*^9}, {
  3.785102964272684*^9, 3.7851030001631804`*^9}, {3.7851068431207004`*^9, 
  3.785106857324328*^9}, {3.8275299254719067`*^9, 3.827529956311327*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"5b0f938a-504a-4e0b-b067-df5ae66398c7"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
8LXYfc2feSS4l3N0qr4eR/8ZvhO0KCDBfjvJGPsWwtNu4+NPX5PgYM5nMfUO
HLlfF67mKiXBq0umh617CL+91EtzLSeB92iFQ1k/jkjdLqFvEQlmT/zuDxzA
kcdapKNMNQnCv+4aDPlKeFvlpXZwDbEenUJ7GgjPilp3kzrqSSDgFaLsSXjX
O5Dth1YzCYxGnxy0JmKUrFp3s5UEV1lLsxeJ9hLVNpnf24n67/Of+Uf49/j3
4EusbhJ8E648XEv4t1L00aHMPhLYjHPZfCb8SzGsM+AYIEHSU+N2424c+brO
iLsMkaCebso7Sfi3+prU7JtREnSWhvMMEf6VeWnSTPlGAtKn3/PKdTgK6PLO
CZwiAetm3HIR4d/af3ERbdMkmLFdNLtN+FdOpdRNc44EH/V2CL8pwNFpq6Gd
NxZJ0DWWd3brMxzVnxaQ+faHBJhhYePsIxzRkrct0f+SwGPwmSVHAo6aJi/n
rXGKgJLI+lH+yzhSEn0W7cQrAgEGrjEcQTgKMfjkWSIgAtVLbnG4N45UrinS
TomIQHRFlWy1FY5C8yxWP5JFwEB1yPn3Thy1dZ7qVqeIwGC6RmCoJo4uKFfH
jskR95fI/Qhcj6PuSnf2A+oisCGs5YdhNQv9MumVDtMUARA4L+X0ioV4K3Zr
p20TgdamX/bjD1lI952h55i+CBzeXdVgHMhC8W9ITQF0EVj/zZLgDws9N4wY
u8si8nXePXWGm4WqSlbWii1EwPH4TYejP5ho9r+xbWt7RMBy/PPIjTdMtLuw
LCHaWQS66Y6x8nuYyGP7tvwXriKwz4zrCU2Hic7nP21odReBhx9qPsZTmOj5
y9v/JH1EgNP6D2/PZwYSyPVyzzgjAvmGm9lHXRnoQyZ5a3msCPRT7hUV2NDR
F6UofPAOkX/uOeud6nS08HjNjfO+CNRmVdqxeOlIKX3yLv5QBBSGvsh/eWOO
LqeglY5sEZDIct+0Sd4c7bx/vOZnpQg4G5x9K/nRFBVdq3amLYiAfOpQ38Jr
DGXtaqBE/haBzVzGEZtxDCUKtbX9WCHmt/nIp0u9O9HF2AHGGw5R4FN5mp68
bIwsE5Y1HEiiUBdEtRjeaoSGnm5di94sCj3PPtpGBOuj9TXJqUuuomD+0Kqx
Knor8uAOHGxuFoV6JmmL/XQ/Ji1f17XSKgo/MxXte5N/Ys36sh9VO0SB6+Pr
2SeHlzDd4+/LL/eJQvvcal5SBSfwfBJP0p0QhZd795R9+ikCmWmv7VPYxYDs
rJjj/4cGIzt+15/QFoP10mpIbM9WSLC3rEzUE4N1AgdNzzVsBcuTaSU1hmKw
SznGLoSuBYXprCwFEzGQZq0c3K6/DcL5H1ztsBID5q4/iTsp2qDUZQDGnmIw
+1nTcyvSgyMB54qIdwt4nzO5O5q0E3S3fSlSeygGae3W8kXsGAjMwmtGGjH+
iollgwcGL/15/rv4hMgvwUHGVRJg1S+ueD5fDPqzD8U09gLcO/n0TX+DGNzh
8RQ5a20K3poCZX+axcCCzXX/unOmYDR9vEyiTQwqZE4obX9qCsO+28ptusVA
VubfNs1/prDVt/xt9YgYJOxl/9z4xAzqjn+qeP5XDMTmWkLefzWHZHXdyjo2
MgzufbhtlYcOflMJlWOcZIicjthWtJkOEsedq2gCZLiuF5mbc4oObj7fquMl
yLAzrEj1xl866Gy2fP9KigwRZ+91l8sxgO/7i/fNVDJ4rpVY+mAMyDt2+gOf
Ihk+Cx700r3AIL7f1mpCNckgto/rV/BvBnxUc6t9sI0MftdNl0+JMyH9W3Xt
ax0yoH8ybKNaTMC9o+p+7SADkyHnreLNhHte4g3uLDKcsq+sILcywVs1uOGS
BRmKM4r6cr8xwWiityHFmgzHliLYi9lZMOSZ1thtR4bb5bNKsltZoOm5udnS
lQyn/dj4qBEs+OItfzLXnQyL69Sy+5JYcOO4GGm9FxlCVDVpP1+y4Jv/yp6P
vkT/uhP2/D0sSDg9PasZQIa1c3VLpCkWMM4M34kNJMPCpXk9738seBza0LEn
lBjfrzODXwEH2wvvgvIvkMHnOseIjRYObJcLJMWukKFF4e/AGOCEx5P2t18n
w62bLdZ/D+EgFHVrWTuGDHfdhv+F+uBQeuNK0t1YMnzd5tOJB+Mgedvns8N9
Mtw4XRBed4vwQ7zL+f8SyTAl1FJ0LhGH0/f3ylNSyPC991HV2QwcNiQyUfAj
MryLqfOsysWhNXmHa08GkU/qxEHH1zhcTNXkMMwiAzXTykX/LQ4a6YqPE5+R
4RthhSPvCf9mSJqvvCDDhvuuH7sbcIh+Kjh6MJ9Yv+4NnxNacTDMWbtaVkSG
kX8vdzzuJHz9fE5FtoQM5zadrl/qxeFe3nhNWBkZbJTsT94jPEjP7/P68o4M
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
pb9ZcwcHQhKTU/l88i1mJStEXMHi4R9p6TR+9S3K1R1rw92UX9u2JoOGYbp9
eouhDVfdXlasnknjbbmW/v1VNlzr3gi/jGwaW1JtTxfw/m64+vfjC/k03ped
Vu4SibmxxzyKfa/QaL6xrP2lr5hT3FSdoF9Io7NYfXBWgpjTHLffpqCYRvha
h8BNLbzftBtXfK2Uxu/Yzqy2VRLOUd0nIaycRp6Bqsq/IRLO9eNt38WVNCYb
f5fqP8bzZ2LcrEqOhqBKWdTdKOGSmxUTam/z+sx3+SYyZ7hTWdt8Y+/Q+PMk
F/p4BcNlBTeJ2AY+XjqsfsKX4a6rJI80NNEIPqGWnp3CcFz350cJD2gsUPQK
+HSJ4e7cdLq6vJmG8sO5Lp5VDNexdopvyyO+//edw+rf8n7cIFiU0kZjuXvk
g2uDDNf3s1XT9SmN7NmCTfd4vhxqXDSi2s7n+0pmy6mx3NiM1EfPOmjstdJr
89djOYWAwaIzL2j4vvV/2mfKclOFqw+7d9KQ32JSkWLDcrpdaqLXXTTWT604
buTGckYl4ZrZb3k9Pty2neTL8+CB9uHN3TSEjUmpHYEsJ1oleKTbQ6MtSLLf
I5znR930op73/H8lxGNhFMutGhqNz/9IozI+s/QAz5sb7rj7bOulsc1Cd3sF
H/ueqrKe/5nGg4hngov7WC5oi5Zmfz+N12efS2T9WS5CEDVc/JWG1SP969EW
LHdA6XVr8ACNISU/Odd2hkt8YV1kOkhjouBCfbUGw50ozIofGqJx+lvp+ilF
Yu58pIxP2QgNtW3d+2NURFy+02briJ80io+X+D3cZMmVkPqZVr94vW8rb/Fx
MOJufdUZ/v2bxmED90mqkSuq/g+6yu2Q
           "]]},
         Annotation[#, "Charting`Private`Tag$17643#1"]& ]}, {}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{15.208333431122448`, 1.7083381249999832`}, {
       4.58539355618754, 19.592264258888065`}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        SubscriptBox["\[Xi]", "1"], TraditionalForm],
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {193.5, -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJwU13c8ld8fAHB7z2tfXBdllFEpX0meT0pFUhSppLKSkGgoipRN9t7z3oeo
pIyMg0goMrIlKymV7BG/5/fXfX1e9/Oc8znn+Zzndd6y1tdN7ZgYGBg+sDAw
/P839YE1207bEF04t3fV2jsA3nZSjc5Qr2Iu01vBxd8fNhurH1Gpd7HMVft7
f0L9IBWFybBSg7AIqSX/GwmPwGn/LeclmUTsUhjFXeK0N3SuOcT8kcExam1q
VvycC7APjCrOyJRjZVJeG4pXXVEvqrr1c6ocs+J+1Mhp74by8xLqf7yowKqn
XqV5Wt9Exm7GF6cPVmIVQpPyX856oDjOirhvV2own4JRcj7VB5FSmphme+qw
Jgu9+H3zASizOf3GD5n32EyS+RatyGg0n/Bq25fQ91gvKTRXRDAGHb7SMtax
8h6b83hZYBMRg34yL5lVdDZjgbw3OQ+GxSKt/cbaQQGtWBjDi6Cn3vGo/dk6
k+LvNmwoZu+urYeSEQnjtOJVa8fmG0q7r5Yno30KMdoBtu2YdfeG9pRqCnoy
j8/d+9SOSZ7jOucnnIp2R3bbWRd8wsxukycme9KQd7OK4c6LnZj/0MWPh8mZ
iP6iVKEgthND1pJ2q8czUUeCHvPW1k5s+y+rA7seZqItVywqxfd2YXdLKoSV
JzNRM/NjNQahbmyqpKyJOz8Lie4fILU1fsbuLz7e5iGeg2CL/e+j/z5jGi3b
drQezEFXuWdb6jR6sEevf5iEu+Sgyj42v9cZPVhrgIOUVV0Osr69ayn1Xi9m
4/3R8J91Lip6FjTgpNaPBV/6m2AUkIemSdOhhpf7sX9tSq5deXlI8bahrlJM
P6ZjZijU1pCHMnS4M8dW+rEta0+eSjDRUNT7UPtzDQMYe8qj+d/uNPRRZUZM
a3kAa2EdLF55QkPcEcffi2wfxKr7M0NdcRp6bM6n8iliEOueWhbNHqSh22Ph
s0csh7BB2g9zLh06Kj78J2tr+BCmq7C395opHf3GT55mrhvC+P+zq9zjQEcO
roKl1YrDWNBxP3+GKDrK6bzhkHJuGNtuVXyRIY+Ovmp2SNwLG8aqAlOe2JfT
0bl/UV575oYxH7cX4rbDdBR3aU5VSOELJtF9KWj1Nx111p/68sfiC2Yods5r
gQFHRsHCek+rv2BfHvCcFpPFUeDMzbmg2S/YsPTsnf07cGRNd+zQII1gmkFM
cY26OErnbnkkqD+CPfLpPcpwDke6+z0tfaxGMPV9slrP7XE06LJ9z+87I9jl
jfAPtW44upcxwGsVOYJZN05W7H6AI/GOkMnW/BGsevfLUo4gHL1m1qnZ93YE
E7Nhf7w/Gken9/yMzx8awfzjskc6UnAUmWBkECjwFbuo4mhGKcLRjuZ12SXl
r9gdp2GWrlc4+rj2dNXu4FfsrFW70/dKHDmpXujssvyK3Q5OumBVjyOui7xP
D97+ijU/NHu26z2O6BFVj4vDv2IqT5bB/iOODtc5X5DFv2LiX0pnlztwND4n
rRlR9xWbcHTLnP6Mo0dbP/JtDnzF+EipWvv6cSR35sE354Wv2JvgzNzpQRyh
QDU0yDeKhcpz9CwP48iqYjjhmNIo9uLsmUq7ERyt/3hyo+LAKPaZds5451cc
JUljhsrnR7G/RdPB54lY68RvuYSbo1g778z1cSL/s0/6GtuTUUzE3uRfyxcc
3So+0XWLNoqRmrfpkIjxhcc3n46jUWwtw/e/0gEcFYs89zvVP4qdbPBcr+jF
0ckjl6zq5kaxO3aO6dLdOPrlIfDfTt4x7M92Dc0v7TgKzUf8GQpjmMLVO/2b
LTjaNug6xQdj2JEjB556N+KoiVe29v7ZMcxl0KfVCuHoCvYp8afbGBZaE3w5
tRxHDFmLFQMhY9g7QRUN62IcJbBIDTbnjGHb9Tw5w/KJ93PlwL/yqjGs47ah
MCWLGO+9PQX/PIbVf37vL5KIo0sqoVjC7zHsqtbVWPdwHC0/eXEpgGMci72p
56nlhyOl0+tZdtrj2G3NG2+XXIj9fS379vSpcUwLbS/8a40jC4kjEwedxrGq
T8x3zMyJfh2OVJRLG8cEzLy/ntqHoykHxafDjBNY65f0Xfs36MinxejDB/IE
JmZZu9Nnho7E1dx+VWpMYKT4l59UB+no6FzljmS7CUz53t7E5lI6wu+bvjrz
fgJzLlK7J0qcP72RO58Pj05g8XaqmRXE+ezXS13aszaB9aR1sX8gzi8Xx9Re
YdVJjFHFJFeXn44co+5Xt0dMYop/LaxtC2mIaSHrSw0+id3eGZAfFE1DSWea
GJ7VTWKbMjsLZe/SULOU0MGw+Ulsaqz6wlM9GtpOo78zsPiGVdMaA3Xb8tDP
N53tdTJT2JjFrN/sx1z0mLIy+0JrCvPubXsd/TQXST2kCGWaTGGf/66xlwTl
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
acGCdEZC1E8myomDHCFuPo+Xzri1GuuIb+fAja/FNc0pnRn1H9mj7cqByxev
fHpGOqOc5NJ6yJvFl109XWedxtBv1Qqm97P6vDyp/bQtlTHeV7Nj/jEO6p/E
KseVJjMTbd0bnhzn4NQybSf36GSmxFRY+/AJDrwftK6ca5HMKEvZCr5P4sAg
ZI5rXn4SI/ykvSQ3nYOeb+rjal8TmDapPhFc4WDpd47s0Y3HmcCnksy+Sg7U
ZgS1757DY9Q0dfM4VRys4atVmkqNZTrPOqc3P+Ig3vWuVKViLOMQmLVXr5qD
xOXyF97qxTAGMipSs+vZOlfn2N3OSEbwgH5QZjsHFoc67OM6DjPZsl5KL0Y4
SJ41uk7rkw+jt1J9uddv9n49bk1ku3szzRuHdcfGONjFF80v9dmTETwcv0lp
kgOxFP+69GZXJrDxRlA4P8HT5oF+FY2tDOJ/McvECEIEItReS2qh/Xz580fi
BKHrU01HRvXBLY5rdpIgeCVj8iXOyxS5nxZ/pxcSvItUN1giYY35+gZi72UI
2ruqSECoM770064JKgSn49p9JfJ3IXy2tS+lRjDaLaVDf/DFIrnFB+6rEzi+
ry2VFfGHpeV1+utyAtNvun8KPfeg6Ep9nuFqtv98w/rvXfvBc1408dOYQKY8
qP6qNhfygR9n0qYE1ztPCV4r5qI0PldEej2B87dXW2RXBqO3WI+zwYIgPk3u
2k6NQ7ATdbfIsibgaljJW4iFQOlxTrr1DoIs2dfurkfC0LBs7EqHCwHHKLF4
xc8whKRbFO92Izg/lb4kxDYcdf7dL+M9CcoOqRr6L4xAkLj63Epfgh+JPy5W
Ho+EbGjYYit/gkyZnJHV/0XiaWfdkne7CaT77fQUDKLwz729Jr8DWPzNQw83
dkWh0rUgbAWXYPFZtQcRadHwq5k6VhFMcCLGv5G/PBoSWjYZmw4TDD+RkKr6
HI1dAgMlvqEEChLV4d1qMRDO0+rLjiZwuEDb9hbH4K5k7KRGLEGh+KoMw+YY
eEQ2zSvnEdQKhgrV/opBse3BpW3xBOYHKbskzVhsHyvxEE8gKM+Y8v90IRYC
XrP2ZyUSuLeF/J5bFouCOvuIZckEJqI7P+5vjsWM7NEzFqls/4wczSEBHm4I
mue+OUVw4W78DjFZHuyCTt/1SSdYn9Lgu1ubh9z1a15HnyF45KnW9s6Fh62F
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
Gv4fjtegPQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$17696#1"]& ]}, {}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{26.43750009311224, 1.9375045625000666`}, {
       4.58539355618754, 19.592264258888065`}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        SubscriptBox["\[Xi]", "2"], TraditionalForm],
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {580.5, -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
aInUS8Ev+/4Poo1ptQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$17749#1"]& ]}, {}},
      AspectRatio->1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{26.437500093112245`, 1.9375045625000382`}, {
       4.58539355618754, 19.592264258888065`}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        SubscriptBox["\[Xi]", "3"], TraditionalForm],
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {967.5, -189.}, ImageScaled[{0.5, 0.5}],
      {360., 360.}]}, {}},
  ImageSize->{
    UpTo[600], 
    UpTo[257]},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.7851027996173773`*^9, 3.7851028267291174`*^9}, 
   3.785103004874344*^9, 3.785106141457733*^9, {3.785106201261243*^9, 
   3.785106223116291*^9}, {3.785106844435889*^9, 3.7851068595629697`*^9}, 
   3.7851071321585026`*^9, 3.785109848199823*^9, 3.785112654231902*^9, 
   3.785178851216041*^9, {3.827529922905629*^9, 3.8275299288580055`*^9}, 
   3.890129095741441*^9, 3.890691250093953*^9, 3.8910747881843767`*^9, 
   3.891080891685561*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"deec5cf7-3940-48ee-a89d-c8a00eddc3ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["State Responses", "Subsection",
 CellChangeTimes->{{3.656632085580188*^9, 3.656632096324666*^9}, {
  3.656641764487446*^9, 3.65664177652065*^9}, {3.891082323375016*^9, 
  3.891082331474215*^9}},ExpressionUUID->"a49d0800-dd1d-4dd6-bdbf-\
b9dec2b1abee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"Kop", "[", "t", "]"}], ".", 
     RowBox[{"x", "[", "t", "]"}]}]}], "+", 
   RowBox[{
    RowBox[{"Inverse", "[", "R", "]"}], ".", 
    RowBox[{"B", "\[Transpose]"}], ".", 
    RowBox[{"\[Xi]", "[", "t", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solx", "=", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"A", " ", ".", 
               RowBox[{"x", "[", "t", "]"}]}], "+", 
              RowBox[{"B", ".", 
               RowBox[{"u", "[", "t", "]"}]}]}]}], "/.", "Vals"}], "/.", 
           "solS"}], "/.", "Sol\[Xi]"}], ")"}], ",", 
        RowBox[{
         RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "}"}], ",", 
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}], "/.", "Solx"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        SubscriptBox["\"\<x\>\"", "i"]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"x", "[", "t", "]"}], "]"}]}], "}"}]}], "]"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6564448225820866`*^9, 3.6564448293234167`*^9}, {
   3.6564449207721777`*^9, 3.6564450254001923`*^9}, {3.656629283810116*^9, 
   3.656629284831751*^9}, {3.656629357569471*^9, 3.656629360045333*^9}, {
   3.656629544254322*^9, 3.656629557161785*^9}, {3.656631036880602*^9, 
   3.656631064980282*^9}, {3.656641850465892*^9, 3.65664186549692*^9}, {
   3.6566418971923923`*^9, 3.656641901148185*^9}, {3.716572804584736*^9, 
   3.716572819504227*^9}, {3.785103086334551*^9, 3.7851030917653356`*^9}, {
   3.8901291185534487`*^9, 3.890129150005824*^9}, 3.8910748039193907`*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"055904fa-4111-4809-9fc5-910cb694ebb3"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
+f/TDQUN
           "]]},
         Annotation[#, "Charting`Private`Tag$18358#1"]& ]}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{15.208333431122448`, 1.7083381250000116`}, {1.5, 
       16.500000000000043`}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        SubscriptBox["\"x\"", "1"], TraditionalForm],
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {193.5, -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag$18411#1"]& ]}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{15.208333431122444`, 1.7083381250000116`}, {1.5, 
       16.500000000000043`}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        SubscriptBox["\"x\"", "2"], TraditionalForm],
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {580.5, -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJwUmXc81f8Xx+3tuvd+bublXkkkI1Iq6nMiiSiZDSMaVlllVFIRlZB8kRUN
CqEyKkr3bWVlKyMqGdk7ZOT3+f3lcR7v8TnnvM895/V8kHX0MDvDwcbG9oyL
je3/fx8GOvKon767hw02KmalvvhQ0co0tma64DZHbud8fjL7ce3Tx2Am8xL+
PO3QCuXAehYp+s0rgY4g/HG62XxJkw7rIYpgcDPv4Dw842fq/h1mKU+ejlxz
uoc//KztyHvCltVDSvm30h6NBzUfcYrod2JteMa/fWk5FmfTz5+yHfFindvt
c36BkYD7xGhj+aaXWPltP9Pm9JLxkOGfLvISN1hLbsbd006p+BUZzm5b41DW
I/buOwv6j/G0pDOhd/TDWfvq78vPtz/B49X1dFOD77OG4g1K51zScK/vVYxX
hrGs8NOrNrPL6XhMgMDrZz4JrC1b8henI57jfRMcgWx8KazWZeeYKUYmfvYG
czjs+mOWb5XMlsnXWXjXW2PT+1vSWJL/tdWN62Xj+7fVvdxIe85yVALOUaeX
eN2F/Q5yvjksjuXLjXMBr/DkG/9tNLj8itX201J6Tv81nvbnfecB8zyWf7Zg
0Ux7Hm5iey8xxewNyyh6kGfmUT7u0mPGPuj/jkX3L7WYdinAgx85v/z5rpiF
9PymJpcL8YHQ0pDaEBaL99svhXFGER5R7XOJvqmS1YFKfMaGinDGsqm2z5NP
rKxn8eWjr4vx5/89MPRTrGYd8j5kP6L3AeffNlxhfbyOFcdfHPfbiYVLyri8
MlZqZhX4GXlfEEd46njIegWJFlbyiJbEbADClWvWUTRIrSz3JqrTjH4p/j4n
a7Fc4AuLmlzNMd1ehpOCnp3fYdLJWia9yfTUKcdH5Sk+i+e6WP03nppOPSrH
DdtP5hVFf2O9cQpMmXSpwG/I6C9umOphHd+quWtiuRIv+c38OObfy3pcm+o1
yqjBOa29Bzm5f7Pm4guVfoTX4N82KNQcav3N2u9U19fytwY/M/zM4WvaEGuM
c8GyuLUWZwjv5Ll5ZIS1Y/ehXXdufcaP55OCc5rGWU0vVzgUJhvxwoibPnqv
ZlhUnN9OWLUJ9zqotadJbZalvTFm163TTXjyyZvyn17NsiLnMmcvNzfhylic
yfc3cyzN+1/OOL5oxsdWKQEWrfOsa7XKRur2rbh18pfZr4bLrIzXbze+iG3F
kxMvStO/L7Na4nU55T+34lpxyZZ3LqywNjgd/SC+sw1P2KSvXft4lVXLeVOV
DfuCn5zVns7nZkOiu79RGz99xV1p682DbnGg3Jd3vp1T7cIvXXG40dzFi0ao
I+FGDl140iEzAQ4VPqTga7RHMaYLl26yU/O4xoce6Qg+7vvbhds9jIqb38CP
omvCzx6v/IZz7XnnEeAtgHz77k0b2PTgsreo0RfWCaNUwbpgiv5PfOHX+5Yn
2yhoz+4rNtftfuKwozDp+EkK6nbfvG3S7yfeL3omTuguBYm33B38nPUT5xC1
Cz3+k4Luxxsb3ib34ipyc2KBYVQULN9AWvvWi7/2zYr79Q1DTnhzwph3H84V
bDy9wU0UsT2ZL/52tw//LnQwYUO0KIrnonfXpvXhu/UXmpbfiaLqmrMymV/7
8Iv7Xjcq84ghRYuVJ2d29eP9F/abBaSIoSFnhezv7AN48NexHxOV4uh6nXF9
veQAvvBbIGF8WByJq3pPfNg6gEdmzNfnC0ugA7MftiSdGcB7NwU0RFtIoMyr
ZoXWNQN4e5yO9fUfEsg1+urHpqhB3NPD19VgWBJx/Hnyg5U5iCvSB+8Y80uh
ROtqtpdlg/hOF5H9ApukUC0d04uYG8TP/hldl+0khTY/z6gyPPob78rTrPPs
lUJj71ubyhhDeCJvEbvuJzq6KfN3+vWOIZy15+qyay8d0W/IYI+PDOEupcsH
8BU6Mt7vYnkteAi/rfStbHCLNMpp+tep/XsIl3dP2UKPk0buA5v6CnKHcXXZ
yJDAwzLop10nX2nNMC4yMbiu9awMMu+4rVrfP4x3FL+4/eaqDNpR9/vSgOQI
PnpDrmFjlgzifJ1OFr01god6XG+OW5VBvkqW29c/GcEDvw/tMKYw0NBTLhvV
khE8ZMDdNGwDAzXEnXq+f5bYf+jm84eGDBQfILvHz34Uv+iXFCccyUAC802n
gi+P4tvq1KfmHjLQVY/rd+7FjuI3/YQi7XMYyNHxR9vzulHc9but0odaBmr7
FrmUPziKT2wrn8nuYCADyz1MxD6Gl8uJx8sMMpDygYduHVpj+NQVP6OgNQZK
KTW+3282hseSJx8VcTMRRXvlzdT5Mdx1efWilyATzauc4OBPG8ND1jjkZUSZ
yOW5gOI61hj+sSIqlCrFRN3MYhPZrjH83+5Mg0oGE5ViEgk7yeO4vkDj8mlF
JtKMqP6ov3kcTzCfCTqizETPePz7j+wfx3PeR4cvqzGRxHUFATuHcdx3jqff
cSsThf/9quYaMI632u2zurWdif55h1r6PhjH1QIWC513MpHX2LYrQXnj+GoP
pZ1Hh4n6zww8iqwfxwvWXYtwIEK1+hHzKXFoHI/cuivHH5io+ui+sWecE7hn
ha2wsS4TabfMUvJlJvBhdvGwb3pMlHvwqRZr5wSufUGYTUGfiZiVZrZ1FhP4
s9RfB1X3M1H0Ho7gdo8JPK36ttE0YXO/e53RFzaBX4l92uNhwET+6g4Nk+kT
+EBS+EgmYY9kkeeW0QTeIvzWKpWwbTYgCb7uCVxDOo7XlLAbH3rgtIUJ3DI9
qu89cZ+uGOMMkzqJ3zJt/fqL+H5BVEOYssokHn06r7FiHxMpCAS+2nFgEp/g
Cf7gQPibGKzydd+pSVwcku4W7WUiodXuZdPASdy486rKZ5yJrvmGy9omTOIn
Qq/EJ+xmoplJbQOXgkn8OL2zXFabiU67jJ7zaSTWPb89O72Didp/JUbfGJnE
O5717nDcxkTyqvLdnzim8NBmzEdSg4m+j6xMGJOncIWSkyciVJko/nkbe6v0
FJ73j2usWImJBGRvKvzYMYWPuCPh/euJfOvcVwvUn8LZvuUszUkzUejRFC1p
syk8eJvrfScJJuKIemdwwo2wrfS7HogwEXpReXjJbwof//k+yVKAiQKrWqwT
bk7hGfS+Te1cTLT0b8yp/eEUzrx/teHgDAO9k1zy8M2awgc/cjgPDjCQ73Ze
/3Vvp/B7ITEU/k4Gmjkve9u8aQo/oJml8buEgUa7LTMaOabxYrPjoYJBDJS1
6PjKXWQaPz175MyoFwM50zzfCdOncasL1q0WDgzUfzCs+uC2aVw5tnV/5R4G
6i7+OFTlNI0vC9RXys3JoMSvdVNnL07jj810t1n/lEFHZzoWuW9M48fy/GxE
P8ugtk2zfPsSp/HCnhDlnU9k0Od4hU3o8zTO6712QdJQBoUVaKrbd07j+eZr
xwrVZdCBpr07/w1M4wl1ST3fJWRQBa+Noc7aNF6bqmb5Y0gaffCNcnmnPoOT
dl3Y9+QG0a8s/ma+ipvBRQdPX0tIoaNznjx5h5/O4HtfvFi0uE5HSuFY8cTL
GXzi4seOZw509KxcpVa5ZgZvrLSnkOXoKEXDcSRjeQYPyjvOxv9YCkWS65Qe
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

           "]]},
         Annotation[#, "Charting`Private`Tag$18464#1"]& ]}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{10.104166766581635`, 1.6041715624999995`}, {1.5, 
       16.500000000000043`}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        SubscriptBox["\"x\"", "3"], TraditionalForm],
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {967.5, -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ImageSize->{
    UpTo[600], 
    UpTo[159]},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.656641866482053*^9, 3.6566419018481216`*^9, 
  3.6566794246692443`*^9, 3.6566794548890257`*^9, 3.7165721571084766`*^9, 
  3.7165728208173585`*^9, 3.785103099878454*^9, 3.785106153735462*^9, 
  3.785106233707006*^9, 3.785109849033332*^9, 3.7851126550804043`*^9, 
  3.785178852259656*^9, 3.890129151774826*^9, 3.8906912517517*^9, 
  3.89107480568288*^9, 3.891080894218214*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"6141c369-c5f4-424d-a147-9f6df1b2631a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Output Plot :", "Subsection",
 CellChangeTimes->{{3.656632057622805*^9, 3.656632067367799*^9}, {
  3.891081736606504*^9, 
  3.891081742547254*^9}},ExpressionUUID->"0c8c5a93-d1af-4a0a-b075-\
c61b0e5ed382"],

Cell[BoxData[
 RowBox[{
  RowBox[{"yo", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Cm", ".", 
     RowBox[{"x", "[", "t", "]"}]}], ")"}], "/.", "Solx"}]}]], "Input",
 CellChangeTimes->{{3.785104347690051*^9, 3.785104366029104*^9}, 
   3.7851044079821477`*^9, {3.890129224679718*^9, 3.89012922474561*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"2ce65620-d3b6-4088-ac32-798113881da5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"yd", "[", "t", "]"}], "/.", "Vals"}], ",", 
     RowBox[{
      RowBox[{"yo", "[", "t", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(y\), \(d\)]\)(t)\>\"", ",", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.656631095038085*^9, 3.656631202631371*^9}, {
   3.7165728773230085`*^9, 3.716572898068083*^9}, {3.785103131035774*^9, 
   3.785103155489152*^9}, {3.7851033205045233`*^9, 3.785103325003812*^9}, {
   3.785103417357538*^9, 3.7851034324897904`*^9}, {3.7851034661936083`*^9, 
   3.785103474738603*^9}, {3.7851035722133245`*^9, 3.785103572624092*^9}, {
   3.7851036820016837`*^9, 3.7851036887586603`*^9}, {3.785103730333805*^9, 
   3.7851038049232264`*^9}, {3.785104362871973*^9, 3.78510441941035*^9}, {
   3.7851046359462023`*^9, 3.7851046433357964`*^9}, 3.7851056080684147`*^9, {
   3.7851061633667593`*^9, 3.7851061810612307`*^9}, {3.7851062540409417`*^9, 
   3.7851062541309013`*^9}, {3.7851063078160324`*^9, 3.785106312426327*^9}, 
   3.785112796322771*^9},
 CellLabel->"In[93]:=",ExpressionUUID->"3600a2b7-8250-4e6e-b1d2-3fa996b2e79d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$19967#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUmXc81f8Xx+3tuvd+bublXkkkI1Iq6nMiiSiZDSMaVlllVFIRlZB8kRUN
CqEyKkr3bWVlKyMqGdk7ZOT3+f3lcR7v8TnnvM895/V8kHX0MDvDwcbG9oyL
je3/fx8GOvKon767hw02KmalvvhQ0co0tma64DZHbud8fjL7ce3Tx2Am8xL+
PO3QCuXAehYp+s0rgY4g/HG62XxJkw7rIYpgcDPv4Dw842fq/h1mKU+ejlxz
uoc//KztyHvCltVDSvm30h6NBzUfcYrod2JteMa/fWk5FmfTz5+yHfFindvt
c36BkYD7xGhj+aaXWPltP9Pm9JLxkOGfLvISN1hLbsbd006p+BUZzm5b41DW
I/buOwv6j/G0pDOhd/TDWfvq78vPtz/B49X1dFOD77OG4g1K51zScK/vVYxX
hrGs8NOrNrPL6XhMgMDrZz4JrC1b8henI57jfRMcgWx8KazWZeeYKUYmfvYG
czjs+mOWb5XMlsnXWXjXW2PT+1vSWJL/tdWN62Xj+7fVvdxIe85yVALOUaeX
eN2F/Q5yvjksjuXLjXMBr/DkG/9tNLj8itX201J6Tv81nvbnfecB8zyWf7Zg
0Ux7Hm5iey8xxewNyyh6kGfmUT7u0mPGPuj/jkX3L7WYdinAgx85v/z5rpiF
9PymJpcL8YHQ0pDaEBaL99svhXFGER5R7XOJvqmS1YFKfMaGinDGsqm2z5NP
rKxn8eWjr4vx5/89MPRTrGYd8j5kP6L3AeffNlxhfbyOFcdfHPfbiYVLyri8
MlZqZhX4GXlfEEd46njIegWJFlbyiJbEbADClWvWUTRIrSz3JqrTjH4p/j4n
a7Fc4AuLmlzNMd1ehpOCnp3fYdLJWia9yfTUKcdH5Sk+i+e6WP03nppOPSrH
DdtP5hVFf2O9cQpMmXSpwG/I6C9umOphHd+quWtiuRIv+c38OObfy3pcm+o1
yqjBOa29Bzm5f7Pm4guVfoTX4N82KNQcav3N2u9U19fytwY/M/zM4WvaEGuM
c8GyuLUWZwjv5Ll5ZIS1Y/ehXXdufcaP55OCc5rGWU0vVzgUJhvxwoibPnqv
ZlhUnN9OWLUJ9zqotadJbZalvTFm163TTXjyyZvyn17NsiLnMmcvNzfhylic
yfc3cyzN+1/OOL5oxsdWKQEWrfOsa7XKRur2rbh18pfZr4bLrIzXbze+iG3F
kxMvStO/L7Na4nU55T+34lpxyZZ3LqywNjgd/SC+sw1P2KSvXft4lVXLeVOV
DfuCn5zVns7nZkOiu79RGz99xV1p682DbnGg3Jd3vp1T7cIvXXG40dzFi0ao
I+FGDl140iEzAQ4VPqTga7RHMaYLl26yU/O4xoce6Qg+7vvbhds9jIqb38CP
omvCzx6v/IZz7XnnEeAtgHz77k0b2PTgsreo0RfWCaNUwbpgiv5PfOHX+5Yn
2yhoz+4rNtftfuKwozDp+EkK6nbfvG3S7yfeL3omTuguBYm33B38nPUT5xC1
Cz3+k4Luxxsb3ib34ipyc2KBYVQULN9AWvvWi7/2zYr79Q1DTnhzwph3H84V
bDy9wU0UsT2ZL/52tw//LnQwYUO0KIrnonfXpvXhu/UXmpbfiaLqmrMymV/7
8Iv7Xjcq84ghRYuVJ2d29eP9F/abBaSIoSFnhezv7AN48NexHxOV4uh6nXF9
veQAvvBbIGF8WByJq3pPfNg6gEdmzNfnC0ugA7MftiSdGcB7NwU0RFtIoMyr
ZoXWNQN4e5yO9fUfEsg1+urHpqhB3NPD19VgWBJx/Hnyg5U5iCvSB+8Y80uh
ROtqtpdlg/hOF5H9ApukUC0d04uYG8TP/hldl+0khTY/z6gyPPob78rTrPPs
lUJj71ubyhhDeCJvEbvuJzq6KfN3+vWOIZy15+qyay8d0W/IYI+PDOEupcsH
8BU6Mt7vYnkteAi/rfStbHCLNMpp+tep/XsIl3dP2UKPk0buA5v6CnKHcXXZ
yJDAwzLop10nX2nNMC4yMbiu9awMMu+4rVrfP4x3FL+4/eaqDNpR9/vSgOQI
PnpDrmFjlgzifJ1OFr01god6XG+OW5VBvkqW29c/GcEDvw/tMKYw0NBTLhvV
khE8ZMDdNGwDAzXEnXq+f5bYf+jm84eGDBQfILvHz34Uv+iXFCccyUAC802n
gi+P4tvq1KfmHjLQVY/rd+7FjuI3/YQi7XMYyNHxR9vzulHc9but0odaBmr7
FrmUPziKT2wrn8nuYCADyz1MxD6Gl8uJx8sMMpDygYduHVpj+NQVP6OgNQZK
KTW+3282hseSJx8VcTMRRXvlzdT5Mdx1efWilyATzauc4OBPG8ND1jjkZUSZ
yOW5gOI61hj+sSIqlCrFRN3MYhPZrjH83+5Mg0oGE5ViEgk7yeO4vkDj8mlF
JtKMqP6ov3kcTzCfCTqizETPePz7j+wfx3PeR4cvqzGRxHUFATuHcdx3jqff
cSsThf/9quYaMI632u2zurWdif55h1r6PhjH1QIWC513MpHX2LYrQXnj+GoP
pZ1Hh4n6zww8iqwfxwvWXYtwIEK1+hHzKXFoHI/cuivHH5io+ui+sWecE7hn
ha2wsS4TabfMUvJlJvBhdvGwb3pMlHvwqRZr5wSufUGYTUGfiZiVZrZ1FhP4
s9RfB1X3M1H0Ho7gdo8JPK36ttE0YXO/e53RFzaBX4l92uNhwET+6g4Nk+kT
+EBS+EgmYY9kkeeW0QTeIvzWKpWwbTYgCb7uCVxDOo7XlLAbH3rgtIUJ3DI9
qu89cZ+uGOMMkzqJ3zJt/fqL+H5BVEOYssokHn06r7FiHxMpCAS+2nFgEp/g
Cf7gQPibGKzydd+pSVwcku4W7WUiodXuZdPASdy486rKZ5yJrvmGy9omTOIn
Qq/EJ+xmoplJbQOXgkn8OL2zXFabiU67jJ7zaSTWPb89O72Didp/JUbfGJnE
O5717nDcxkTyqvLdnzim8NBmzEdSg4m+j6xMGJOncIWSkyciVJko/nkbe6v0
FJ73j2usWImJBGRvKvzYMYWPuCPh/euJfOvcVwvUn8LZvuUszUkzUejRFC1p
syk8eJvrfScJJuKIemdwwo2wrfS7HogwEXpReXjJbwof//k+yVKAiQKrWqwT
bk7hGfS+Te1cTLT0b8yp/eEUzrx/teHgDAO9k1zy8M2awgc/cjgPDjCQ73Ze
/3Vvp/B7ITEU/k4Gmjkve9u8aQo/oJml8buEgUa7LTMaOabxYrPjoYJBDJS1
6PjKXWQaPz175MyoFwM50zzfCdOncasL1q0WDgzUfzCs+uC2aVw5tnV/5R4G
6i7+OFTlNI0vC9RXys3JoMSvdVNnL07jj810t1n/lEFHZzoWuW9M48fy/GxE
P8ugtk2zfPsSp/HCnhDlnU9k0Od4hU3o8zTO6712QdJQBoUVaKrbd07j+eZr
xwrVZdCBpr07/w1M4wl1ST3fJWRQBa+Noc7aNF6bqmb5Y0gaffCNcnmnPoOT
dl3Y9+QG0a8s/ma+ipvBRQdPX0tIoaNznjx5h5/O4HtfvFi0uE5HSuFY8cTL
GXzi4seOZw509KxcpVa5ZgZvrLSnkOXoKEXDcSRjeQYPyjvOxv9YCkWS65Qe
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

          "]]}, Annotation[#, "Charting`Private`Tag$19967#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-8.139968232788258, 4.999999999998972}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\\!\\(\\*SubscriptBox[\\(y\\), \\(d\\)]\\)(t)\"", 
       RowBox[{
         SubscriptBox["y", "1"], "(", 
         TagBox["t", HoldForm], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.656631135840246*^9, {3.6566311700599813`*^9, 3.656631204346593*^9}, 
   3.656632029023196*^9, 3.656679474234398*^9, 3.7165728686001368`*^9, 
   3.7165728993152075`*^9, {3.785103135395179*^9, 3.7851031577487893`*^9}, 
   3.785103325448544*^9, 3.785103434341668*^9, {3.785103469317745*^9, 
   3.7851034805811095`*^9}, {3.785103684752057*^9, 3.7851036898390155`*^9}, {
   3.7851037341255198`*^9, 3.785103746562084*^9}, {3.7851037966891565`*^9, 
   3.7851038064063396`*^9}, {3.7851043898769274`*^9, 
   3.7851044200899305`*^9}, {3.785104636858658*^9, 3.785104643828515*^9}, 
   3.7851056093546505`*^9, {3.7851061602585735`*^9, 3.785106181555936*^9}, 
   3.7851062546655693`*^9, 3.7851063135546384`*^9, 3.7851098493101687`*^9, 
   3.785112655349246*^9, 3.7851127976819706`*^9, 3.785178852597741*^9, 
   3.890129239213429*^9, 3.890691256602433*^9, 3.891074820969788*^9, 
   3.891081104822277*^9, 3.8910813063498898`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"227223b4-afe3-4142-bf43-9cd46a2c098d"]
}, Open  ]],

Cell["First Derivative", "Text",
 CellChangeTimes->{{3.891081955009933*^9, 
  3.891081965075254*^9}},ExpressionUUID->"65114da1-99bc-4b4f-884c-\
6eea83e11c25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"yd", "'"}], "[", "t", "]"}], "/.", "Vals"}], "//", "Chop"}], 
     ",", 
     RowBox[{
      RowBox[{"yo", "[", "t", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(y\), \(d\)]\)'(t)\>\"", ",", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.890129952372839*^9, 3.890129988398336*^9}, 
   3.8901301038975153`*^9, 3.8901302721036053`*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"11162450-01a7-4ac3-b607-6adbae157cce"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwU2ndcTf8bAPDqtrS0d7fbXvee00CKnEdEEdJAVJraaYiUQpklDS2VSvjK
SCIRqU+JNDW196CtpYnf+f3V63ndz/4859zn/brJOZ42d2FhYmL6yMrE9P+/
98Ic2bWco3bUOtjKtlFHSiqaaaZHae4Etb07/snJT6X/vpRE0GjnCUZbpsvu
k82l91C0LBvtJlFq++n2LruhUi+DQO8l2bvErqCwU5HH50ub19wSfsk+IThS
Dv2u309BHF2DKlOyRcT87MWvWwSEUDv6GDj5s4hw9nIKzXkohJ7+l/JpIv89
YXvYMS9bVxgd9D94cnxXMfHgztsEeRsRlLThfdIP11JCNkbPYiZDDAmmf2WZ
bSsnKBXvaks4pdH96ky/CdkqgvnRwCl2DXm0kPJGve9WFaH/nMn64Gl5tMe1
ZqhppYow+zEdJPhaHk1SlqzeN1cTWS5PX3PoKaCtBgf1b16vJXjza1n8dyii
hrx1FpWZb0Th30DfVwxlJEhssOPFGgjdgZUHg27KaJtygv515wbCpWcqxf+B
Mrq98GQ+uLGBEH56H56JqqBNca0ujs8aCedrlh3miyroYjV9n9bJZiJQ8562
Urwaysl/q/wssZlI0FU+lVyuhppSDClKtc1Ec8C8y+E5NaToeqxYXK+FeNfk
HZx8SB1VU65gTEKtxPXlJxN7mTXQwjgfd7BJK1E6ZGneoqGBZJru/pi/2Eps
J+g+GVYayDcrL+vHZCvBFBAl++M/DSRq0CX47ct3gvPnRyENoCNQPDVj/Oc7
McN4k3PVmY7cuWdrynXaCLOcwS0iN+iouIP9amFWG7FDwm//t1o6cjyrvXQv
uJ24f31+KsGUgW7ZfmwWy28njmY+/3jBg4He7DZ+GfejnQgVddwcf52BOIXs
3K9adhCUyspBw1IGepF3s8sL6yTuLahMPFLE0Ljg+K19Dp2EjfWHegd9DKmc
3bdDNaGTYL0avsPhEIaytnPfH1rpJHjqHn5QPYeh7kxP8zJ6F2EQyNQ4cxND
EpRaSubJLoKHPTl8OQ1D8VW3Th3/3EW46jj+qf2IoXr6lNjW5S7C2erFfHId
hrhjD1SJaHQT76Pd+7O7MWQ8nxs8b9tN6LbVuEyNY+jKET56Y2w30ZRXrH5u
GUOoyKfnxaduQmF3ayfBhqM/0t9u3/rdTSSEOirvFcDR2aGY2b02PcT5j+lu
/Co4erXnV7ZSTA/RrXGurVETRzNPzCwp5T0ExU6xqUEPR3TefLaBhR7iZclt
Gq8hjtx8Bd6WqPQSrg52MddMcPSw2c8t/XgvkWK4OrPdDEcDW5okgqN7CWGP
m+KaR3BETdWuOYp6ifmZ+aGTJ3B0/E/8hc3zvUTP0JBW7UkcJdnPM4SU+4hk
0S+jZ5xw1PzJou/XsT5i7nP1hPUpHPGrFMTWR/URTBqjWIgbjkwjhQ2fl/QR
aeMN2e3uOLoxdWb+5mwfIe/GSfh74Mgxx6NJR7CfSFyt/7eXjJk6JZ9la/QT
vRT6qDXZPpO7JkLAqJ/wGJ9YeuyKox0GITaX7PoJ1sVMQtsFR90+GptnzvUT
05wZtcsOOArO6uK1i+snDu1jer1miyPxpqjR2qf9RFvGQ+5t1jgqpGwv3VbR
T7wXpC8UWuDIcvNk8tOefoKJtnr79AEczZ1K95VY6ieE23UoLntwFJdianKD
f4Aonym5kLwDR5rV63JLagNEVC7QObbgqH7t+arLrgHi6HvpvQV0HHkxbJtb
bAaIZy0BHJnyOOI6yft819kBQueU/PNKMRzlxH688ipmgBhbKwnCeHC0p9zb
Vu7JAFGYlfKm+R+GIpTq+f51DRDxXN/edQ5jSP5o2A/vxQFiadpCxeA7mS83
yBzlGyTKOR2P9H3B0PrEbb/3OweJT8TK+eFHGEqVIfapnRgknOWo240TMLT1
0Ix8yplBwqv0r/XUZQwFvjrUEvh4kLgzevDcn+MYEh7+93wYDRJ7S0Ld3fdg
6JXIy6sWnYMExj6QLq6Foekgfl0t3iHiRq1bnyErhlyJxruT/kMEXdbrwvf7
DMSU/ft9V9QQ4elY7T1HPo8prNLd1Q+HiFr21x623gz0teoU9cn3ISKL6sqp
sIWBVC3Xs130h4mAr6GGF0vpCBXKVVhaDBPfKzcPKmXR0TGJvSO7vIaJs/H+
q7RLdHSjN05FPmOYyCibThbbQUc/3VSe9zKPEAX1v0OlX2mgSzWmdXWSI4T+
7vTiC9EaSBzzny7WGSHck5IGdN00yOevWDPNZYSYPvfsZLmUBnoSav7maNUI
sZH9eOTOEHXkER9a0hA7Slz3ZO0qlVZDLIvZfaVPRgnLX/M+xLQqSj36lSmv
fJToppzKVCtVRdXSQruiF0aJZuXunYYnVZHG45xKk2M/CGUaYfgwRQVNfmhu
KJf9SRx/7dmnM6uEfEbUhgpejBHcYlnsPobyqN+ug7OsaozoOxdRuP+vHLJo
v4HVDY8RbRHx158WyaGtNT/Oj0iOE4czd9HmMTlEyX/EL3p9nLiXuGlmRIiG
Ui7I7Th3coK4Nn75uEi8FCoTkrirxz9FtHx6wHm8RwBxyV1R6dv6i+g5d/zg
tokR4uv2ODzM6BfBPTT01rtynLh2LENXxvwXIVdl8Xwte4ZgiX2394TnL6Li
EAR0PFsgVv9Ourbd+0Xkd/xnpnz8LzHRbZXzjWWWUJqSS+b9ygm1KSpqqHaW
4J/e/aCgRAQiCzZpneyYJS5PXjO5biYKxg079f6OzBJOH6NHGgZEoYLDxmT7
v1kiP3yvwAcWcSg+G+v+TmuOYHfxPB9pIAm5litPXibNEbw/L3+TSqDCbf4a
9fv28+T3DZWN56gCFOnKvDnoM09c0dm1Y9ddBRi2O02sh8wTbpkFUlOdCrAt
V8jyaPI80dss4RBnowg/TWxCeevniReB/0zGjinBroipb+e3LRA6pZ2KBzep
gM9T4riKyQLR9vZ8Y6eXCqQ2xg23HFkg2JwWbpQ8VIFfsltWcP8FYty4o+GK
oCpkFIfJj+YsEPphbr0DI6qwvLgx0Fx0kXCzNZZK9lAHBRnHf/8UFomTWUfN
BpPV4eDugpu5WovEQtjdQu8KdXgUfyyD88AiIaxJEQMpDTDH71eWRCwSr7sk
bfJLNSDsyPxhr7hF4uHOBrXuUQ14EmrULZG5SCTW5rwz4KUDU+3YrzPvF4l7
3Uq1WUfpkOumLakxu0jsOjE4UTVIh/aYKw/b/y4SfqnlxdEUBrC+/Y5d4/lN
1CU7mFxSYMBxtpBdAyq/iZZ/QizT9gy4Rq+ru735N2EWIhbgGsaAfAvZY9t3
/SY0zb+o8aQxgDP7k1ey3W8ixqlKp6WRATpVIku7vX4Tugf+rS1OMMDul+vl
ufO/iSDBvHmCDYM3O3iSDiT+Jswd1++ZbMbAscuylFL7mxAvvewlF4UBV9qA
t1/Hb2IR5fdLZGDw6riPdN/ob0JHpiDY4CUGlM7r598zLxG+F+MZrE0YPL8r
rKq6cYloYco88d8ABpbW978nSi8RVTojHX6/MHjY/l7HT3eJiJyJ0orgxsE0
Ze9g7+4l4uZc6cGvYjgsHG2JNTVfInLfduzarIBDupgD8f7kEtHM61lWxcDB
qG1qSsV7ibiSPRp6VReH6aTg9MTgJcKEOXuzG+CQdIRjP+XGEsHj0fbUzxiH
HaIJK76JS0RC2ONH9w/hMNpKy+nNXiImvkguLFnhcDsx94jpyyXiI4+Cx5kT
OGyx0md7/3GJSIlOHxC1x6FXuPK1Ss0SQWM9pN/nhMP1FgvHxPYl4s/1aeu6
UzhoJvTzU0aXiNe7pekDbji0W3iX+s4vEcDhmi3pgcMloVXvXqZlIiR7f8F5
MlZtviZtyrdMHFTffPKvOw4N8UI1RVLLRBpb6H85ZP8g86zzKmrLBEubx50g
cnyaIEM1ccsycWD7ps0+5PxVjUXfWXYvE5+c17NunsTBP27PVd/DywQjrHm2
+jgOkoebdXrtlomC5TfG2uT+yvntB/d7LRMx96NqSw/i4NEwGVt0fpmITFB+
GrAXB8HY84TK9WUikNVQ+CCBw/tD7NMJCcuEe+elXYe24OC48U46S/YyIUr3
OnuOjgP3N9n9vnnLBOtNv9kvcjgU3H6+0lO8TLRTB/4aiOJgc1AvZ3/1MvGh
YGK6ewMOz+vM2VRGlgnap/GWO9NkPkT3vU6YWyZw55gbz/swWDf1cmRhWiEK
cfXU6W8YHKi9WtojuUI0yTXH/8rF4HeUoM9+1RWiO0DrVH4aBhn7M6WLNq8Q
gd2yvvduYDBd/e58gtkKcVBwkVg5iUFSpJEqi90KseTkQvPYh8GOfU3fT3uS
46n6eXFuwiCmakJn/7UVYuGs34dvrBhofqVOMxevEGFxnFlp6Qxov/4s/XTV
CvHeUJoWeYkBl/Zu3d/zfYXQrt56/ZkTAxq+HM55N7tCEFYj2pEqDPD7fMXx
tMoq0Zg6d6j+ER2ow3vYf+usEiyoa2PZVTrUsGx4egFWiauCSsYcLnRQgujZ
m9arxI+6dwZxcnToeJ946WHUKmFMIwbz4zVg58v/MjpmVonPvZzGP63UYbre
zdB+fZWwf/CfSJCGOqRNqY+Ocq4RLynfktyZ1GFRPY+xILdGmNKIqsAcNXjy
6G0xn+UaIdn83cJsVhUE0r527nq3RjAfbGNhc1WBkqLIsOqKNSK8r09AW0cF
PNtN5Q83rhFRb4xqmv4qw2eRRne78TWidjlT50yCMpyP7VgOkl4nFAntg8eL
lGDg6rjoi0vrRGeP3n8d4wqQ78tjIW7yh6jQt7rZPykLtalC53OP/CGEfsbp
SdvIwmiFZKah8x9igtLVE1RNBUkJtQmvi38ILU7+rY8eysCVMqOIsjd/iObZ
1qXth6TgiODF1x7yfwlh+yxM4LIorL6eFfq49pc4p926R26CE+6HeI5rHmUC
ftb+oaEyJqSJNixft2WCLcrirWVLzAix5rD1OTGBRWShiyaDgvqjh2nRvkyw
r+j16ftJbIiaZXt07CYTnOEZkGJx4kKpFYcq7hczwe//rhRmTQmgeN5NGYLy
zMDlebL+FLcUkjdveuauygz3h+9u3JMihfKTfIsQxgzdno67ghWlUYNsbovP
NmZ4YHlprllfBvFpK3PXWDIDayNxetpOFkUeEQ+KuM4MBhyBp2eQHArPXD+8
MMkMfntajI7eVkJmmu/8NOaZgWVsLq/3sxKilgXEOa4wQ4+BvsvwuhJ6Pzje
0MDGAqszeKKLuzKaU+o4lEtlASGRm3NS21WQ4/M3B06ZsYCkzM+9+ypVkaaB
n/e9IywQpmCeofBbFf2to0e32LDAZXHNnW6Kaih15kGtoTsL9HMRcvhF0pPa
8ftlw1mA9nWVOYmhjnYW+Zi0v2aBEifOz2NeGohvn7r7xvcsYG0SGfw3TgN1
d47c2INYIGBgetanUAMFrdt8LahlgcidPz+f/KOBXhL798aNsADL90hdjwg6
Cmtgd/06wQImC6dF9zygI1OH8mv/ZlngnYj+iXPlZD0YrvfF+y8LfLurpdP2
l45oX1SM9olRINa66nPQaQaaPjLkfFmGAo1uhg6TNxmo+EfGlXcKFDBcSmZ9
+YCBjm0QrVDWpICvFxuzUisDKac2DtluoUDTwAWd1kkGWlCPpiRup8BYfRKt
mYKhWFPWXRQTCrhNrHEV4hiy6yl11D9EgZvi31lSd2OI7hMS7mdFgW31Z59W
HcPQ15i5sj4HCsRIGNC5LmIoifZiQNSNAkm+4fKScRhyzndnPuhDgQu0ZqYz
2Rhiau6H4mAKaJbYd1M+kV4cK7kffJkCrCG37oQ0Y2gD0z0WvRsU8N+mLyU1
hKHboiFOS7cpcISjg21wFkOCDOuKN4kUuMxeOfGN9ETyLl2lM+kUuHXU0nOY
9Ib0cZFr2g8oMFr8WVVWAkdK1xv35r0kP58w4GHHcfT0Xl6O91sKxOk9S8nf
iiOsIHoDvYQCVzrr8PCdOHpd7ekxXkGuT7PlzjnSk1sHTGpyaihg1Td1K470
ZPGSCt21iQLKRw+MfSM9uZOPPVqpgwLXMbVQbRscfVEcnhrqo4Ds0Y/yRfY4
2ret/GD2KAU2KZu+d3ImPXU4K89+igIHdWTVtUnvWbiF8csuUOA8zw07RdKD
7WE2fj2rFLBB/Sb6pBdtEvWb0phZYdTg1nAAGfc/E9c5zskKb2/+pjeS7V3K
f98R38gKeFWCijnp0fH2loXvIqygqTDS+5v0o8/MK6tEaVaIOOvjVOpI+o8t
rtBCgRVmRkprntnh6Jz0aTFBdVbg0ffdVEz6cV37QFCDJisUicugX6QfL5lo
dNzWZQVHQY9kE9KPbPYb9A/sYIW1K/9+fjHCUeTZH6ncRqzw2fLmmJsBjvii
P69V7WeFleA3zfgmHN158MDmhjkr0D20f0qpk159f/njHmuyvXGuN0MWR+kN
J6ls9qxgztzw0lkIR3I/DC5+OsUK9aoEazk7jv77I9V/2ZsVND4kI6MVDKkL
rwKcYYWvuV67f41jKE+9/f7fYFbYcmz3QlkXht4dTXAKucEK+30+X+9+j6Ht
Pv4VejGswNElb678BENlV8yUlhNZ4VPesMjdJAxV5/P8OPOAFXrr+pPXfEh7
cl/18ClhhYt7eLQrRDBkL+9UQ//MCsMfw/e5/GGgka076RM15PxHhvg3DZPP
n8ufKdcOcr8BLadt8xiIGQX6OSywQpAtr/bCNga69t2iSXaNFQzPT5uKyTAQ
15SWTi8zGxTPVun7/KEjYcnpheMb2QCcVHg/fKAj5TOngizV2WDoAqvOOEZH
DP0+i0xNNjBKkGjZy0NHm5iO4eNb2CDgHEVn9acGMrxlMnpxFxvIiWXfss/S
QHYP6ZbPbNhAPC1lpymHBkpqmcNZYtggS13W3K9QDd1L9eQ+kMgGXEc6U27c
VEMP7YdHk9PYIOT38izFRg29mmy9x8hhg/IT1Vs0/qmietYibusyNri7vnz0
xA5VxLb54o+8ebL9iwg54/vKiGdtqXx1hQ2SzrIWqXsqI8Ey3wwjJnb4899T
7yublBHtgKNVFw87PNB0cMsm39/bXYw+sSuzQ/XurMncAUV0JpE70/YYO7CW
UB/psiig4cXkI9wf2cFwISY4u1cGZe/UCej5xA7SWmUaqvtk0Mno+pi8anYw
d+p931UgjToV2aos2tnBpF90c891KdRo4b8tfZ4d6C/zlJCiBCrJN6Ux1Dng
6cHChzUGwijZm3n8YDIHSGtbflcWZ0X7RjxC4/04QfXPq/SdX9lgT6jC891B
nKAYWNrhxMsBhiLdnb/DOMElPvvV6GFO0Dc6sPXELU6YTD3BmGjnAvVH+LzC
Y07YnoBxrvVsBG6XBbc33ZzwpmyboUWvMNQOh1q2790A3ObFHdHGVPh6YUtE
5MEN4BtqeupHOxUqhGfyt1ttgAvNfE883WSheLf9xvuOG8BUtc/D35AGzx8a
VruHboDZM3y2ydZyEO3MAWuvNoAb5wmXaV8FODgcq0GlcoFsknLdWV0VqNUY
brFR5ILOhAv9Yp4qsD9ANyxNnQtuRF+g0jNUwJilt0FclwtoCeKHn7CogiFN
46yQGRcU3wyuaa1QBeQaJmt+hAtywvqPzsyrApHX+DXWhguG+M61+MurwfYd
QVJ87lwwkN9j+DpUDTbbfEac4VxgEO1msE5Xh4IH4h57b3BBxJ6ckL1H1UF7
wlPo2m0uyC+WPbxwSR2wYMFTlDQuaFed7/RpUgfVlJPcf19zwVmmqqlabw2Q
blmxmh/hAiWl259cyPowVerAP61JLnCUzDa3JetHCaesHN85Luj9uzs9p4IO
onN71qb+csHyozB/XWYG8PMnZP0U44aCo/pJ8v4MuH30h4kKlRvc49hMHt5i
AG+m/ryLIjcInb2y98x/DODCBoyGNLlh46f+kvU2BlBMsYkeE254gBs+ytTG
IPzO5QRpM26QUyz8L2IvBkxdLQYnjnDDcU7e2PwTZH3uHhLb7sgNUXaGemOX
MQjOr9cTc+cGmU/7hebuYLCyLDdkdZobvjne2bDrEVmvX/+6uTmEnP/Doxcf
PmNw5ptUn0A4N+TUq6UOtmAwL3r6htkNbnjh7iRlNoSBv125Vsxtbjh99XYX
ZRaDX49EuuoSuEFSe/eNP38w8Jlyu8KTxg121y40b+fCYWpTMWP/fW7IOhMb
UCaCw/gnx0tfc7nhSfC9+3fVcZCNa/e4XcAN6jkr3C824WBpd9DK8gM3bN03
9mrEAIebGhWEZDk3KKnrWsEeHEqW9dT7v3LDhUdVbz8ewGH+c57wf9+4QcLs
4SNbS9Jrd5T+eX7nhjmPsRlZ0le29mljWj3cUIx3ebOS/opnCLQsDXEDz2z3
Ohfps8rVayUfx7nBcOOZSzqk39Yr13MiZrmBUm48GEr6TivR/47JMjdsL1QW
HCf9d8rxZ+jGf9zw/dIftiDSh2m4nVsrGw90j/QXqZBxw3qzeRoPD8ACp+YK
2Z+92sTAQYgHlH43+k6S429LLlVRkeSBys3FkczOOPg6bxacovHAtyTP+K2k
X//Terb+SoUHTrI+zo4jfdv1l/YjCOOBjNdHu3mO4MBfm9S4YzMP/NS/ceop
6WOjuzzFrNt54Haok48H6efgU+H/VRvygKOXjsoB0td5OsuxsSY80Jx6stqc
9Pcwk0/IETNyvhzP5BDS5xL1Qy7SR3kg7PJic6U8DgfTrM0GbXkgz+d1jS7p
+wi3b/o5zjxgwuzfUEPe57vNRko+njyQWi+gf4W87ymWDxs3+fNACsvVUw4z
GMg3aK6uBPHAicraIqd+DG55SH+7eo0Hjg+KR3SUYlCmG1+0P5oHBOrN+g68
IPOPlfOhQAIPLIuXYGOkF+0z54Pu3eeBw7yv3iSdwSDRy93JKYcHdE+4Up6S
XqzW6zuglscD++8/9h01wWBTS7X8m2IeSFi+I9YjhYH7feAN+cQDtWXTSSkU
0p8+hUtQzQOS86plF8cZwLkhu7a2jQeyMKPB5jcMsm4/f3Z4jgeoTRVaOYYM
EOSesX+6wgMFqdeKWhUYYNzuvN+XiRfsRxSkNrMy4JW/GW2dlxd6Le/+ulVO
h2uPVaqF1Hjh678DZe830wET+C6z6yQv2H0Zlfv1Wx1Go0fDE114Qd5U/1dy
vTrc41r68cOTF67GS15PfaQOPKzir24F8QJtfZm14LA6jP+23vM9jheezl/s
tMxWg0fdPT7uFbxwa/nuMUJZFWysp5s/VPNCbkLZHcEFFRD+/ncrXyMvTB+t
ZZiXqUD4N1nK6x5e2M2y3UXquArYlzskr//mBfMivoXlK8ognTNSGqPGB8+O
6+9nLVOEFsXfioM4Hyz/7IjTvaYIUffZIzdt4YO42VLryX2KsJqqYtlhyAf9
pQrK/U0K0B7t/lPehg9eWVm4SPTIw52AKf7C23zg3XU5XK6bBlzEokP3PB9Y
FyT5ishKQNBOVc7CVT7Q3tn6tD5CHEZ3nXgRw7wRrA4uhn3/IQblxmWrhhs3
QuK2E+lDuaIQbB5954n6RtgSI7bfV1sYJlyUPp912AiVu4PCo8l11N6yUhX4
thGOtwpTF9vnCP2YG/XjrRuBT+3L1qtbfhE5cR/OVHRvhFvUQGZQmSCuJMmV
nRvfCLyfq1si7vYT1Ibf9BkWfmD6T4I5TqK89HtH+WcrKj9ohAyqGJ5YKt07
dXxJ3oofoo0inhXq8aMM4Yjmi8f4AT15q1nfwY8Wtj3L6z7BDy69vzV8zwug
rMg11yRHfjj1c1XO8K0gWlVJb9/gyw8PI85IPqKLoOeOPUW/Ivnhk0yBzvNV
CcQSyZZ04DY/bDRcI78DJNGxfIb/0zh+cA5JWPdSkUJsTGHqzin8cL3QUn3r
YWlkd4+a1vaIH9bqHbd6pVERf/vJCyWIHwLjbqh5RMihU/+uH5Oq4AeT3XUT
fF/lULHyy01BlfxgT9n+ny6PPHIPZJrSqueHO46H7vLekUflgvdtH3Xxw9a1
LRYpqQrozIHBHbd+80Nv1O/utBglVH2GS2pshR+yFyTlntQoIVq69pLRH36o
iE+zpXIoo7rx8Lx/FAGYJX4Z619QRso3FGgBAgKgZ3ApifukCmovd2Y+ThcA
swb7ulI2NfRrZ6dkKC4AS93vd+3cpIY4yg5tytIWAPXMgndqjmpoS6m+6+hW
AaiJ8tirUayGEj7w1/kbCcA5JgXnZjd19Fz/2miisQCUuIbLn45XR5+K1v69
20/GQy/j3D+oo7m3o9r/DgtA2m6jB2e5NdChguKUKDsBqF9OPNz2QAOd0tF+
9cJBAE4ziekf/KqBwl49rml0FoAkdeNg6UkN9Pxl/F8xTwGwjdqf9UGLjrhy
3ZwfnhOArsD191MFdCRP7w2tDBaAsVijUM4WOtJ7ZpE8HioAxzYuGZyZoyO3
JzuqNa8IQL48d/c2BgN9eSSs+TFWAKSKr58MSmWgXsVIk/47AvDmXX4tRwED
LT7450hJFoCtq2d+DtYykGL2eKLJPQGYL7rUcn6dgbbL2ed5ZQnA3pXBiE1C
GLLIav0a80AArnaIZ21Vw1B4BlprfSIA+vc+8EhZ/P/3py0iK88FQNp72G75
FIby059h0i8FYHuJnZxMMIb6U5McHAsFYPPgN/VtGRhaluAJuVokAB2GV5N0
8jC08e7lhJxiATgYwFfsV4qhHcleldPlAnD+W8aLjz0YOiI62C/wRQB2HXv/
qXoCQ96JR1c3VQlAdOV3eWnSP1eE64SO1QqANqtUSD4b6ac7hoyQb+T9nFK4
FCmAowLBd3symgRg003K+H/SOKqJY9iXtZLnsbY3kF0FR6sx4nc4ugWgwDZp
OVoPR4Ibbz9X7xOA3RKKl96Q/lW7TflyYFAAfrnSjGVJ/wLv+T7fETJ/rkUq
1BzC0bFb08t3fpL39d/g2DsrHJ3mdhZ8OyEAqmPq534ex9G1yA6NzmkB4ND5
+cz6JI4yNhwy+jMrAId/yXvzOOHozY0KO9qiAJwtdH3IdApHOftqxK8vk/cZ
/5ZuS/o1laepaWpNALzTbBM6SN9G17ffsvxH5otuaUMg6d9LsX17PrAIgk7o
5R4tMg4wH2WSZxeEEvObxbxk+1PCU+9vbBCEEyfXAjeQvrb+Pn9mhkcQehq3
iSuR/jZNWcWO8AtC98rUW3vS58Rx5rFiIUFwLZg/XXwCR9rSnA8UxARhx3Mv
h62k7xV7+WwjJQXB0fvN6xZy/2JZImKzMoKwxfRUQpwxjrgcpRuPygmCJs1c
9zSQflZQiCpRFITpxivfvXVxNDOiZqSkKgg8H3e+imbgaPCx5r8oDUG4M8Is
8E0eR63uukVzmCCwMPsT2mI4+qqxI8Bamxzfwjf2LReOcvP2/1DWE4QvHsGs
6jMYyvIzvx+9XRA+tStOivVjKF7H+sQCIQh5FokX1RowFPT21LeyPYIQZvPk
bFEuhjzPe99U3Ud+3szTsDUNQ3bbzuyKOSAIT83yUM91DO0qvfzWxlIQZnsN
k1LtMMRXmZ655CAIDzc3PfvFjCHmmw+s7VwEweJ+GiP3JwMt7Hsq9NlNEBTN
yiChnoE66t9ejz8tCO/Qnw0jyQz08HvTaUaoIBy+JLH2H42BklM61BIuCUJT
V9PLOiYGijzeP7QaIQi6rvE+Sv10dLp36ujXSEGwsuJ/7plOR/qjnOCUIghv
XHOFfbhJ/+ZsXK1KE4RQq8eVuiMaiOYhWqCZSe6v5qiHfokGYptWUP37SBCa
d5v1THtroIbFHfx3XwuCvq+Y4aYKdXSKLbC/vl4QfvNNLsABNSQpW9W21kiu
53aK/iWqGqrfKvNNtVUQ5tx6DBRmVNEWr88fw7sEgV06TOrubVXE3iyStuWn
IBjRC4+5fFFBj7IKrTKYhaArxvhfgqQyGt62XO29SQi89KbP59nJoxQr0/JU
XSHQKwLhUao8Mj2dVVSpLwQ/lwwWn/XKoYJs4xy5nUKgqiRcO2Ejh65suHu1
9YAQSKsdUnWzpCHFNj0wcBWCE4/HYkMdpJGTf8gbnlQhkP1xPNPDSght0e59
o3ZPCKRuPMYpnwQR1xwU7skSgidJ/93R0BREL/3Y3176TwjiHnDF6W0QQOu+
ce8WXpHrdYhjP+LNi5JOP/7QXSMEftlIop/Ciqq8msue/xGCqI6SLwF5xaXp
9C3lVUzCkMk8+EjT/wHhO5lSPkoRhlKPU0pv+L8Sol52n2hcwsC3ftzKf1sf
4eg5VpEgKgy8sx0xn11miXX3f5UXcGEw2N5sYLiDBXBXjXpTB2F4k+ZbGxcs
CL3usqdznYUhmJZRnS4hBLe8hPj53ITh/jVlJ7l3QjDmt3b4m48wBN07u3J1
XhgeXKhpPXxBGMQC777a5SQGYvGePUeShSFqj+fWNnlp+JJwMuxtqjD4vz6q
HfxWGs4kW8iKZwjDgkiFlMV+GWhM3+bQ8VAY2vCQy0m+VIh6zD1y4pUwNGbr
3Tt/jAb/ip9N2tcJw9WDT75Uh8vDi9LM6LIGYdBpgPDez/JgU34Hk28RBmMs
UMmHUwGKKkN8hzqF4Wjt75aVKAUIaNq/4PJTGCREJW/G3lKEHz8m1jwoIiC/
oe7WZn9lSBrvS69hF4HzU/P3Nj1Xht1TzQZ0LhF44TCnlDCiDPfnPlyc4hcB
WqmAmc8RFTjxJ4riSxWBNfnQv06aqvBNkM4dqCcC2cmXvbgr1GCHt/dY2nYR
mGv2/6f/Sw1eVL6oLCdEgL3ySVaNlDrcvqB1hX+PCOx7PT7C7acOpqNb/jwz
F4F47ZRtk0IaUAxBXU1WIuCHZEY5tmkAPa2oaOWYCPxya399wUEDuM22n917
UgSOdh/h83muAdVFO2cGPUXAwiJo6Yg+HfSFI+o2nBaBlYKWNnkbOjz1qXim
6S8C5SytMxBKh5sKe93CgkRgxwHNTN+PdDCONh2QuCoC7xadGm9sZsC7H9Gl
cEMELt6eVWk8zAAVw2/3XKNEIHbySYuLNwPYlw4ffxMnAjeuDMX6ZTPgs/3R
ZrMMEQh5yq7GzEr640NK/rn7IiDjcOZxqiQGD0U6YzIeisCVH89zQzQxuFJt
Yzr5lFyP6CMDweMYLChmqAu9EIF2PPrrF28MnC72cerni8BbweQedAkDw02O
n6+/FYEPv507Ih5i8Or2gwcv3ovAsC/byP43pK/Ghi+3fhSB/JGrFUdJrzNn
uO5QqBCBXb+tg/VIn/su50jvqxSBmL9xd/lIn/ebj6/6VovAs+3nqMp/MUAc
3m9LGkQgaHxGWkoUB03HF4kjzSJQ1f6GskzDIat4JoCnjRw/NE5dVIP0ppiW
uU6nCDDYIywCSZ9f9PPXPN5Dnv+KtJEI6fPpmtd8l/tFYGvK1erF3TjYKS9O
Ph4SgRq5oNeipjjUX9pSUz8qAmmrRi3nzHHY0XXuyeKYCIS9a2OTOIbDi81F
16WnREBT8IXSqg0OMrGrLrt+ke1fDYpIOeBwa3zbbo95EVD5pfoxhPTy+u5Q
+bjfIlDkWs8u7YqDV2YJ07sV8j5CPgyukd7uXvnX27suAtFvAoykSI+bWu78
yMYkCpZ8oqrBZPzhRXganSIKL0Vtb4iTMbuplWQyuyjwNQZbt5L9D4+p3GXm
EiXfb7XCL0mvp19bFfPiFYWG5YqqHCccfijUJX3nFwXrePx26UkctMsyRXYK
i4JTjE7YwnEcQu38E56JicIhs8PFe61w+Lq2W0hUShTWyxz8ig7iIHRXLP4S
VRRydRNrTfaS57VlnH9CThScxfwpKztweNJcHGOlJAqZx5oPV27GYcE3hg+p
isKV1tGVAvI+CD7HaHW6KJzz0dhdTt5X5LNNPIm4KNgynb44I4xDqzFH1D9t
UTjMqGUy4MTBM+L5jRY9UTDSzjPRn8SgkHaRgzAQBerH5s7xbjJ/Sg5fewKi
cPGeidHHWgySl39HhO0VhVMntcKqnmAwmFjFMrZPFHy36hmzJmPA0Em/bHGQ
PK9dbwcdIzD45L3zoqqVKDDKAiuirTHg4xb+G3+MjPc0bT2xCwPrnNELf06Q
/XNa2g7SMZgZjApuchSFgCeXdZ6tMUDq2PfAC76ikCJjz24ay4BTizkLowGi
ACGVJnYBDLIOCwk4fE4UsqYmY9OtGLC3juanHEbGI/I3s8QYEGDo6dUQJQp5
G9QofXF0KOkzmNCPEYXLpVekPXzosCGU3+NRvChUrC7GqO6jQ+bbN67Bd0VB
K6IgY9c/DaihMzkpPhaFe9KdB/jtNUC0umng9lNROFuZwmy5RQMcXB/Zr5Au
HQ5vbG3m1oCl+/vs6gtEQT237fmtAnVQEEu0DioXhfccvQNsf9QghFndrLZH
FM58HzDa4akKo7u525UHSNe6Rst2blEFsxuTJy8Pi0Krj+56HbMqKG7MO71l
QhT8jGUjPiWqQK30ppisZfL+JmflNhYqA3XrjvozQmJQyDdVdLlDEcp9zE1l
TMSgQyOHO+AtDeivdFrOmYpBa1Jlt5ofDZIWhW2aDokBx0h4uo86DTwvtHle
PyIGlj2HNSx0ZUE40iZqlvzeWnGazdWdk4ZTj05Vfw4TA+n5TXSbXeLA1R1s
7FMgRr5f+x+W9PHAlnNPeGPeikFP4JlTc6+4wUGwvSnvvRgsBxauhl3lgnfG
m21nkRjkFv3HU6rKCafezPidqRMDM6ytKNuNAmW3ndOCR8XIej+4Jjxnngja
eXD6mrg4OO3JXhwYnit92H3h9WMpcZgSlvp1zHSx9Nu5Z0FfqeLg0M508tDr
pVLlF5wULiVxaGXizbx0cb20WfKTWLSWONziD67L46AgbEF355194sBiFuW9
7RIPGvlPLiHzgjj8cfnRquEnhiavDKxQLonD5A/dIyo84mjO8f5Jtwhx2JB+
RjnoP3HEJCunoRUpDpEJRAZnhwSSTKaVlyeLg+Jp/SM+m6WR2XXZXyOvxEFU
RGS4xYmGjrr0We0rFAfLgnxFlmc0ZLcr88OLInFQE9knWjRLQ57/qNfPIXFo
ucmztThUDl07R6VuqBeHOf5p54EYeVTsKmNKHxMHvYg7N1nSFNEno5782Elx
GBw9v+NHhyKqVrgntjhD7kdZZ15XXAm19UkPffwtDsb97OdE7yihuaPSwYdY
JSCyLi8m5bIyUjWWyvGXlYCsDs4ru0EV4cpdvG3yEiDzd8VEIZCsH1nTArYp
S4CnwrOzlk9U0S4kSbAyJECa15LI2aiG7LZKfk/UlyDrksnt082kv1UlWIus
JCDujFBblZ4GsrFTfjx0TALknKQy/Ow1kGKCzj4+GwkIfLnE73tNAxX8OxDr
5CgBFQ2m5t4NGqjle7g032kJQLFNd8xs6CidJ7Z0q78EWKi7TiWE0pGz4T1H
p0AJOGiqvVEtg44Wct/mvAuRgJyUvJsGPXQkdHVyk9MNcv2SD+xYLBio8/1K
W3SUBAz+SunP82Gg7F/sIe9uS0BY5KWjj28ykLaNXBlvogT4JThF+31koNU4
zHlrigS80+bm2fWdgcort3E4pUmARC7rvxPTDGSuc+TAu/sSICWrO+cgjSFJ
d6dfgw8lIF2hsvWANoYGM3zv8OZIgMtf24WwvRjy54rqcHwhAepanZ0vTmNI
H1IuROdLwGoI/vR5OIZYzj6SfVcgAduu+H2aSiD9M1DqwvuBHB+9EN76FkPH
xeo4t5ZIAHd/fBBUYkj+QOczxzIJaHqjHxb5HUOv3i3Mvq2UgAl9bGVgDkPB
08yJg9US4FXNKJ3+hyFDxY1beeslwJbH9us2Hhw1xaiFObZIwLO4u0GJpNdS
P2+Ri26TgDYP98T7dBw5ru2qeNspAfTzs/2Tm3GkrnXYdbBHAgbOv5E7t+P/
/29rx8U7IAHzKkPysAdH79M9c3WHJeBzuEXB3gM4Cm8KMnP8IQHsy1FPoy1w
tI/z2vytcQlI8i3tFbDGkcCOO0lvpyQgBL5hLbY4ag/I0hv8JQH/VvaHtjjg
KOtJbjfPggS8UDibL+iCI7e+9xd1lyTAvXHH29ukfzVFvso7rkpAKM34ojHp
4+V9rZ9v/ZGAvKSRvwTpZ3Rp0O0tkyToO0tr/t/XNwpnuAcpklB344HAT7K9
2eT6Cx4OSbjaNfRfCulzcXkuc10uSfi2uLR0jfR7/1GxRQdeSTBhfi7wmvR9
TrRiyi1+SbjnFsomQ/ra95PWtrdCkmDumTpWQfp668qO3gFRSUhPGGh/Svqa
CTe9zCMpCQyRgbl6M9K/ztaKujKSwMz0/YTWPhzFpp6qdKCR43s8295kiKNz
Z8MDLiiQ61MNvdutjyM78wzZZGVJEIm6YsXQxpER9r4mX00SngTZP6xQxRGd
6/u5WrokTDD//ZhNxZHQ6KzCD1wSooWSeyuFcLRaxtvArCMJD/jz92zixFHV
eSNVXT1J+B0/xTo8jaGXVg4th7dLwiGda7MqAxhK0Qq95EVIwtzZG+YFTRg6
NVbQft9IEuzbH9Q9fo2hA58brhQbS0L2/n1ZGx9gaNP9Sc22/ZKAVfgeK4sj
89da8SaPuSTMPBkXZ/XG0Ngm2KxiRa5HImMt0RpDDfw2AzuPSYLv5VtBAUYY
yvx6R++cnSQ8e/ZPQUgKQ9u3UsYHPMj51Vvt5snnT0FYNmndWxLWim4J/XrI
QFy/9A3F/CShdOPOhO1RDNT+2D/V9Jwk5Fd+sq+0YqBAscF9byMkIVA6v+vN
IB3ZzP/53XhNEoxP8900rKCj3d8kHkzelIS+v316io/oSPD64TW5WEk4R38Z
PeZMRy9+o2e30iVhYZKmFdetgX62ZvI4vpGEk19Kirhy1dG3/A/vLryThPHH
Jm17rqijwug25+QPZH+rgaMjx9XRFaONH2vLJOHssze2B9jVkdybMG/dekm4
8LJhz4iVGjqeYFvP80MSbvq+Cqd2qCDp11xSnuPk+d4bVc3PVkF9jW9dq6Yk
IWdvlnOGpwpy3ijIfG1BEr686/3v9poy8on8ovOPWQp0bN8nzQopo/BL+N1Z
aSmIMKHuUlNVRE+8mJ2/m0uB6In3tT9aZJFX1IuXm45IgU9V8R41I1mEPT3x
J95aCkqf5v2IKaCiVz/eJB2ylwIldzjTHSuDih09qr56S4HJp+HmQUIKNRxr
xj7ckALBodqDuiGiaHn3o5XMEinwjrVTF9uwAV34kBlRUSYFttdjhNvaORCT
dirvWIUUJGT7vGHLYUccsjFy2jVSkC3QIl+7mxWJrgSZVLRJQUxGvOyd2b+l
Ormmd3/+kgJF1dXKd7t+lPqILGzVUpCGsqEPypoia8Rc1HS5lbI0KGcoiaeE
/iECWcZMg9WkIYGZYWc68o+4MNNj/wmXhsFJ4RzcmgWiqipvWG2XBt+HAT3V
NA7ICU1rP28lDdROK/ZhE34YGjEMKr8uDR4BHxz9PCXAMLM+Wz1KGviOKTW0
skpC1rHjdfG3peH1MPvCxXuSYFfjJ++UKA3HupzNEmqloPNlVi3lgTSoUXmV
9spRoSnkL82oRBrEx3LN08zkQGtz5P7cMmmQ0txx8HKSHMROi5wV+SwNyxw7
bce65OCgA6NmpEYa+CODF3Vd5KF6j03gtQ5yf0rsd+/6KUC5wPuqygVp2C71
OfDbaSWQqzFawJelIbpzcmLxuRJcutJITVmThgxHfa3LY0qwY+lngBuLDMys
l7mW2ivD+24x6gZ+GYhHOtrP96rAq8eB/vs0ZOCMmU/+0KIqCDgw33uFycCT
YObWRFU18JWMrpTUloHNe5bb7hxXAyz6ofTEVhlglvIe8y5Wg6f+zV+i9sjA
Bw2vI2fOqUO2gZZUnYMMiMmXOz+v0oDyg1wRa84y0HineH1+SgMGTw6Nq7nJ
gP5rBb1oAToohCe+v+YjA65bbqvnH6HDwy8r1hAiA+casvIet9Ohoq2pzCdM
BoRdNHhdlugw/POZ2r3LMpBZwJXkLcIARW67lZXrMtD80gBsDzHg0aHylNcJ
MrC8mHLrwXsGfLFPYxpMloG2IPXi/5oZMOp3xo0/TQZmbXjfzUwwQDlBeav3
fRlItP/53oz09J5H/zLTHsoA18TRLFfS06cK2zmqH8uATDHfxnIjDP5rj2xT
fiEDWQJvzxE+GHwZcyKs8mWg+P7QGYfLGIyubn8cUSADlUXNzJ/vYKAiM3O2
/70MWDoGsh4qxMAY+9rLVyID/7bdyD7zBQM34v4egzIZGPNTlutsxSDHwUI0
tVIG1lSI3U5zGHz1p4d9rZYBowOJW679w+BnBNvo7zoZYPhpP/rBjQNnYu8B
pUYZOBtRa3hdDAfV/96+sWiRgWnX5i/O8jgYv42VCW+TAacP/lMX6Ti4fXW/
+rKT3E/InXPtpPdudBhO9fbIQMntHnWf/3twXMqKd0AGAjYVNf7/9+/qtYXi
bcMycPGQ2TazAziM89Qrevwg8+FuzLZ0Cxy4qI9vpYyT+VCg8kzRGgd1/NLC
lykZGKHddh2zxWEfWNss/pIBQbG/5uOkrz0Oa1coLJDzGZy3VHEhPenITTdf
kgF146/kgePwNGD4zqVVGegLCDlg5U7Of+Xj2os/MsAyNq6+h/TzeGKSUw8T
FQbXt4z7kzHX49M13KxUSD1iHNlFttd4Z6yjz0GFscVvfJdIX5tWyaW5cVFB
VnrvJXvS116dqyzJvFTYKTYzcYH09a2JZo/P/FSAmQanVtLXz9efN80LUcFp
sfiv+wkcanmv6cuLUWF48752/SM4TFJPZptJUuFBTSu/sRkOPJpbuS7KUEFL
NLwuzgQH+k4B/1waFUYbN28VNyTnNx/v6FKgwknBtItdeuT8Tp92cqlQQVmW
2taliUPu1UABVwa5fqm5tARpcvzttuFXNalwOPrsn+sC5HgLu+cf6FChbcZp
DrGR5+Mo3NqvR4XF/CtvWElfj0usG/3bToUjZopU/l4M1BqHCmWACmklzIcc
v5H5RLxOOb6HCre3yPh055H58zt1w3kTKpxbuSzBlknm54vw4GRTKhTEeHOc
jSbzW9rcpsWcCjz/JVlqu2HwcOWX7MGTVGBO9DGWE8Fg+GV7rJcjFTp/8oSl
/GWAghtijnKhQuueb+9O/GBA9veYoUpPcr+h+ae/FjIg8zX2eGcQFaZTTTX2
H2BAr4eouH0Ief4WVQXaWgygyv+9ERZGBUvTISFPYQakx9Z5fLhChfC3VRsa
yec/1dsL2xxHhYcD599dtaZDp6JlpkUCOZ6BdCHHVjpIdG/j90+mQqDMeft+
ETqk7OOee3GPCobpwvMp3zQgUeXpG9WnVLjzvNFvxzYNiB34sV36ExUW7uxI
lF9Qg4aUb7n6X6jA/zFl+txXNdho9pZqXUWF445m8drpanC75BpT0jcqNBux
D3XtVINbaUoVG7upcFFa7q70NVW4buW0n7JIhZ87JkwPzytD9qFuG5dlKqgJ
xc79K1KGYhMrn8o1KjgG31biu6QMcwZ746JYZGHiwaH0Q1zKYKOs0SbELwsj
9KL0BDEl0F6ac1TUkIWlQg6VB6IK0JsSHmzkIAven8J1mV1lYCV+Leqxsyy4
Caklb2yWBuHoM/c2uMkC4y92znyHNJhcPoXqfGQhXlVT+ZqgFBS472M/ckEW
TD8E+EiQrozUF4w/lSwLbFSOuPuNQrC5+/6T63WysBrNUWbmQAF+zG05r0EW
KvSe8mkyWGDyIra3vVkWEiu7EjKXmeChwodh1U5Z8Ph45Mdd6T+EsGeLbPWo
LMwt7tns6DlPrF6g7GdnosGdM152n92cSju4t5QZS9DgUfTwiR8eFPRl092f
3ZI0ED/gyh2dwYoKbNc3+knTIMyocOp1IxuKzSu3uytLg79P/Ktdt3AiY4tD
62NKNNjBO0BLXeZB71LddKO0abB81lxomC6EUtTScuv208C17XX+Q0waLczv
eRRxgAYup7PbVD5Lo0Mlc+l6h2ig5JS+teu4DGK32HfrkTkNBA8eqCuLoKLA
CyseodY0uCSrVXbLhYbMvx1VZbjSwJT2HtNKkkcv7lJoQ240uC2BM/52yKMN
znlidz1osO1zOccuGQWEltk52HxoZF6sfaRnKyBcvnCk+wwNclvzWE0fKSKe
QOEHt8Jp0Gy1pqYco4zcCJRqeIUGoWJKoklVyujTBq/45as0OJkx5OdAUUHB
GZ8uO9+kwaEosyVKoAoaq/S33x5Lg6U7xz7uN1NFu+Opx+biaCC17HzT46oq
yrKpPpRzhwbuKo1Ee5EqOjYrRwgn0yCe3fJaKk0NfZFslJm8RwPLZC2z+BE1
JD9yQSQ7kwYpk4XyTCLqKDRPlffYfRoIbJm+m79LHW3afWn900MalCyvbunM
UEfZ3nhX2jMabAqdS6eaaqC/ul1Nh3NpEEw9N3A1UANZs1yv5sgj19vb066c
oYH4k3uLAl7R4JT9ITOBKQ10EUWn7C+iwfaX11+4X6aj8R6UsPKeBneV77f0
PKCjI2vzsY+LafC19n5G5Gc6om85fpOCaKBtrh4cyU7W78+Ugz98ocGH4w6s
3BcZaFeV9Vn3rzSQqJht10hjoBejt/zFqmmgpr2YHFbIQFfl5j0C6mhgzoIP
Fo6TXk8uPaHRQoPL9q4GJ00wdK9g7mhHK7n/Ba+WNTsMcTYpWV5vI+/jRR/L
5wAM9fHcMh3qpMEeCf6xzlQM7VMvNY7rpgGVVhyrnIuhwr1zu4leMp/tivLS
SzB0K/yYQdoADc4/Mglg78PQUmaUnskQDdYlDbasTGHI8WPJ5qVhGmz4bJwr
vI6h+s5ZrUejNEgq1jt7bAOO9JYVMYufNFDwer+pQgRHD0WOqTOP0+CJoFX8
UTkc8etEKedN0MBZ5uwOQdLbIWYl8rZTNLhyzGd6nvT2qPcslXuGBvuWztiu
k94+HKUoVfSLBm/9n5hq7MVRcc5RMdc5GugTIhGXDuJI9UukkMgCDfSsc+vW
LHF0Z+jjxk+L5HnlWPxLP46jv0yz3H5L5Hnptf9yOokjD6oip+wKDVoOrV4y
I33buu0oa90qDQb2uyc4kv4F60imkHUa/HH/LJJK+vjZ2Y/rqn9pMHEka/E3
6WfRhF/L3//RwCYtVP086evwfIXFK8xyMNrT9JJGxlP1R2a1KXLweo0jaors
f2zy5lQ/qxygpbNlfeT4FRs+jt1ml4NC5Om4RM6Pq/wa2c4pBz51CuGbSF+n
7lYYHN8gB2yxdfrJpK/ZHI/0pnDLwaPS689lSV/7XrzZuYdXDsaC7P/UHcJR
d3rx9wU+OVjYZGmdbYyjve9nmrL55cA22XQuHXD0qk3+m5mgHKQIyjKV6OKI
umhV81dIDlydohAbhqMFvPjTcTE52PuyyJtLHEcnD8yUckrIwZ68sPlKbhxV
e8gXF0rKwTP7PtvcvxjKenSjQJAqB5u+0y1mST9zf/rwEsnKwdqqzH9mpJ/P
9k8/95GTA7rCC++OMtLPUlaPqhXlQJRjQd09g/T2MIZOKMsBjAdMfLyFoeFc
zq5JFTloDZfMsg7G0AUo5t+oIQeJl74/drXA0NcNSRpZdDkw5W8a7dyBIeHm
03u0MDnIFvkwm6SGoecuChcstORgqnPYf2KdgZaxP0nD2uR+Pr1bujLCQLuX
v+cHbpIDGneqi3sdA3VF/q/iMg+redvDeAjJbh4IDXutNOz2cMoQDu23ZCpF
cZ3S4NgodMrcoBAVGUoyHEU6lwZEqByE+olKNyWpkBxDNhJNu6ikfdf5cz1r
rWe93/f7ftfzfA58/NOej/EG7+cbsHlTv9rp2TSLj8W/n7RTF4u4ZRGVwcFS
PsLfFn0YrSPizjplxg+Cj32VHQf8FEJuer1XkZkzH/o+XKjiupBb219svcaF
D6X9tgODdkKu3DlRpW0ZH7rJ77Y4a9hwupprx+/y4qOR17DyrFzA+T9znKq9
nI+Xg3qr/e4KuG/reoLs/PgwMlaEt60XcBaHfZ+FruKj0F+w52SRNRf7QpCr
3MDHFddjjj3zrbias6oVSZv48LqRNCR9jBU34Y9/mvlb+HDVVdb+Lbfk8geP
GDmH8jFhdnXAlGhL7h3ti42P4mOYWsG0pFwLzjGk3EdnPx9O0i1JDZ3mXP/z
lrkPDvAR49mYppVvzhXM5tmFHWL5DO13vL7FnLMw8lB7dZiPx/tMV7gpKMd7
0FhwnnHexgGhU3Mr4Z4btWkgg/l1Iq7N+YEZt7FUnwspZnlp1XlqLh3LpU+Q
mT/q4SPLbtwJv83txTMm2Yhl3/nY2u5qTJI+F9ct6Lbv7eVD22DWfcfL8mK1
sL2u5gOMK2sHdo159Kx445OLm6OGEohWRB9LzKmWYq+CE2oR6JKIKWb+36Xv
2mP9EqwI3rh4avzWpYmoEe6BVEDwPECpla+tDUPjMZtu2RCYeC9625CtDReX
C7FyMcGSqv9df1+ng7yMqpxZUwiGK0aJ8q31EeNt2P/VkaDDofxHd+FYmN/P
PuHuQ/DLjPvTy66ZoVrYm9Hkyzi2JijwGPuHwk/Mz1/vT9DvsC7yJ8td5bqW
x3tXEkTOqf0tNY+Pzdo2o4oDCRbcd9haf4mg2C83UrKVwExaM17zkDnWlg/u
v7uNoLLCZXRTqTl0bReddA0jqLg/U0usNEeAakdB4HaCqtOXlF4bJ4KXY9uW
Hk3Q4tRen7nQAst7C37XTiBwOm7boWy1hKps+IYziQSv/MLDthlbIbfyPzuE
SQTGdtbUx90KQ9K/pcw/SmBRKfPdnGuF83OmPY1OIVirPWbOtUBreF6Jf6t5
imB6rHN5/DFr/Bj7ov30aVb/eZ+r5Zw13L9E8G6lE9To6Z4KGyNAT/LtOZ2Z
TP+13oaYuwKcGRi9dFc265dAO2q7XID5Ab4yjQsE3+JH5dbwbHB6+s+d1syH
8MoinZPeNnB643BzZR7BXd7t8dtbbfBlweGy9nz23rMVHks1hTiR/7pux3UC
afJo632/CNGyN7oz5SZBhKpXsmKzEEmiEkFtEYFqxPLuJ+1CnJ/mM2oPR5CT
qbBo0BKheHb3R9sS1v/VP+dqSkRo87bIPFJKoJFj8skwSITha4pjHMsJov7K
vi/fJ8KEjV6yzocEtsmHHeXnRHDde8DU4xHB90UVY7a8EEF2hA6qVBP4H+f1
KrtE2H76TtPVxwQB404fKBzN+CSvLUX7KcEFSZ3B3zPEGPHaU7/mBQGv0Wry
9UQxjD+3du16SZDwZGRb2n/FmNwT+0TyimBo3qikK/lirBp9I/HwG+bfpJcn
XBk/bzdcHCx9R9DscUGr/r0YyfwW1/ZmAmV12sk4hRic/fhRiz4ScIbLnJdr
SvDcqeDj4CeCDby8izvGSdDu5laW+5nA8+2682UTJRjh/SHD/wtBg560bTLj
NZPVu2I02wiO9XXZPWQ8N2XDWFlRO0HuvfmTov/lve3XENJJoO42Ms/XRYLV
cS6mJgrmZ1N/mJ+HBJFJzT+ruglOJn9bsuc3CZJPRTXt+Mb01NSPq/RlfJdl
cFvUy+ZNtiPbnvHyvWu5Ka/6WB5jmhrLVzO9d+aFJ/wgGH/r66lIxssd5W+W
zfpJMCP2xjNPxr8jn0ZM+TpIEN28cLcb42OTf3T101QoXl+pOhLE1lNbcroW
DqUIexSgdpmdd+t2fjIwjEIm9Pysw3h5tfLVlUvDKVRzG5xSGZ9HqYcl+o6k
qKycR+fKJDhqoB3MG0Vxjgw/Z+DP9JpdcL2jTnG7KuK1GuP/EhsnwR88iq4/
xw+YLpHgxdSXahM0KXqHric+C5lex60fK7UobtKvuwudJVBz0yiL1KG4tHTy
YoeZEph6ZWXY6FHU3617+MGO6V0ljXmpTyHJCxQVWEngHvJ85UHGRYLm+NIs
YwnWRGzCr2Mp3q2r+6eI8XJUrLppqxF7P/P9owFVCXJSZza5GFMctM062vpJ
jJLM+sJ+E4ovNiG2aS/EaLwaknLRjGJlBRGHVoihVv7XMnVzigaXDq2/ssQw
q50+pXAiRfqs8y2dR8Wwf1Wrt96SIu7X2NHB0WIEKFSfVAgofDc89Hi7TAz/
i87VvkKK4zebHHycxFi2MrayXURxv6vEaoJIjLmPh5UZ2LJ9Mw3lVhUxLHKG
3l5pz+qZ+1p55AzjYZnTze5prB6/e4OesSIYGu25vm8GRcoYv9gV60QYsW/I
1cuzKGyP2t72Y/wsl6lk9s2m2Kir0jrklhBNRjh7aA5FVKK+gV2KEHU1u9JN
5zGO9IpblR8uxAMHZcocFwqfVP9Dl6YIkTFuMPHIYoqg5R+qDmfbYHXtj3Br
P4rwRbUhr4IE8N3/a+gdf4qdnwu74xwFWIrILYt+p3g46VBngqEAzrn9wdtW
sX7FnArhiqxhfqBPdm8dhTIL/KqR1mh2/L7QO5TlRTFUvnOHJRp7p7p8CWN6
NUsszi6wRO2V0Hm7Ilg+Q5KH2xtYosT4m2NmFMW2wtL0wouMp/u6p3buoUj2
NrF0ezwRsmtdZvsPU5SEBFhXKCn+2LNkwOUIy7OTgWraHXZvScEz3lFWv97S
nY3hFPE92xKTTlBsOq4SmPrvnE7v+/FnGkVw4/qjgQ189N1TNmTlUIyUPU4j
hqZIquUlPChn+XSXnQmBAVLPBa/dW0Hh7zLb+NNpfZzbWj17fiWFYWpF4oNe
PfxtmNRfWU2x5cGl57dyddG0XG/t03qK9y/i5ab62rBsNpr9rplCZ5jMPSh5
OH4p2G6SIadwSNV9KJupihlxL/vWfGQ6ix7rcfKhWGiZdrXlM0WnlnpH3VQV
bA4yM+nspFiQ6babl90jjZq5uy9PQfHUEj7HFV3SOI13dVt7KN5YhtQkSDuk
J6+cO9jbS/GpJEEuvSSXno1WDSzsp+hIWnGj1PGNNMdjjVPUAEVEiLdX+uV6
aQEpM3YYpEgr3CGakFsqLVJY9CmZr/FmkWbPTOQO/weIU+su
          "]]}, Annotation[#, "Charting`Private`Tag$26952#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wMykMim
          "]]}, Annotation[#, "Charting`Private`Tag$26952#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-16.386273391169123`, 20.685528088257307`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\\!\\(\\*SubscriptBox[\\(y\\), \\(d\\)]\\)'(t)\"", 
       RowBox[{
         SubscriptBox["y", "2"], "(", 
         TagBox["t", HoldForm], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.890129955034671*^9, 3.890129989072323*^9}, 
   3.890130105356413*^9, 3.8901302725767107`*^9, 3.890691269400359*^9, 
   3.891074848464119*^9, 3.8910819041058826`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"34796f2b-f80b-44e8-92af-d2b30ee86fbf"]
}, Open  ]],

Cell["Second Derivative", "Text",
 CellChangeTimes->{{3.891081968985292*^9, 
  3.891081975769249*^9}},ExpressionUUID->"38813cf9-51cc-4f70-b6ee-\
9e06eeac02da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"yd", "''"}], "[", "t", "]"}], "/.", "Vals"}], "//", "Chop"}],
      ",", 
     RowBox[{
      RowBox[{"yo", "[", "t", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*SubscriptBox[\(y\), \(d\)]\)''(t)\>\"", ",", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.890130115249662*^9, 3.8901301227046824`*^9}, {
  3.890130267468729*^9, 3.890130267620569*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"000f589a-ea6e-4b38-8f29-da11d5dcab93"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwU23c8ld8fAHAre+/t3mSErGTX8zHuvU+lQVllV1YlJAotREYZDXtUZEWl
hZRjZ4QiJL6VTTYh8/f8/vL6vM7znPM5n/O513n/cckuFyzOMNDR0eUy0dH9
/2/6NRdmjdPR+6q/7FqPfoaj2g6SmTXJA0s6ZzsBRLxV/zGURLqCnTGpfu9Y
iCPuhLcv2HtCMFWH6ktj+ThKR3dktpEiMcE5U/KPXBypzJy+u+UWi/HL1zfp
5OConztjc707AeP6YhGy+QhHO56yaa+uPcDkuW+fVMvA0bm9l84vyyRj55oS
zjcl4+hV56/sRZM07Ju2WkfbfRytnjXrm3PLxFLl8gqwWBxl0fdFLlMeYWPm
XULikTgy/Rwvt9T9GJuJl9F3DMHRWBKtatEjGzu9cAl4gnAUc3rDbmEtB7Ou
trJUuoijjjX3+7My+djhJw5ej51x5N8grT7zsgBLeqDav2WNI/F7nc1TJs+w
TZUetcZDOHJRAsY/bs+x753NwVk6OGJYC2xbDH6BmWmNbhQr46jzl6XUIuUl
lvI4yFtJBkeXn3GUzXeXYDOTag4eTDg6kDDCPJ/1CjtgKhy8a4mGJC9XHZ/z
eI01VW+2O47SEDIJmJ1Ze4OlMd+N5v1EQyw/BhSmZMowW62KpWchNNSDPlya
HCvD+IUC3KYu0FDB06SaPy/LsSbVLSzTjoYO+x52nDCpwEo0CuhttWjoIVv5
w1G3SqzFz9ZPs5+KXgcc8L0oirCKA2mlHPVUlDahI7YQjDBuPfA6UUxFXu38
bvOUKszSO8rnxFUq4k/7xDDXXY11HJP1/CtIRWvcb/O9DWuwfmT0OuofBQ3d
fHJ0NqsGm01fPZjST0Fv3a5lzHjUYg2CljzK2RR0YreW/vRaHca/LcxEXpmC
HjVl+vyRacTiDrheUiSbosWkN0o/Yxox94jAoNJVE0R1ax78+q8RO3Z18ElZ
hwmaZFy2LO9owjis2N4LhJkg3b2H9SMjWrCDVKZA6n/GqP35OoPCTBuWOS8X
VnzFCF1vUjmg4diBvbj9rZyv0BDlvXwnX/igA5vxO81kghmir0nGjHItHVjP
vmTzgq8GaIebTYWoXicWaZ4vrbCsj5oYw1TpBL5h8mIfm9V09JDw3h/8bfVd
2Dd5mUp4uAcVP4/8cU61F8vQWf3c36qMJvgnYg4492Lynuk2QgNKSMH/wD7F
+73YC7bJ/TmLO1GWIcejwX+9WIte/K1hEUWU0BjjeqLuB5Z7ckQ3ynoH8h+M
naPZ9WNmcTLxnDfFUCZHcygf5Rc2+uB9ovH4IrZvb5DdDYdf2Hpe7Y4PqetY
n5fynpmAX9jXr2GF1fIMIPo1eqSl4BfmvbPWTaabDeKTzPbf5v2N2XmykesT
BSFUrpV768dv7JTz7qR7E2Rww74kT/oOYi9ZGORMTqsD3eOl8h/RgxjNmWM/
Q5c6JDFJ9jVlD2JpPk1RdjQN+NToKp3fNYjd2jfV0q2oCYrH1x+f0R/C1jqj
0jNHdsOYu8Kz/+iHMbnehCa1gzpwo9ns82fxYSwxylPW/Y0OiKr6TlfsHsZ8
dtmf5ZfRBXyhQj31zDDGbHp4tGRWF/KvWryxbhzGVuJ2KvyM0QfPhKsf2+NG
sC/qz90+P90LDH8f/6zMH8FictNeM7LsgxTrT3TPq0ew1/mFAuGu+6BJUsDk
zuII9l5SR8JVFgPl3LyG/Taj2CPjgEGlAwCT7zvaq2XGsM8r7BtReUYQJv1v
7qXuGJY8fsrz1lcjkLwpLfDIfAxzVz3BKbRuBGZUD8vroWNYZmEg5+whYyhq
3/xuMDqGlevccwqcNAav4Z2Dr4vHsQ11hm2Cgqbwy+E7a1XjOCZhN/X2t54p
HOu5rfp5aBxTev2pmeRoCrrNo1eGxScwkYx6lplcU2B8mcMrHDGBSZZrs7/Q
pIC/kqX29scTGEt1/r/JYxQYe8Jkp/phAms84hBxz48CrQ9P5VIXJjB7ze4x
sdcUSAom7wtw/IMd+1OXvqBMBfal9lOhgX+wKHkVwzM4Fa5euBEZ++APtuuq
4Ae901RwcfnZmdv8Byve02vLmkIFFTz9bI/OJCb4ajxVYZMKGVVm8UMWk1jk
h5GWVCEa8Bmsv509P4n1hvrqnVehwdKukwxs2ZNYcb4CVc6GBlUCYsl6vFPY
l5MPXn7PpYHWnU8fKcpTmKfrIVmFcho8Zb48ZE6dwgboXPDPzTSI+del5hk8
hf33NbCSPEWDTd9wS//EKSxrKli+bZ0GPpN7gkJKprDG7n7PDg4crH7er08Z
m8KqPH+N/aeAwycb08mnjNNYbnmN3bAWDgZfF/heSU9j51LubjcywqH44BOd
Sr1prOaU1OCcGQ6kOgv75uPTmJUZg9myNQ4J+xhCuy9MYwsFETzmLjhsK32Z
Nxg1jV2XKBnaPIvDRAHv4hqaxi6Nv3tneRUHux1IjLVvGnPBzQ02w3BoS7+A
CS5PY6biPH3/onEwFpE5Q+KfwT7899odT8DhdVxrlMquGQz8ml6PJ+KgwH7t
hS4+gyWZpyf1p+GQErqry/TUDPYj3WhO9hEOnBt9a0evEePy97IqsnG47h9D
tk+ewc5qad/JzcVhfsaA5vF6Bnu/N+nxUD4Opz3+nLvUNoP1Bsy2XyzEoXsg
JeHmxAxmQAUuy2c4yKnK9dUzzGLct4+Z3ybi/ybWp814Z7GpGpTKRcRJuZ30
HVKzWJfG+MxQAQ7mp58J2irPYvZPViy5ifnZyWEKP3VnMaYDw72RT4l6G8ar
XaPMYraFQQ/uPcEh3CZDR8piFjOsCNraloWDqV8hVuFArBfyTvV3Kg4McaW0
k2dnMWf0yFCO2D8qrDuyGjCLFdgdon6Nx+Faw1fr5LBZrKLw3Lkxon6Ggz8d
deNnsfm8ox1ut3BY3Zx0606fxTRExh4fvYZDqfjqBf+CWexx9EfmJ/44+Guz
XBZ6N4sddlnb5ehF1Oc8+fax9llMOn//AyE7HF5EqsbN981ib4ULKLwWOHjl
GCTFj89iVWqcKZdoOPzps8xrY5jDAmij2jfVcShYcXnhxTOHtbXacCruwMFd
0LuUS3IO2/2yLFNfBIehg1GfDu6Zw5xDXI2y12jw2C2xfcJoDuv0lP63NkkD
p9DsnsjDc5hMfHIV6qdBX/nHsQa3OSz8fPhmwgcapHQ1z7r6zWFltx/qPnpG
A5v5npVtN+ewE9OPuKVTadC5c4HVNGUO+2VtBWf8adCSpLATtcxhLRf5bLTl
aRD1WkvD8fscZrtgvVzHSwO83Uhvc3gO26VZPdOwSoVaFrv9hltzmMXcYw65
z1So8I/zKNWYx0bjuiKPnaVCYEK6j/W+eUw0LcnvljkVdIsLriwdmMfK7zIf
UdWhwuvh2kit0/NYr7a+/SgdFYqO/8t/8XAe87r9xp7tLgXOeTOXHHlCzCfq
sWubNwWUYgTKp5/PY7tZnlpeNafA05pdTSqN8xhJvD9rmJ8CGZouE3lrxPhu
Fo/CWFO4y9us9MhpAavMv8GIfEygTEfqzWGvBaz72MGOYtwEhhwuYOtBC9iY
+/0YfhkTMCgSOG6duICdTaXz3ttkDGP77a5ytS5gx/likbG4MZiETrVdMVjE
JKLe0ss/Blj5y3PJQvgv9jCE9+7bN/ogK+WytSX7FytTPc81QtGHw6avI4s0
/mJaGuZcNt/0ICfBJoP10F9McUbThHdeFyzUHjV8DP2LvZgaSlSW1YEid01x
5bm/2N/7N5ynXXeDy4/jlYwtSxijHt0VfjEFYE/9fd7n+xI2kHCzvVpCHkpO
eEn+HFnChEbjL32XkgPG3ogr5fTL2PZ6ESNLkixk95Tv9tFZxvZ3r3yM3ycN
I99Ief89XsYaZk25/6hwgmf7ZFzZlRWsKyzm1JwrP+KPu4IpRKxgMse8ln+e
E0TlR5in799fwY4JO8WArzDiaJM56P18BXtwMSpKJkgcPftssU1heAWLTZPe
P2JERtNNpVfuH/2HPXaPHrDV3Il86sJcLiisYvW/31foG2kh6SEq89LuVewx
XPmW/1wLNTOwFQTDKvYR3/c5VWoPkoM7c5G2q5jp85KVjeU96Hv5gxvZ0atY
ls5lk4tPdZDRi6cZ32dWsVO6UeGTo/poutXd2Gl9FeP9sf7d5pABSp1SGhlh
XcO6991mIZUYoL9Kz3ctktewkItBXm+uGKL8nHcV3MfXsCKhjPfldPsQX+qn
XpPSNazU8cgnEX9AH8uirjXVrmED9O4e4k8Ane0x227+ZQ2TuP7QrbQNUJ3Q
Fw+HiTVMaoKPWq1ghK7EfV+5LLmOrV4Nypz9aoR+35oQLr6xjlU1pKb2CJqg
u9nPyrXurGPe647/RAxMkEGNl8P75HVMNLaNcdDJBD2gW8j5VLKOvd/NGita
aIL2B61pDQ6tY+Si8F3jeqbopTfnMdH9G1iRII+DG1BQS4rAlSKrDaxWXYwc
7UxBI7XimcanN7Ck4zFfhEMoSFxs559z1zcwQ2l6Z5cqCgqrooRWvdnAWqM/
/32pS0UZf8zyrWo2sBfn7avXj1NRqdDxtj/tG5hWendpnjcVTXm4SAhPEuvh
7wTJT6nIiv/6K8/tm1i1xDex62w05G0Y/n1LbRMzKs3J+0iioSjXO1v3925i
KwwKpbY6NFRZnnqw0mYT01F+0ZvpQkO9Q499jrtuYsn102X7A2hokbsgcfzi
JiYgdrzELJqGFE+VDgrEbmIzzsNlJ1/SkPGdSrb8tE2snNmp3LWGhuze1avt
K9jEPpo+ffupk4biOb4FuddtYrs3UGnsXxp6tqfv0cbXTczUze/bAuGZesfB
hoRfm9hIzTuJIgHCZ6/mBD6sbWL/vFrCpdRwJPjfip4F2xZWEeM31mGAI1VW
OqdR4S2sNddxqp+GI1yTJTx4xxY29nsSMziGo1N23M/4NLcw0UJa7B97HF0L
F/r6FNvCntJ5xk674SjpheSKwaEtrC1S+p+JD45KemWlv5zYwgwSGKL+XMFR
C5Oyqav7FiY3EME0fBNHI6qanmuXtjBdvyU1dcKHdLZ6cXGhxHqsXj0thB/F
Q+GtXPwWdjFxtLX8AY72FNH6yjO2MKc07fF/KTg62n2Y4eizLcyTws4QlYkj
T3orxeGyLWw2cHrF8wmOwpTtDwc2bGFN9WYlaU9xlGF52o/n2xYWLHpeRIbw
cOn1synZA1vYF1d/4fkCwpv5vkhvdgurV73wWIjw9HTHlZHWjS2st23vq0gi
ZroOzCXb6CCnLo9ymIj5BE2TgznpoOGj1clThLel82kqNAE62BPfuvqJmF95
38FKPnE6KOMIULtOeFu347BFH4kOJrMfsoVn44jibjH8VIEOzrIcy+jPwpHF
huVlH1U68At6wRKehiPHBFsOwz108HVX/OnriYS/FewzmA3pwPD4657GeBxd
qXDS+GJMB4Jqb2LOROMo3Px0bep+Org3xlZsEYaj+yNu1q5HifnMGS7EB+Po
UdDZCXVrOpAKqmfe7ocjdcS2EmFPB/tiHGRyzuIIMeVt+3mK2N+x+u44Fxz9
ujNEuuNNBxd0WjifHMaR99cQ1SF/OlgdnWdqMsHRljDZ0OAqHThdWb53QpfY
f5a99XgkHRw9V/+gjPB18dDaaYijgyvFBo9u8+No784U38SHxPO/fvlVE/1p
V9J1h/KEDjQ3+z4HEL5OqT1S+6iCDvCA2esLOTSkxDb9ZaWaDkpK+ia336eh
skMxP4800sFdlSsa6Cbh7a5Pqxvf6ODVhCIX9SQNCY8baZyYoYNpGfKpGBYa
errr176Xf4l8uLwbdeaoaI/vNTPWdTqwYbf4d7yXio6vlbu9ZaWH2G8vZ0cK
qCiBSyuDfzs9uPo6J1+hUNF2i6+FHor0gGzvxdYoUdHLh95lSJUezp69KRXG
Q0XtMkWdXgb0IM54NfdsNwVxa8pzNB+nh+GRnxWjThQUZSV6OTSCHuSMLbt0
T5oi8dS3t3rv0MPRxMp7xrqmKP/n8Xsa9+mB+t/aaqugKfrkHl/8M4seZOXm
dS+2mCDmIPZhg3J6mMl6qsugbYJCMtfNFyfp4RWXMBf7ghE6ql7qo7xAD9PV
8gdCGo2QdNXFeJd/9NBnNBoXl2mEygcm2tu3MYD7rTNyFw8YoXm570eKpBnA
i8nB+lwqIJdnbw65HmWAZPmd88pW+5BRmdf+nlcMwM77VWOITxfRdfyCikBG
yHmx8ViebQcKG//4KPAmI+y5/Y9vkVUWsdGlM+jdZoT0wTQGQ9btiH+Xbe2b
B4zwMbn/jvU2EpKL+EJ7/oIRtkSluJj/iqADBtWHH48wwms9ZxXed5uV9548
sbttwQROW07j1ydFQbT85geqLRPMJa+GvZ4Xh7R2R+ltTkww63tDVmVFEp5u
SPy6eZ4JtI879VveIEGp9f1TQbeZIOI0OqceugP6OG55en1kAhXXrONq51RA
3s/18nGlbfDbqWR75uc9sEv/57FM9W1w0UMxF+lrgxadjdqE9jZYWXLyPpGr
DcYx+0eumxDPc/8LmLymAw7ZKscL7bZB5DvePGMFPXjYOa/GELsNgtLmEm+d
MIT0lLMchx5sg+TD1XrrHwwh22loJDF1G7zbddKuhrQXSia/pe/K2wZC2pnv
9Yb2QitTGYdt1TbYb6T275YLBtv2XB99vrANeqpKx82ljIBzbbl69d82yHH6
VM663wj4q7wzKHTMUOWxQmflZwSkQy6WPziZQTCx6PPzRiMwPEOpYZZnhv++
tEibXjAGvwccmfY2zCA8e2JTKMcEgk6GBeY5MEPOz8TJD40mEELesFw4zQyH
BHpZpqZMIK5omjPShxlGzzw83q9lCs/qvgS+jmKGX/4vO6crTGHob6IVxwdm
8LSXypd9Q4HHRrsv9tcQz2dVlEInBRzvtMY+b2KG4fowlap5CvTu2NZ4rIcZ
cq/mfR/bRYUvx3wN0haYgafYyrcijQp3M7lsvFaZ4eJo9bP+t1Qw+5PnB/Qs
kLT/ztzJdip8CvlZNMTNAkeXDGvO0dPg40sz0i4lFjBh2MhtOUmD4I1Rwy11
FmDf5a9d400Dvf2htl90WMDibmYy3y0avP5VlnCJwgK2Bgxprwpp4Kti+Zxm
xgLb4vnkmT/SQO3ybLPYMRa4+jfsRHEbDQp4FLZ9dGKBSflnLRuzNHA/WU2O
c2OBy95nJLLpCL/l2u9z8WKBEL/72hk8OGTtux/AHMwCdkP2O2OUcXCIUrvf
E8IC1aeSdK/r4iDZ1fSiIJIFPFzuhtaa4pB4nn7icCIL/E0862N6EofjZWnM
5AwWkDwy6nvtDA7823RlF7JZQITT7DzbBRzaj3ZgdYUssHe7rORwAA5307zs
EktYYDD0J8Z3AwezMbYrHmUscDDqZ/qdCBzYtHIeGCAWoKR40Z24i0P9dSjh
amCBazn12v73cQhr/tH68zML+NzmExpI/r+PA/687GSBblNPv/QMHLZc+FnD
frBAheh/mnmPcagoLtphNcACHL7ndzMQ3gxcxY0Ux1ng0UdOh8I8HHSpQ/ar
M/9/PifzCeHVv/HXA1uWWIC+XXBigvBvSb94YsYGC3S1qmndJHzrvfPtK28m
VtDoq7ziSsSql8zbjTlYob0s7H0K8fwfNDkpyM8KP6S1tqSI+fI4b7ONirLC
n7tXjswS3na1kZUvk2GFIK6l93w5OOzI/mgcLc8KbUWYbQjh9YEZW0f7Xayg
v/ULjNOJ8zH4G6SmxQrjljbx5kk42EfEJdEbsBKfB2GvFwk4iHcov+kwYoX6
5etbDjE49Eg3fMnBWYHFedTXnvDuQ0+X6YAjrFCdHbdaeJU4r7cb7AesWEHC
pujzgUvEeTEkK0jas0JA1klF/XM4tB3SMp0+RewvLPtgoAsOB4Y9ryb4sIJB
5BvWaTMcqFdln5leZoVHaee3nTQi6i/U17t0jRUMsTQz0h4c9CmHdE/GsELL
kBTfG3EctPu3uXHdY4U9ZEnKLU4cNC99fFCZzApvvAfUn2/QQClHbUE2lxVO
zz5s5fuPBvJ7x8hdRazw4JLUyYOfabD9W9bR269Z4XL7w+O/3tNAfBt/8WQV
K8i63fGTTqQBx5lF9zd9rOC2plr4j0ID1o1niW6DRD2+vauWVKcB04Mz9WIT
rDB8mSE8U4wG67VdsteWWWFLXzmkfoIKkzvK/qPyswHV9I7zs1tUGKvw4fon
ygbN5X6N/3lSYei4kmGhDBtk0U2o+x+hQl9YajLPLjbAe16vdAlTiX1ePd5D
YwNtOX9l/wwKfArWDo06zAZ8vVsaI9coUCs489LQkg0mrZ4lVjlQoMLUieeR
CxtI+LhvfJCkwLNs4yaPq2xQ/eBc0Ei8Kdw5zQJrJWygXpt84LOzCUStV3oV
lbHBT8X0zVN6JhB+/3K6I2KDMr+b9Zd4TeBa7fhqzWc2eFsQSs/zwRi8drS8
iRljA68c/WUdXmM4PBSnLC3NDisH10vPZwK0KA912u1gh3d0c5FhvgAHL+pc
S1Vih9+ZuT66FACc4b92UR124I++l7D8FQNjkrK/wFF2+HXAd0zq5D7YY1eH
WEPYYeJI2vXq/QYg2fnPcmGYHYRTsTO/XmjBRI3LjU9FHHD93L/XezpFQSa+
x/Puaw4QnFwQZ24WhuMOhy2Pv+cAEren0Z4qQfi4oqf06xMHDO3gCRkv5IWE
XXydy4MccCKFbTN4hQ4MEisVFMQ5gVdm4+7vgq3KGE/JtlvhnPBrnq90QHcH
qtJJKDt4hxMiDpkLR+vJoSUm1my++5xwi2x2KF1PHjllLlxOf8QJdldj1wZ0
FJFWZ9P2NxWcIFxEtVBVUUH9e6/4D81zwrmvym1dSxpIla9LysSRCwrcJtK9
LfTQyJ2RkAdnuKDra7f0/vd6KJ19eXT0LBfQ7RRlC5XVR5xMoiUxl7kgenBN
gG9eH00s2VK74rng3n/VpUcjDFFOX7+XRy0XzPogP6M4DNnZTne8b+KCT5E3
rDinMSTYtanL/YULZLtYdCLlAIW0yTC+6ucC3QtcuaduAnKqdk5cX+ICj8rv
8ge1jJBk3nBl7E5uCFgs/7x0yxh17ljaMaDGDfVv1la1io1R9CPmKC1tbvio
lMxM12WMVlMUjn835ob09ZIR3R0mqOeOx9h2O25QqMrNk3hvguLYAw9dcuGG
Af6Oe09/miBaRFRJgzs33Db7zvCO0RS9vVEYfO4SN7zosl06fcAU3bs4xfv2
LjcI+HZl9n8xRQdmNy6xPuAGTksGhqvzpojhPPePE6ncsDGleCCVn4K8XdVy
tnK54Ut3aYC5OQUdtvXR21/FDasMJm6xnyiIuetmRmoDkU8wHSPfMAV9sEhg
nP7MDc6vC4o46KlIxezV54RebnheT7npoUNF7Nhf574FbnAkfxF4k05Fl40U
Wd+ucsOd+4Kdk++oaMTkZHEsPQ/sxCRUb3yhomq8atWYhwe4nra3vWWgIfWD
i1mSwjwQP+7wykachjIOKdCWJHmAL+yK+zENGgq0uHMvX4kHwgwmS47a09DY
caQXqsEDTM5zbBa+NGRlvfDTTpcHJKeH3+SH05Cmna0KL5VY72JKrW0RDf05
I1fn78wD3DyXO4rmaeiEu83Zo+48YA+19RYMOPrkGc2ndIEHdLNn1/fz4Sj7
wpx9fzAPRP7JubVrF474fXcwvQvlgdsXHLjF9HF0w8+6IC6KB2Ik7KiWVMIX
Vz4smSTxwILLkutHOxw1Bc2mSWXywPll16IJV8Jj12RNlnN44JFBo4OrN46e
3rAab3/GA1OBV7U1CK8KhkbGFrziAc3qwcUDhFdDblXsCSvnAe1n9o6vbuNo
NmLmh30VD/SyHQVPwqsOUdtDdD4R+3fd4XaB8GpLjKUiXxsP7DlzIK+a8Kp+
7O3WiW880ESn13+K8Gpe/Hu/2j4e6Eq/MGRBeFX4/rR4xiAP3N/yfxRLeDXs
IbkqYIIHnIUG1sUIT84nHXczn+MB0+zDQ3OEV51SI7iUV3hgrvnMARHCo63p
5a+YtnjA1q1PPoqIpduXVGYYeCEbv+h/gIgtzXnp7Jh54d3RZX0bwqsxX3d2
fGLjBUUXo6BXxPw1x0ye7uHihXI1bRM7wqurnXZXHvPywt6RuicWhFc1rPzN
eAR5gavkT8lDwqvu3bEywSK8sChTFK1IeDXTJn9+TJwXCm3FDrMSXu36Xl1n
Kc0LX/biMtqEV7lO9iVVk3nh9jHbnSVRODLt+3tWTY4XHif7pgaH4ijIngdL
U+QFT43K/AdBOCr5T5GfTYUX1IbP39nwxdG4o/HwJTVecI96HvbaA0ek3ydL
BzR54T325mu5I47uDt51qNDjhWt6DUlv9+Oo7nSexs69vHDITu7Fs704Wh+u
YnoIvCDQPGK3oI4jz7HFggs0XtiFd/y5KET42IP7Wt8BIn+31fvFzDjqmVAw
33+YF25YBjgbLNMQberE8nZLXlD6c1fxUBfxeRAM7bhuwwv6j/z55OtoaNGg
8HnfSV7AFNtVbF/RUFbUmttDF17YZKObbbtDQ6sKaT1s3rxw9dV/1twGNHT0
SO1r14u8YMa/43TDDsKr/pNxNf7E/t4F0v/koqFjdYb7r14l8tca8lX5j4qe
ufSXzUbxgq9xzQeLACpiiNr28NBdXpg8iRC/HRXZvNzlWxDPC3qxn1q0gYq2
0V1TOp3EC8AdwlXMTEUO6dKp3Tm8oBMwE3QhhoJ4exyDPyJe0NWvnNsIMkWu
WxE2ErW8sLVl8trF2hRVyL/QutzAC7nk/nt6mqbI4xLdlEYrL4Sn/S03GjFB
1fyP7HN+8MLdrI/zPTQT5HdoYF/MEpHfU6losXkj1OTHLjH+jxfGEl3ayXVG
iJSmuUzZ4AXWNv3txYlG6PNEyPMtRj44xC03aG1ghORvy5Iu8vHBQGOJtcBV
QD3Vp+lPqPDBwbTumayuvWjWqFf8qhofpNo2DHld2otYqo5oZWnyweasOVOU
wF6kXanvNqLLB2ku4bwvDxmi++95P/tS+CDOsM+ZqVwfHXldkRTtwAcCqkfo
+/10UH2OoPqHOOL57NwTa2Hq6M3tWgfSXz7A7gjUvbNcrcw70CwascIH9d6+
ajZi85UpnF+/Tq3xwZHDXwenSwcrb8T9pL5n4IfNgnaPyIBezCxpVdWKlx+G
dz6JMW1ghIFc9a1oZX74xtf0kPegOHA3pGUuO/PDAL2as6ruLqCPfGLrcIYf
2NXvaKTsVoXFAwUCde788Ns9JVhVVQ2+t76LSLjADysBKmYn4tQhu+vrhV1X
+UH+fa+P/lVN0B9hhVNJ/KD8ruyE615tcN126VdrKz+8624adoC9IC7T2L32
hR8kXfpFdzwh/Kkr1ab4jR++KJ+aVt+2D7TP1X0I+cEP+foxGyIN+4C5QyhV
e4wfvM7e5JgiAeRkvbXMoBcANdGk1KTbRmBTzn6omUkAOsX5rxW/Irza6WC6
wiIAIf2qxlb/GYEfC8tuC24BcL+cZWataQymXta8zBIC4HxNl5fxmzEMGaw0
ndcSgFTFt68UmEwhydKsOkVHAFjeXz01rGAKZheyyhr0BSDMbvGF3EFTeP0Y
zyMbCQBJ9nu5UpwphLEl3/p2SACywruOqglSQFd2KpjBXAC8HutnTuymwKSh
kZ/acQEo9dvGuv0YBY57j7tEnhAAmV9UWYY4Cuzo1oO9bgJwacSE5yIjFXpm
7+h4egpAF4d1/qo0FWLYB1QTzwtALvfd3BU9KizujZKauygA77aktSy9qFCb
3buafUMAuK50MF0nvHr5o+r8l1ABuO34QSZvlAoqPSHjm+ECIPrB66PxJhXu
cyj32NwRgHP5u2yadtLglG/QG84UAWB4lxUgGEgDbc3/3uxMF4A9un2lDjE0
YJ+Ht9QsAZhpTFWTzKDBCx/mdzeeCoCH3EvRmUoahGp4vEvPFwCD+RbE2E4D
q7nmd+XPiPzubrBF/STu697xpYslAsBz7xnPxDoN2tQXS/neCkCsepRkDTsO
j2etylTLiPxlsbOcojjs95Ysd68UgJean+9NqxN+Vb9efqtaAAatfvWEG+Iw
O/O7/HGdAFRYG2vfpRE+upD7vq9ZAH46PdgzTnjWQ4294l+rAPR1f7U3JDxr
OHOuQvirAAT8Wi3YOI8D7/O2it3fBCB055sxFX8cBr00PxztEQD+p/wjjYSv
3qo++HD+hwBIlty91BmGQ9T08oeo/wTg7nbe82bRhN+KT3zM/S0A24wmcjTi
cVD3+vCxdojI/1X/euhDHBhVSZW/RwWg20zMwiQVh66pkMrNCQG40qYfeSET
h/yi4UqJaQFITjgSyfoEh+DzxP/8OQHIFPtmyE349siuQmS5KAAH75fF3yB8
u32Kq8p3WQAqD9hdcSQ8uvTMuyp2VQAWFu+MFRBebTzXUfVsQwDiN+K6XQjP
pqloVzfSCYLpCzHjiP97dzKpeoRREFyOHVYQJWKTZ2vVjCyCsKXSEClEvC98
zqGGxC4IFy/evXA9H4dx5aqavVyCoL6TNGBJeLfij2ztCV5BkBzymE7KxiG2
MLw2QEAQdG40ZeOEd13OjtfeFxaE5g98YmcI7+5RNqt7KSYIo03XXaYJ77L+
Ka5rlRSEc6W1qUP3cOgr4Kv/IyMI3r1bA7S7ODz39KtnlRUEDcFKW9HbOIQo
ddfLyQuCL8/mDqubOFhN6DUY7xQEG0e58/SBOKx7bDUEqwnCZ/EJ+UcehHd3
unxK1hQEIWvv1QdORD+N1356u0cQZKGY+58V0U8eUY2zBoIwXpg2wG5M9NPO
qUYuTBAkir1lyrWJfho70qRkLAiVFyCxR4noJ3eh5tO4IKzxWFmf5iP6SfFy
882DRD1ONut8ZST6aay3OeOwIBi8TAx98ZcGA25ZLT3HBWFFP6ykspsGam7K
rWbOguAoU3ZV8wEN/vOQuVB0WhAuV5S3Zd6kQcw5AV5ud2L8UV+523kajPus
mbd5EfV6LZ3CZkKDJ8HN38yDBYFPqkrx6QgVLK5X+pdcF4SguKW2lc9UoAt5
JSIQKgi3hz3pCl9TwT4i1bYzUhCGKHmN6jeoIJJwtt8qkViv/HxUFw8V6u87
XnuXQowLRo/rzVPAL/GYjGiGICRkyPYxdFLgS5qB8/ds4nz4z3/99IAC0bkc
wydLBOHrE/ZDe/kpsFVROOn0meiPUi+zpBkTKK7MvFPVLghmImupVZ9MwK76
nur2TkFIl7z6xvGRCZQ1BHkP9hLnQ32csXnUBC5+Pbh4ZkwQQtIkwkfyjWF0
9M+aJ6MQTPX2PjxtYgRt/Cocl/SEQGn3s4wNA0PYd/78eKqhEGQd5nAI6DaA
4obihmpMCMSOMIdQfQ3gbrBGGC9VCK4GkJ9N5+iD2Yj2RqGFENzvP2pZuE0P
msqMZgbOCkEfel/Dmr8H6pysO45mCIHE0ahAPdld8L44JFWFURjmdGOep1T9
V8lsZimeyCwMsdfS4ummZirNxxWS6dmFwWpSfkvecKVyVPbzwy5eYdje+fPT
QxcmJJAsknBDWhhGE+LPjfrwo7Ohz2536glDZ/xUqOlZMpKw6boU7C0MDp2P
n5a8VEeuf/MWRy4S8QcrTS5VDfQyIeiieYAwuIvPCE7mayDaZ5KP/DVhSL45
sqCYpYkuGp891x4tDJQb1MB94VqoWYXu1I5cYTAqs6n5tUcXBdErHW3pF4a9
SR8LNTkxNGLK0SP/WxgSrdfNWr0xdPT2pOPNIWFwK2Bui+3E0A6e5xe0/whD
a2n6twozQC2SWrFZK8JgZvCGdoTTCEnr7mv1ExABHcd7W8t+xuh2kIxVm7AI
LA5vu/A90xjNf6T7b6e4CIT7KOTrNRmjBkrN1H8kEfh2knvcR8oEeR/Dufar
isA+bqGjjz8Q9y8vCzOp/SIwsHHspuCQKVIp2d0ZYCYCpWn/PjgxU9DDv4J2
X4+IwKnMZSkJRQo6G9x9NsJKBKRj6bK7PChIMMoueu6UCNw5e0Xl6AgFXfu8
V8DMTQRSvsS3LDJS0RivTOpTTxGwjGp6QUemog+JvwtO+ohAS12Z7EFbKnLN
cW2qu0bELFdfPKimovYxmgUpRAT4h4vMHX9Qkb7Kzt7AWyKA/4lwilqgIp5X
f8bVYkQg++QPFYbthB+XWnyiYon86hZzD+nS0JBe8b+hBBH4JEDHuXKIhkqR
N1tKMpHPhoC+WwANbWeyiF9ME4EbQXlDStE0FEPbLXYkSwSw84f1DmbQkHPr
X0WmXBHgqAn+mllNQ+x9gbjXaxHw54m1jWbEkXZAPlfsOxHYMfnJR53wpDN/
z9fn5SIQyWqAm0rjqBTfYz+HROCP/vXlt9o4Gho8tZ2/VgRCxGsMhYxxxHM9
YVSzQQRiafJiv81w5PpmxsfvswgIfxB/iJxwlHBUWudBuwhI3Cn/2EH45MMf
s/U3HSIQfyf57jHCL2PhQVVdXUQ+eWe/YoGEL7cXhC9/F4FbZo4nkghfYh96
Dor2i0DrHelVO8KXnjYsfHq/RMBCo/32nbs4eriwp8t2kMj3iejvnfdxVHX3
dGrgiAj89138t0YyjiZ33nNKHRcBPpkrnjnpOBKtq5KrmBSBK02WLmGPcGTi
NDvRNyMCSgPHXrYSnvNak36xMS8CTHmJJmGE91IeHrokvSQC1/gaWHMID9Zp
BOtj/0TARol9UZ3w4mxLwZbjuggou3CsKxCelHT/XntjSwTe1C6L/9+bOCNr
1CMGUdgmdf2wNRFfzNA+Ur1NFLwYOxNjifcz9M4IDrKKgllX4Zom4demznvf
GTlFITV9X4hRHo6WLlRn7OARBcfvVJ33OTgic8ydovCLQrc+vVLWYxyZPZXZ
6SokCjdwlfOzGTi6bHR4OlxUFOinWESeEb7O7gt+lSshCt9njxt1EP5uCyi8
/ElaFFYcjrO5xhGe5e/dO04WBbHO+tjThD/li1kZ2eVEQaPsz0or4U/z/Tqf
lBRFId39xrmcYBwFD525c1BZFPB9lUJjfjjqEK8RuaMhCtRHsQ0lp3C0+Wau
r0hLFDZtNnQMTuBIyZz0uFWHyFe0uUj9KI5uRFxV4d0nClKarpmn9HH0bPuz
OXUjUbg/25DxSBVH3R9635qbisJut+cFh7bjSHVRx+jeAVE4fVVKaI4FRydi
XZlfHxKFfolK/vF/NHRL6UFz51FRGH0uevLoHxrqc5q3FLYWhcXCj2peLTTE
uk6S0DkhCn/zvf3lKmhod+KRX9b2onDp9KPgQ4U0FPX5mWfyKVEorb7hPBdB
Q2/df6iVu4rCW0qykNclGvrNyP6310MU4g22dtu70JCuvtt1SW9RwI6YX7+v
T0PDT8n3M4NFwWiX8Du/ISqaDPv9j/GGKOidU1hKa6aieZdHju6horBT85i7
bAkV0cmQlTWiRIHiW/rh0FUqEk8kVVcnisKZrXGOXZxURL70S0EhlaiHqfeT
k9MUpHgs6050BhG7hcdNt1HQHh6S7fEcUfjAHdFmGk9BRyNkZodLRCHxwXBM
MycFWZ/5aXngrSg8xeId9kyYIgeTzPfFZaJwhfV4BXuDKTq7JR0RgEQhoPYp
8/o1UxQeIC3N1ioKQi+fygqNmaAKNykzlXFRuLveMM2bZYxqKP0v4yZFYSxC
2Ogl8f3cJJsu8ndGFGo9qu+14sao+6fk4IclUQgnfZK4NWOE5q0lA48wicGI
kUE+k44RUsQl8nxlxIDJbTfltwOG7iuKMZVZikFBTsTi5UxdZOcgnztoIwZF
Y50GX7R00Y77uw9w24mB4M21pnuNOuj11qG4Uy5iwJIdS3aZ00adXSGS3BfE
gE7/suh5/T1I4Nak1qnbYtC5PGWQ8FoDJfyuPMP1Xgz+9EcbVZfuQHEprg3O
JHE4KWD7a+kecQ/3D7kYLCsOMqHyoSm+QuBgkSGTKC8O9rdNCj4eFQEV9q6A
FhVxEP4aSrLjkIDGKxRFHT1x2DVR1HXCkAwMtjsiOS3EQXB/4EvSA0W4JDJw
4F2oOGSMRgnquu0Gu4WNpS/h4vClxpYn/dtuMG0TezIZKQ7LlzG5GBMt4I8w
XyPHiUMhOnFhU2oPFC+hwpg0cdi5yFI62aINY98yOV3eiANRwNkaXn04cd++
lXNUHM53Lo518QBIvmKXODshDuZnnoQrGwH8/PLOrXFKHGzFB5y5fQFO8/DT
hy+KQ8jzgqArXwG8oup3b9FLQN5aXxK6YwQhN9SS5yQlwLsoadfKJOHRzL7h
IyQJ2Lji55oobAIsHyM1i2UlQI97muUlZgIxa4PNnkoSYDjyje1InAk89E/a
HNSRAEl/uasiyqaQf47+dJeFBJB3fjCcp1DgXHTxCy0rCWj1YfYqc6WAasHJ
jQRbCRAdaO+eCKdAyeibh0ecJIA7+3PH7ToKVLh4Nn46LwGz3amfkw2ocO2m
iLCCDzGfYhZzqjUVjLJqXW75SQDP2yMDW77EfbJfet0oSAJ0folHzOVSod2m
Q/X9bQnY82Yq3YmdBgkBN4LEYiRgLZVjxJNMA8uHuz4FxEpADv95sw4dGvR2
RDhrPZSAQV/StgoXGqTNaxUnJEvA7es7lA0CaODIN7A6myYBc4k9wsLRNBg6
bHi/6Amx3tl1kf4XNHh6fvwXR64EiFxllftUTQOPmIe7PAuIfEOZRjk7aTDd
OFsv/1ICLBumCx4tEl4dSxe49VoCTDS7P80S9/eLLAedBt9JwBv5go5EfhxW
THP+ZX6UgKhjgeKTuwiPvc8Mra0i8ls1v1urhwOdZgrXeC1xHk7mnmwUHMLy
7idyfZKAhtftHuVHcGCRiSVrNkvAra1nB7ttCS8+iCy0apUAvoL9Xx1P4cDN
GbYn6IsEzCzH1xw7R3jr3+X9td0SYMoYwnM1GIeUCxc7xnolIOnuK5aSUByk
Rs7bc/0nAd9fPM0xj8Ihy859VOO3BIyu0VWdjMNhR4eLj9WQBNANLmm1P8Ah
b7/9WuCoBIynmP0qTsFBBVnfypyQAIchq5zlDBxeaFvw1E4R42jNo+AxDruL
zJLHZiXgC98rkYYcwruyNFmuRQnwJ0ekHiK8qZ9iVKSxLAEfhIVG9hLe/Mhr
qGO1KgE/Le78SSS8aByhXRW4IQHHy149OUl4sn5D/WAmnSQwDvxkiyTi/X7K
32oYJSFnz4YkiYhbJuQcx5glwXwx6ieJeP+oM2mck10SjsinWUcT3uzsFr+o
wSUJ/AHddx0Jb9ocFtqw5JWEs6v+CemEN/tqeSICBSTh7w/aRQrhTUcDdr5M
YUkoW8mnWBPeHHjJlFojJgmsp2LJHYQ3XRW3doxJSkJWe9D2MsKbExn/ijlJ
ksCwEOrGRnjTS2hRV0NWEmTKzQRqI3CYj56utpSXBOwmu9n4DRwuMYybBe6U
BFP5GwZXrhD9cXmwK0NFEgw4Nrn9fIj+mOl3qlEjxhmcl7+7E/3h2jMxqikJ
o7J8Owsdif7o++rHqS0JPbF0faOWOEQ3Nty2NJQE3S6ed9lA9ANU8wdikmD5
rMxJbg8OCW8r0jKMJWGw+NVd/p1EPzx5+WIUJ/Zz8dij3TzE+V5N7bliKQkX
dWUjk4n+Vll84JJhIwkOhnd3RNQS/e0ZN1l9UhKO5rrND76iwTvrW3ScLkQ+
f/CPk3E0qNe4oJjhJQmB3ANMNFMaHMjzKKn2kYQTF/LZytVo8Fn6tOGonyRo
9Hg1Z4rToJPD9qh6kCSE3oyLrpumwuCw8eXqCEkQ0Hb4dTuOCsaZrY+VoiXB
9oycU8glKmTZnPiccFcSSNe1BH7YUsGh2Wf7qQfE+eekqBWRqND7IquF8Ykk
JC2t0P95SgE9T5Xls08lYaq2qWKR+D5Kki0ld+ZLQsuxPqvTxPeV1cM2/+wX
khDzO/PLZVkKfA3aJFE+EvPLmXvFPzQFjT1RB4uqJCFB2TN+yMcU4qaF/IXq
JCGyy/dYjpkpHHbe1TzcLAnfaWKDF+lMoYlqdyn8uyR8KRA/ccrZBKr5yhsb
FiVh1+ncvkg2YyA3UxbVViRhoTsizbDPCG6EfZFOWpMEJrrk4AvFRrBveeyi
O4MU7Fy4jU6YG0F5n4g0G68U/P4ZyH8uHqAk95LvAWUp8JroemS5vBce79WQ
+OwsBd8/L92O2qYD1YfZQ9dOS4FdLO/X3UnaMOA4OLHTXQqKKIVcR5W0QTbk
QXm4lxTUbXaKTJrtgez6f7YQJAUo5oT5ZvRuyDlSnfTqvhSkiB5JHhtVgzzn
Y8IpDVKApV5sX9wgQdGtS3xuu6Sh4Ef/hLC7BJo0tA+5pS4NMUsNR1OpUkhl
0XThyW5pqLT4zuG9QwYVuAh++6UnDTzit/umvcgoD3uVdIIqDe/WoypwWTmU
/W9W5rCjNLQiMY9OXxWUcv6c6p54aRC1FJTKNNmDencczzx2Xxo6KznP+L3Y
g8T6DHh9E6WhMG8iokFSGyUd4JgvTpeGxNOX9foXtNEDhYI3igXS4BG7d+16
qi6K+z1qKFkjDQ7fEwOCWg1QhOWpg4x/pUGrVsXf/Tugx0f67M6sSMO/B9kv
+NiMUMV+S6+GNWkwrcOfGusS95u9tPhoBhmwrK+L135ghOzklbsFeGUg10as
1Xi/MdJcnnfZoUyMk8lBP5JM0KG5s37hqjLAyD7QfhaZIPc/Q7fGNGRgcvrZ
a+9RE5T+syvvma4M/PK27+vYbYpYP5VPa1Fl4NvG2xsDdabov6SQQIqzDBzo
mu8zbaWgfwlr0bmnZcArVj8rZ5Lw6h2/dDZ3GZjxe5xylp2K9t90RZ+9ZKBm
wmJW1pSKXnscYLYKloGDPUYa6i+oqO1UjUjpdeL5qz2PshupaMLecKd4qAxI
zVhrXB6gIhkLVbP/Ion1n3kt6vET92N9/gTXRBlwCOT7J+RJQzla0U8+pcjA
8Uv86j7XaAipMr1RypAB1uK7kfIJNPR3+1L3dLYMtFyjC05/R0O8UhfGj+bJ
QNYbf06HRhpSEhlbLSmUAeZX3sX+vTTkxNErFVAiA5/FmvDiVcK/246pfX8j
A3Qcb+1b2HD0YKsZDMqI9UQpH0CU8NHCh1NblTKAbWv5pLQbR8NT2peca2Rg
uRi9zcRwRDf2PLymXgZuUK0vehzE0Z6+R/kRn2WgQsGId5XwKK+q+8rzdqL+
bvlfpT0JH15XpfV0yMD1Nh6fIsKjn74sPqDrloHsns63OYRHs2XfDyn2ysB4
3F9flhDCL5du7jbvl4GEes7LXwmP2jXQQq78IvYrczyNORZHumLcXx4NykC0
RE7ZE8Kjgmc7ZZpGZEB5/UpRPuHR2YoUr/lxGXifOm0jSnithdv5g/iUDGzs
rMqaITya56TAaTIrA0sdFufVCO+FlUydOLtA7Ncyr6Cb8KgT0+v8e0sy0O3r
if//96uGVoEr7//JQKnjiJ4z4UnRPKANrctAGzu3vzHhzdVgxoPMdCSos7q8
/P/fx47luPqm0JNAz8C5Yi8Rd7U2JqsykiCtLb/emni/dlmlqpqJBHlYj0Qv
MX8JKW7MipkEp/JF6mqJ9bP2L/D8YSFB5ZBOmwiR311fK53rbCRo1Co60EHk
H5xa5iDAQYLIgdiDy4S3PWslw3M5SeBUlToeSuzfZup6kQE3CcTT1eAKUR+q
8GBnGw8JHsabeXUTntfCqOun+EigaPbgYQZR3+3u+bIr/CSI1T70s/UmcX7x
nAdjBElQEm3t606cz2bZBV+SMAlmLbWvniXO7zuHdhUuRoLmHzHVxcR512sl
j/WJk4DZT9RzxgpHr+3XeXwkSfA5Nf1UihmO4p5XOyTLkGD7mWOH1bVxdK1H
LnwXmQRLaicbJZRwdI4+sqhqOwk07rAU+EoRnj92ZH1cjgT2f826TzHgSDu4
RPaaAom4Dx5s2lygoR05Qgf5d5IgMP7NBeZhGqJb/pGsr0KC5YsJFPs6GipN
cdeJ1iSBsBAjl9Z1Gnpa0+wgo0XUZ0zMEztHQ/cnVcNf7SHBzQ73inIbGvLe
97fzhy4J5JiMdjCq05DiwE1fFYwEXbnHV8e6qUiYYzgZAVHvOsuBm4iKmLTw
quPGJDiNv/p5N4+Kft3i5r1KIeoTuOrJEkBFSTtTiz4fJMGLlcyXoVxUtLhA
zQk9ROyv8f1V/xkKOvJxPk3vCAlYTHJ+NbVTEPOxAzE5FiSwXD8wnEp481Lw
P8+rtiRoj8D0VzgoyKLNWnGXGwl+F19p8x0yQcXJjKRBdxIsJo2fnq0wQWyn
n4ske5Lgr+7tCz/vmyC0wsyyzYsEmmkvzwubmCC17W+H+/xIMJY9+ow12Rhx
XhJ8EhNCAqY8oa88KkbIHUMpxmEkKHM3+a61DqiG7VzCyi0SuGptav9sBhSY
UXPzdCQJgguqzjd6ABpv8HUyjCNBj+fGwz2AoXrxL1KT6SS4b3FHcmzGAF1H
d5IOlpFgjV4t0P2jFproR/f/lZMg4fsU3SZNC1mtLcTlVpDgxs25E8xfdiMV
7RORjIgEZpc3goN/a6KeQvnA9/UkOCFZumC7ro40EytPKneSYELthuJNPSU0
cn5OmmOGBC2OY4tSNwTRIQnLnKYdZDiVUv0oXEQekoZU0Ul5MnDrUNvomBRg
qIj1x6QCGUwt39ybmVGAYKjg5VEmQ4zomTjB+p3w7Ixs8DENMgilzI7/8twF
7C/mLPr2kmGp/eKJXlwTGkzv0k1bkUG5gXOHu4ge8HO7S1y3IcP7cMn4F9f1
wKHbSJv3BBlePE+NchjVgyWPv2c17clwpeqB1e/X+iAfa9ftf4oMa5+sYvfh
hhD2Xal46wIZNLZOulAPY9D+mKkxzocMans/v28sxEDy3H+D5ItkeEK1zaQy
AbzajBcz9SdDv+rc5rAjwIDsv7DbwWR40xTO6s9vBEZeDSf5IslwOyhhcO6U
Maz2jFNro8jwqlLe5GGsMbw24dQMiCFDbvwBv7flxiAvZs7aH0uGh++CQs7w
mABnbe/rvIfE+7kfH9uXmEC96kbmySQyNPCFNVZ+N4HryTLR3Clk6KpLSrhP
3LfmvU47+6WToUTh5od44j7WIzbNBdlksDK4p/mh3xQSwnj/zeeQgd65mjOR
jgIHZzSHcnLJoMoRbfljOwU+1gaUcxQS+Qf+c808Q4HsC/Ru3S/J8OhK0e+1
QQo49MpaRL0igxeT8DkeBiqIUKh7974hw9/ZMINwGSpEiUcLPCklg/+JCNcU
Gyp41wkir0oyhNwz5aHVUEFJXaeQXEWGkzPZdQ59xP02xfZhZzUZUmpsizsW
qWDlnXFOv544/5osl6+yNOD9gaynGsjAuS/85wl9GjRSBo2zGonzl/Ke23uU
BoYSimLMn8kgedjfgy+QBku3DjCVtZKhyvZNDt1dGjyfPTdztp0M36Oosvgj
Gmyvf1n3pYMMSTb9Vf11NOhT73wR9o0M55/Z/qfUTYMHqUupOt1kKO6Q3N06
SgNWHwPf9F5ivznwQogFh+of9vZH+8gQ/ffnv1IhHIKoN3DG/4jze7j/4wtZ
HKYl6qQ9fpNh7JWTatpewg/ho2ySg2TQGQkgx+7HwXmO7W/rEBncVzSkvx0n
/FV/uFlrjAw3L+1bsfHA4a6Gz9vRcTL8bAkweeiLAy3t3qOUP8T4lJyfXBDh
HZa3MYemyOBMPX6ImfBquU9PAN0MGVq+jz7UJbx6sW/V5dUsGeZbsqQqCK+q
0KQOu86T/1fDncdTtbVxAC8ZMpSuocJtOGuV4hjCTYXycI5zdhJJExnPq9Ck
zGNXrk5XplNeMiQZr1ISUuGwqMsrFYkUKrcMkVwyT7n7/vH+vfden99az/PH
+n72+izoaVEpFiRS0HvfeIfSGAPGwl5rlqZSkP4zb8PzcQZQPIaHxk3an3pM
Ld4kA5yd3S88yqLz7R7bNjXFgIicnrz8XNpvzkKT2BkGaHTufiFG+3GpP3/P
hjkG/Ndr9mMt7dXMGKuDZfMMODK+8s0Q7U2j7NVO+xYYIG3jmRdKe/RN2V/u
vYsQPF0aa+P97//RV7e9QkQQJG0rbmuk35f64h0iJ4pAMat1ezw9XvYPI36e
GILUpMzzQtrHuxTFBbskEJCq0BJLOs9bZmNyy1IEya/D+jl0Xi/TpKwTUgjm
2cFbctMpkLF1ubtIBkHtnyPpp+j55nqqP0xchuAn4Zr9KfR6AH+UaMgicM8e
dNW+QkH79YpnNSsQSFsuTDOjKPApvthyRA4BU+GWviCC9uMzyw9D8gjMR4ZY
9qF0fbtWfYlQRBB9gW8p8KV9Ptk1orwKgf63Fr7GadrPy27PFq5G4FDxbb2O
KwU/GRrJvldBUPxOw8FnHwV3rMWUvNcgCOC+CSw2o4Dj/hJJrkMQ5LT321ED
CoISnPW3IgS9wu7xfgYFCnfUoAEjsJ0mqEmBgoKa77tdNiLQUvnYul7i3/PP
EQ4xmxFI+bNVlwxwIUTc0g2rI/iabhaQ0M6FlWtWnXvMRGDCnHoc/4z2qPmt
iB4tBIubvNJa87hQlP0if+dWBKefC7OCHLlgUZ744LU+gm358koB5lzofeVU
5bEdgXFc9lz3Vi4oL4w0JxgiuLj8+QpZaS78Zrty5psJAs+yU1BcwIG1Zz8u
iWAhON6m+8kgkQOP+HnLlM0QXF81tU8/lAODxQYMDoVAWUtKPGo3Bw4sd6Ju
WCKIOPn0hrDDDDY8+SPR8igCi4jZka5eNrzUmMrutEfwpaXO9XotGwISqeIT
jggG1gn6OnLY0ODR38h3QZCxLlBzgMcGrxVMySo3BHgCv7BtY0GVQ0Gwtg8C
jzwRJePbpuBe9yNS6Es/P3eDkxZuCnI6Vkl7/BFcmFFbGmNnCsdFh0vcguj+
EKaIbaS9KpOvM5QehqA90equtYsJ2E2VOK+IQbA3Obp0cs4YRHlinjdiEWxI
uOH36qYxFDQcDNUQIJA5bB85xDKGxekTyVQ8gl8qc2xmL+2CPLPtr8OSEUgq
hm9Mk9gJ41fLzUZyEDRUR6TO9e4AgWaNenMlAhutgUX1+nqQt/2oZDhBcE3B
U1O+UheqWGN9OjUIwg+2C9+xdWHIVjXnyp8I5A902vXv04E9/MvrrJ8jkKjg
j3TVaoH4x/0KTe8QuJbGc7cMqEKw4PP8izEEOh+HPWWVpOFqakhn6ATd3yLn
eBJiEnA7V7FccwpBvZ5cocOwCLyt4AbEzCKIKq+c144aN9bvz/9uIYIhdGrz
6uPmvVXDJj59DbIYdMr9qnYqy5Pjo6Kv6tUx3AzpE72WpkYcb7Nf2mtgKPU7
+Xbid3VyyCWi4W9NDPsNJc+UeDMJp3FJraIOhuB5vp8uV5Oo5ouUu2zDEPZX
skij1xbSw1uUM83CYJctpnl/Xo+4Ns8GqDlgOLs4fDK5yIDYRxr6VThiOC/z
I6tvtSE5AMHeVs4YBFKhmXHnDQm7YOa0738wvMrY/7mba0Q2XJ7mVXtguBMo
F+jSvJN8Npm0sPXDkLO09pIFD0j7lL75oD89XmH920dxQJrv+XF/DcTwYJlc
X1UFkJo1EyY5IfT35jnDyYomJHN6TH8kHIPYr3H6zjUmhHf/+/rIOAxPE491
WUuwyKlwmznzKxic9I4Eu+qyiK9NSZtMPIbslOnmbnsW+X3cN1aQiCHoMu+u
WiG9n9wxPXstDcO7e95lGVZs8kjKrs02HUN/NPW/BV82qe4oK1LJwJCQozdS
ncomLaEhHunZGObiDZTP9LDJdPXCm9x8DNFHFIK458yISLxzkftdDI3ZTiN/
XDUjMq7VMer3MGR8+CrlWmxG1or/xi4owqCpIsv++t2MsM3Fix48xvBhIq1S
5QSHWKq4xfiXY4g7Na9ozOeQw4N17juEGJ7w7jSWZnDIidjIdUKCQTtyTu3m
Gw4RNMvEPK3DkDWn18HeziUpWafd+fUYor6ZhI9bckmWz0sW1YBBssXx6pgr
l5SuFMw0vMQgXVZyoCOW9nXfcGtME71+++/WVWdySf0j6/tWzXSe+J0bxx5w
SaedvPvrVnr+0oH2BrSne5k+rIQ2uh8uPmHs/colf8+1rD38DsNXt8G8W7Nc
IpKe2NreieGoaq7sLmWKSJ+dLLz+AcNz/g5x3820V02ORDt2YRCnHg6ObqXI
ps9KrE+fMYyZZo7WWVJkS0nQ2uweDAo63Yd+tqOIwcWO6WN9GIwvV2k/dKUI
65BR66Z+DEnxbppJZyhisSmtsH8AQ17GNdEqf4ocmpqPyh+k63kwwZMZRhGn
eke300N0/vu6Wu8vUcQ9pcpUexiD50KjWAvtQa+T69eOjGAQXnGolk2gfWl0
YbpoFEPTIQcdQQpFLi771OIzjuGTaTfzYDrt0Q+mhfqTGHziUqMdsyiSdC8r
amoKg2pT9S93cimSGSbqVjaDYfl7pvQu2rf51sdMQ+bo/r5qNidP+7cE1a7Z
9QOD+nG5GU3ax5WjqtMLCxj+f7/UPxS/BTU=
          "]]}, Annotation[#, "Charting`Private`Tag$27529#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+f/TDQUN
          "]]}, Annotation[#, "Charting`Private`Tag$27529#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-50.047229197529106`, 49.34793208534031}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\\!\\(\\*SubscriptBox[\\(y\\), \\(d\\)]\\)''(t)\"", 
       RowBox[{
         SubscriptBox["y", "3"], "(", 
         TagBox["t", HoldForm], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.890130124867557*^9, 3.8901302759131813`*^9, 
  3.8906912710148077`*^9, 3.89069236338553*^9, 3.8910748505777893`*^9, 
  3.891081905679304*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"4e23a329-94ee-431b-a4ab-f9bfbae136da"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tracking Error Plot:", "Subsection",
 CellChangeTimes->{{3.656632034753817*^9, 3.656632044712646*^9}, {
   3.8910815943526297`*^9, 3.8910815979104757`*^9}, 
   3.8910819928963118`*^9},ExpressionUUID->"859dfbd4-c4db-4b06-afb9-\
8d88327a255d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"yd", "[", "t", "]"}], "-", 
       RowBox[{
        RowBox[{"yo", "[", "t", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "/.", "Solx"}], "/.", "Vals"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Tracking error\>\""}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.656631223398429*^9, 3.656631238322188*^9}, {
  3.716572925331809*^9, 3.7165729339246683`*^9}, {3.785104282910652*^9, 
  3.785104301535564*^9}, {3.7851056282444124`*^9, 3.785105707472371*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"68cfdd1a-bf2d-4c61-b339-68228a61b932"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$31256#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{523.4019886363637, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Tracking error\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6566312263869257`*^9, 3.656631240218232*^9}, 
   3.6566320501366243`*^9, 3.6566795172182245`*^9, 3.716572936335909*^9, {
   3.7851056310717506`*^9, 3.785105708243903*^9}, 3.785109849713931*^9, 
   3.7851126557230268`*^9, 3.7851788531113443`*^9, 3.890129248353079*^9, 
   3.890691260288397*^9, 3.891074824538878*^9, 3.89108214862508*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"f2305500-07a0-4567-9b26-7a030bcdf814"]
}, Open  ]],

Cell[TextData[StyleBox["Velocity Error :", "Subsection"]], "Text",
 CellChangeTimes->{{3.89108200682051*^9, 
  3.8910820190016403`*^9}},ExpressionUUID->"1bfc065d-23d4-419b-a321-\
a49cd6820b25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"yd", "'"}], "[", "t", "]"}], "-", 
       RowBox[{
        RowBox[{"yo", "[", "t", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "/.", "Solx"}], "/.", "Vals"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Velocity error\>\""}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8910820250492277`*^9, 3.891082035429915*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"3b43afd7-ea62-46ed-854f-3d9d1e82c079"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3k4lG8XHvtu5p0Z+2RmUJYkJKnUeyohS8mWipIUUkKUpPghSUSihKTN
llSSstQ8dmVJEZI2O9n33fd+f811X895znKf87xzbrbTWcsT3CQSKZqXRPr/
7/0rTvxazje29z99QP8k3/2hvJFldoDlhn96cOZ1nmQJZ6XyQwiLdRHPOJK+
79vZeo54bP5L4dZgvLdoncaOq02c+yiKyce6jtOXUzpWfWnlqI8431xxicZb
PhepXHFs5/wUT1lebInFA77dMVU++ZujlCakO78Qj1vUZ+4r5PnLOb3N98wM
8x7+Y/0xzYn1HZzXTX+eTO5KxrdW7+Vu39HJmXc3ax9zeYBvjRUu74EujkHd
rdXTLY9wZym1cz9keziNC65xo8xMXHdP7AnL6H7O+Sp5zZFXWbjodXurQNcB
juztppqhXdk4f8qejsod/zhOasDzz+UFbu/Zo+I2PcjxyxYpGG/JxS2PDbH8
N41yBH50KA8xC/CYS0lH51snOK3ove9gXwEe5vLk6Z79k5ystISyf68K8TS6
4KqwT5Ocvd57jw7sKib4ur++kjPFuSNUeKfXhYMbrInws3szw6EmV3OPtZTi
iyON5utrFzgL4vmZnvpl+GKaQx5mtcjp+u+xxWhqGc4IDv39rW2Rk+9yJWXE
rRxnqD/5tTy4xDm0QWfL8EIFntfm4twqRkIPPz3w+sf8iJdDu/ULC26U8+L6
j9MabXiHhS8WEU9HA9SBSJNjbbilaPf0njI6Uj5vsl0lrg2f9Ug2FBujo1R9
kYedc2243tzT8EQzCRT7MfLkoYof+N6ubYr5PJLofGf0mJH9Tzylou6RopcU
eiBSE4Lt/oMPmhu0Gu+URdu3XbIPOvIHX9wcPZjpIYvaPdZuHLlAnGeJnh5N
lEXSX2/01Gb9wQNCfjSrTsiiWwlme8Ipf3FnvdLbGx7JoZDV9eIrP/7iJEPu
pto5BnLBv9wb9O7ENfxXt/uGMxHp0XThjxudeExZgkR/DhMl8DLaPz3pxJe4
FlpXf2Oi6o8n5TObO3HxKXPjAAoLqVgvPjqxpQs/1ud5Y+oQC/W5Kmf/4urG
WY9KhpUGWCioxqyuTrYbH6gevuW3wELSGt7DxRu68XDNMvssUTYynijWTDrR
jRcbqdenabBR5mXLNwc+duOjsSXrZj3Z6FTs5Q8NMT24ydJ2LH2YjbinHv3m
ZPbgpvehKmeJjRIPVJNelPbgaU+K42+KKqBPDNquqMkefN5smO+bqgJam55R
tceuF7/6zOrsOScFVC5U36fn1YuXrLnEre2pgOxPTwipRPTifjb9vRWXFVCk
1nYz/uJe3D9B1eJ0ggIaLGpsKGX24fuL4s9n1SigUPm5sVd6fbizUp+rcKsC
YvwnT3u4vw9v8Lwhta1LAZkZutkEhhD2P7f7yywqoOcNy9+39vbhkfuXWp6q
KiKPbtXOvJx+XFnli0DdJUX058h3wZKP/TikNv1YuaqIrFrDNeq6+vHBXU3s
2WhFpFfTe7FbdgCPrLpStumxIuJ59ZQieW0At0h34wxUKqLzaja6Co8G8L18
6THwWRH1Pea113g/gCe9D/E82KKI6u8cTzecGMBPsbVNG3sUUUIAe/uFo//w
tBONa/5wKyHh6YbjIf7/cIO4ZRUjISV0+WzQ9ej4f/jm9ljds2Ql5OT0uym9
5h+ucubEDS45JdT04+b8655/uP6ZF87uLCVkZLOdhbgG8bi4Dvf41UpI3fi+
e+umQbxFEN+gul4JpZSY3eqyHMSl9K/ExG5QQtjWxfzRM4O4YHSNTdEmJRSa
96x9MXwQX2ObbPN4qxKaXneYW+jJIP5YK/i4Ca6E3NKFVSQ4g/i7YgmblzuV
UDur0JzdNoh/ONbP9W23Etqb6HZu3dQgkd+uXe+MlVAJTebeZsoQLi/tNXHQ
VAnpRFV/2L12CPfB/YYLzJVQGr9f137DIbzQg0Ft3aeEZIKUhY8cG8KlLtZt
y9uvhCLnmtefChjCN7z3tNxrpYSWvcNszt8dwi/LlmunWSshr8GNl4Jzh/Bu
N/2yIhsl1HWiO/Vm3RDO5Vjcf9NWCdn+jqtM7BvCi3X+i2IeUELVdgaDaTzD
eHuX/90zBN76dQJ7LU/g56sm/AicY/p4E2fzMO7juDVqB4FZFZYONdbDuIJP
uVUV4S92O3dIy9lh/INv6UZhAvO9e5XRGTGMr2ypURIm4vtpHasfeTqMpzwT
kKgi8h3IokwuoGE8Tz1mASyVkD1RomD7MD7y2bT+goUS+nz/LE6fGcYNVPVD
3fcqoZ1SzBMs6gg+8EhCmmGmhPJi6iPU143ggouRYdf3KCFl4Ssv9YxH8D/7
empfGyqhxJB1zQbHR/APGp19ibuUUOD5SLbDvRH8I7/skwf6Smh8ZKuRW94I
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
r1h5r4jo/wPVI/Ei
       "]]},
     Annotation[#, "Charting`Private`Tag$31771#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Velocity error\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8910820203978987`*^9, 3.891082057896785*^9}, 
   3.891082151149126*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"8973557e-a27e-44b6-85a3-02ba724a2ab3"]
}, Open  ]],

Cell[TextData[StyleBox["Acceleration Error :", "Subsection"]], "Text",
 CellChangeTimes->{{3.89108207783501*^9, 
  3.891082090491309*^9}},ExpressionUUID->"0175167d-3be6-48b9-8d0c-\
6dda52ca7a85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"yd", "''"}], "[", "t", "]"}], "-", 
       RowBox[{
        RowBox[{"yo", "[", "t", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "/.", "Solx"}], "/.", "Vals"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Acceleration error\>\""}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.891082041799964*^9, 3.891082050610614*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"4ef6dc07-f931-4047-be84-af28790395ce"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
NyWRIOunxB5wLIV/ANAI3vI=
       "]]},
     Annotation[#, "Charting`Private`Tag$32286#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Acceleration error\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.891082044444456*^9, 3.891082051121901*^9}, 
   3.8910821530767508`*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"31f1370c-c02a-42ca-b3b5-8dc41cb9ea64"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Objective Function value calculation :", "Section",
 CellChangeTimes->{{3.6566795680812035`*^9, 3.656679578150238*^9}, {
  3.891074835556576*^9, 
  3.891074838310698*^9}},ExpressionUUID->"6db09681-5292-4d46-949c-\
9f7959fbf9a9"],

Cell["Define tracking error as z :", "Text",
 CellChangeTimes->{{3.891081283924184*^9, 
  3.891081294609977*^9}},ExpressionUUID->"77a760b7-7405-44fc-9cde-\
4c9dcf643b92"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"z", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Eta]", "[", "t", "]"}], "-", 
   RowBox[{"yo", "[", "t", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"J", "=", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"z", "[", "t", "]"}], ".", "Q", ".", 
            RowBox[{"z", "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"u", "[", "t", "]"}], ".", "R", ".", 
            RowBox[{"u", "[", "t", "]"}]}]}], ")"}], "/.", "Vals"}], "/.", 
        "solS"}], "/.", "Solx"}], "/.", "Sol\[Xi]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "6"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6566795802094774`*^9, 3.6566796193328323`*^9}, {
   3.6566796607858295`*^9, 3.6566798142277813`*^9}, {3.65667987291811*^9, 
   3.6566798892088237`*^9}, {3.6566799303472157`*^9, 
   3.6566799550132904`*^9}, {3.6566801689496317`*^9, 
   3.6566802137410936`*^9}, {3.7851060407264476`*^9, 3.785106046971779*^9}, {
   3.785106080649777*^9, 3.7851061045045843`*^9}, 3.785112660771064*^9},
 CellLabel->
  "In[115]:=",ExpressionUUID->"ca28dbb3-f48c-4ca8-a838-23e3f7192b05"],

Cell[BoxData["12146.507136672059`"], "Output",
 CellChangeTimes->{
  3.6566797425676026`*^9, {3.6566797904831247`*^9, 3.656679825444397*^9}, 
   3.6566798907220526`*^9, {3.656679942828456*^9, 3.656679955590502*^9}, {
   3.6566801777326007`*^9, 3.6566802140374994`*^9}, 3.716572949834259*^9, {
   3.7851060908716755`*^9, 3.785106105209163*^9}, 3.7851098497938833`*^9, {
   3.785112655806978*^9, 3.7851126679928246`*^9}, 3.785178853233663*^9, 
   3.8901292519993753`*^9, 3.890691262531865*^9, 3.8910748398418837`*^9, 
   3.891081723177359*^9, 3.891082155164693*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"7bc1561f-546c-4a5e-81ca-e793d552c98b"]
}, Open  ]],

Cell["\<\
System operates as desired. Tracking can be done successfully!\
\>", "Subsubsection",
 CellChangeTimes->{{3.891074882770648*^9, 3.8910748881359987`*^9}, {
  3.891074954252269*^9, 
  3.8910750047106028`*^9}},ExpressionUUID->"be096724-6e80-46a7-b895-\
a9fd41bfe6e3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowMargins->{{352, Automatic}, {Automatic, 50}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
TaggingRules->Association["TryRealOnly" -> False],
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 168, 3, 96, "Title",ExpressionUUID->"bba135c1-1b87-4023-a078-05d68db284b8"],
Cell[751, 27, 153, 3, 96, "Title",ExpressionUUID->"3e381f8e-d70c-412e-bb04-8e27ea1f3855"],
Cell[CellGroupData[{
Cell[929, 34, 152, 3, 67, "Chapter",ExpressionUUID->"339a6338-f072-41b6-ba99-cc816240d263"],
Cell[CellGroupData[{
Cell[1106, 41, 271, 4, 44, "Subsubsection",ExpressionUUID->"da001964-6d6e-4844-9473-b4a338cfd353"],
Cell[1380, 47, 1356, 29, 44, "Input",ExpressionUUID->"bc133d32-4b33-4fe2-9777-c853750240ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2773, 81, 195, 3, 44, "Subsubsection",ExpressionUUID->"6c3cd564-264b-4125-83ad-61d995c5f9cd"],
Cell[CellGroupData[{
Cell[2993, 88, 2554, 54, 181, "Input",ExpressionUUID->"ba0a1d9f-8425-4844-80bd-192559fb0eaf"],
Cell[CellGroupData[{
Cell[5572, 146, 1468, 24, 22, "Print",ExpressionUUID->"f7bfcd21-cef2-4a3e-ae0b-2a57d18b389a"],
Cell[7043, 172, 1838, 39, 35, "Print",ExpressionUUID->"28abcbe2-fcd8-47bd-b218-8060e5b8b457"],
Cell[8884, 213, 1312, 22, 22, "Print",ExpressionUUID->"586cddcf-7c10-424d-b4ae-6eb7fe839af0"],
Cell[10199, 237, 1208, 18, 22, "Print",ExpressionUUID->"b3bb7ed6-0026-4106-af3e-11be165b7ca7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11468, 262, 191, 3, 44, "Subsubsection",ExpressionUUID->"ba90af5b-869f-40fd-b51d-a9ab721e8d3f"],
Cell[CellGroupData[{
Cell[11684, 269, 1602, 34, 86, "Input",ExpressionUUID->"4bab9cc1-e6af-43bf-9ad8-6c8963a51a45"],
Cell[CellGroupData[{
Cell[13311, 307, 1939, 41, 35, "Print",ExpressionUUID->"0c995bed-a7ff-47b5-be37-a2c2196ae095"],
Cell[15253, 350, 1411, 24, 22, "Print",ExpressionUUID->"65d326aa-00da-45af-a160-f25a13575afc"],
Cell[16667, 376, 1308, 20, 22, "Print",ExpressionUUID->"e5276b73-3ea5-4ea2-b9d2-892ed9d855ba"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18024, 402, 290, 6, 28, "Input",ExpressionUUID->"2ca1b0a8-3246-46a6-9bd5-91cf0a25d88d"],
Cell[18317, 410, 1058, 18, 32, "Output",ExpressionUUID->"94874c3a-5ef9-40ff-9139-66275d1b7c6b"]
}, Open  ]],
Cell[19390, 431, 363, 7, 34, "Text",ExpressionUUID->"9746d1e2-55c7-4bb8-8cea-0f0c3eceb01d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19802, 444, 153, 3, 67, "Chapter",ExpressionUUID->"9cd60dcb-8c1b-4ac0-ba03-fe1a5dc2c4b0"],
Cell[CellGroupData[{
Cell[19980, 451, 605, 20, 69, "Subsubsection",ExpressionUUID->"150a7411-e06b-4f72-9c54-afc71c5b6af2"],
Cell[20588, 473, 710, 18, 97, "Text",ExpressionUUID->"152c33a6-5279-4394-bca9-94256ec3caae"],
Cell[21301, 493, 386, 10, 24, "Print",ExpressionUUID->"7c252e69-524b-4bdd-a3e3-471501ce0ecc"],
Cell[21690, 505, 724, 21, 63, "Output",ExpressionUUID->"9b01e84a-7719-43d5-9923-2e4d77f68da4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22451, 531, 962, 30, 67, "Subsubsection",ExpressionUUID->"15ab7fa5-9ed9-4641-b6df-615f5d19f11f"],
Cell[23416, 563, 521, 16, 82, "Input",ExpressionUUID->"2a705312-8606-4c77-8808-5ebac20ba8a6"],
Cell[CellGroupData[{
Cell[23962, 583, 723, 17, 52, "Input",ExpressionUUID->"3f0b6ba7-fda5-4ab1-84a8-273dee9c5415"],
Cell[24688, 602, 940, 29, 56, "Print",ExpressionUUID->"a6ac240e-cb20-4cf3-a2a0-fb32916e3417"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25689, 638, 271, 4, 69, "Chapter",ExpressionUUID->"272ac748-c923-48c0-acd9-200d48c10193"],
Cell[25963, 644, 257, 6, 30, "Input",ExpressionUUID->"86ab9d2e-7b40-455f-a872-001a0683e498"],
Cell[CellGroupData[{
Cell[26245, 654, 930, 24, 52, "Input",ExpressionUUID->"d54a6d1e-4865-48d7-883d-241ff1d217e6"],
Cell[27178, 680, 672, 19, 40, "Print",ExpressionUUID->"182573ad-533c-42eb-b165-9773f39027b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27887, 704, 474, 12, 30, "Input",ExpressionUUID->"e12efbd8-88ef-4a51-b2e9-99fa6e888cec"],
Cell[28364, 718, 389, 12, 38, "Output",ExpressionUUID->"6e980051-6d2a-4e0e-b8cc-8129be6e4672"]
}, Open  ]],
Cell[28768, 733, 236, 4, 35, "Text",ExpressionUUID->"a7adc581-e53b-461d-b376-3308d7e53000"]
}, Open  ]],
Cell[29019, 740, 281, 5, 66, "Subtitle",ExpressionUUID->"e61907b7-a434-446c-8dee-d6b456c81a1a"],
Cell[29303, 747, 300, 5, 61, "Chapter",ExpressionUUID->"f81cb770-6225-4a55-9e65-166043790704"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29640, 757, 176, 3, 98, "Title",ExpressionUUID->"235d3190-e3f4-4b94-9544-0f9f3ca0970c"],
Cell[29819, 762, 252, 5, 30, "Input",ExpressionUUID->"5275c599-f7df-4359-8806-c8457959e7c5"],
Cell[CellGroupData[{
Cell[30096, 771, 1032, 30, 63, "Input",ExpressionUUID->"cd9b2cb6-80f1-4a06-9d28-0c5b6edcd712"],
Cell[31131, 803, 1405, 40, 61, "Print",ExpressionUUID->"d9adc0f4-1d6a-4207-8a08-7b5c02e500b4"]
}, Open  ]],
Cell[32551, 846, 458, 10, 35, "Text",ExpressionUUID->"c4d88f8e-7505-428e-9f4d-8a322daa3f62"],
Cell[CellGroupData[{
Cell[33034, 860, 1164, 31, 89, "Input",ExpressionUUID->"5962f7e6-09ca-41a2-aab2-f1265b6afe55"],
Cell[34201, 893, 2111, 58, 95, "Print",ExpressionUUID->"457b9fd7-886e-4103-86ca-e150d88b74da"]
}, Open  ]],
Cell[36327, 954, 170, 3, 35, "Text",ExpressionUUID->"5f1e1ea5-0709-4f7e-b6f1-7b0c9f8e03ea"],
Cell[CellGroupData[{
Cell[36522, 961, 338, 6, 45, "Subsubsection",ExpressionUUID->"afad8da3-0763-487d-b1e1-d6c38f2ff36d"],
Cell[36863, 969, 830, 36, 35, "Text",ExpressionUUID->"3e403288-fcac-49ac-96c7-d3c4f48a0b10"],
Cell[CellGroupData[{
Cell[37718, 1009, 25714, 655, 1064, "Input",ExpressionUUID->"b370129e-8584-4e96-9016-9389ef679ec3",
 InitializationCell->True],
Cell[63435, 1666, 419, 10, 28, "Message",ExpressionUUID->"b29a0b43-5c34-4e21-a00d-5d8440df2073"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[63903, 1682, 463, 7, 58, "Chapter",ExpressionUUID->"3f141117-53ac-495f-a480-4d77083e7853"],
Cell[CellGroupData[{
Cell[64391, 1693, 1050, 28, 70, "Input",ExpressionUUID->"59625358-4d06-4357-a84e-d62c840b3a29"],
Cell[65444, 1723, 1759, 51, 39, "Print",ExpressionUUID->"d780e90d-136e-4c16-9a86-bc379d7f6faa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67240, 1779, 1273, 38, 114, "Input",ExpressionUUID->"621d4ecc-8cce-4be1-853c-54c05524f8e7"],
Cell[CellGroupData[{
Cell[68538, 1821, 1018, 30, 24, "Print",ExpressionUUID->"6c604bda-b1fc-40e4-9a0d-db3bb8b9a985"],
Cell[69559, 1853, 634, 16, 27, "Print",ExpressionUUID->"0e9d313f-75de-4711-8d8b-a96a06f6bee9"]
}, Open  ]]
}, Open  ]],
Cell[70220, 1873, 454, 12, 38, "Text",ExpressionUUID->"4ae84b38-eeaf-4abe-8965-9f31fd35947d"],
Cell[CellGroupData[{
Cell[70699, 1889, 481, 12, 30, "Input",ExpressionUUID->"b2c4192d-a29a-4aea-b955-266f37ffbad3"],
Cell[71183, 1903, 677, 16, 45, "Print",ExpressionUUID->"31609539-b30e-4a18-ab90-7259081416c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71897, 1924, 475, 6, 54, "Subsection",ExpressionUUID->"54f70995-683b-4ad7-aabe-60e6248fbb71"],
Cell[CellGroupData[{
Cell[72397, 1934, 362, 11, 44, "Subsubsection",ExpressionUUID->"98dc63fa-bc8b-49b3-b43e-c3cd8c8a844e"],
Cell[CellGroupData[{
Cell[72784, 1949, 600, 10, 30, "Input",ExpressionUUID->"033f5d34-78a3-4f89-a27c-5e315d72b2bc"],
Cell[73387, 1961, 905, 22, 24, "Print",ExpressionUUID->"7e9b9c07-dcf7-4071-a699-1b4afbe3b833"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74329, 1988, 1803, 45, 120, "Input",ExpressionUUID->"a6799728-e60d-4440-82f6-78e5578d6770"],
Cell[76135, 2035, 1312, 32, 24, "Print",ExpressionUUID->"09bb75f2-9f2d-4f75-ba08-fd4c377957e4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77496, 2073, 565, 20, 45, "Subsubsection",ExpressionUUID->"668ccc63-665a-4f71-93bf-be6e5269331e"],
Cell[CellGroupData[{
Cell[78086, 2097, 681, 16, 30, "Input",ExpressionUUID->"7b9d5694-f92c-4805-b2b1-039bc5b186d1"],
Cell[78770, 2115, 1082, 28, 40, "Print",ExpressionUUID->"9f350ec0-ee80-4805-b209-545ceb924875"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79889, 2148, 980, 26, 55, "Input",ExpressionUUID->"5a24e0ae-4da4-4550-b661-aec9d950676f"],
Cell[80872, 2176, 536, 12, 34, "Output",ExpressionUUID->"df1ec57d-56cf-4b9f-80b8-6e1ef5fc0d50"],
Cell[81411, 2190, 864, 23, 63, "Output",ExpressionUUID->"faab3df3-51ec-4c78-bb8e-b6603eca0b35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82312, 2218, 1283, 36, 73, "Input",ExpressionUUID->"ff00557b-71d6-4af1-bab8-ec40dc4f75cd"],
Cell[83598, 2256, 1498, 39, 27, "Print",ExpressionUUID->"0ccb5e0e-c24d-4641-a93d-2fe9013084e6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85145, 2301, 665, 17, 47, "Subsubsection",ExpressionUUID->"94ad0038-0467-4652-a430-15cba126297b"],
Cell[CellGroupData[{
Cell[85835, 2322, 2439, 58, 117, "Input",ExpressionUUID->"ff6e6eb7-662c-45b0-b3f2-f5c07d12e31b"],
Cell[88277, 2382, 2009, 52, 40, "Print",ExpressionUUID->"fa75e66f-b71f-4bd1-a520-8991dfdf0159"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90335, 2440, 232, 5, 45, "Subsubsection",ExpressionUUID->"0109d6fc-b3d9-4622-9a11-7c0fee3d3a81"],
Cell[CellGroupData[{
Cell[90592, 2449, 877, 21, 73, "Input",ExpressionUUID->"66caf346-a7b2-49ae-abab-567671f687da"],
Cell[91472, 2472, 1893, 50, 40, "Print",ExpressionUUID->"02eeb27e-e923-42ae-9a36-fffe269b0fe5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93402, 2527, 2366, 51, 94, "Input",ExpressionUUID->"ea8ba51c-1361-4f9a-8e6b-d4df79b955fd"],
Cell[95771, 2580, 1358, 34, 40, "Print",ExpressionUUID->"23497294-2362-49d5-bc64-e72ba6b628d1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97202, 2622, 520, 8, 69, "Chapter",ExpressionUUID->"f0238d07-b7ac-494f-8164-63c801ff92d9"],
Cell[CellGroupData[{
Cell[97747, 2634, 919, 25, 73, "Input",ExpressionUUID->"7e6aa983-83af-4acc-852a-d2fe574a7c2b"],
Cell[98669, 2661, 537, 12, 25, "Print",ExpressionUUID->"8577ad02-4a70-47bc-8de0-dfb7275dccb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99243, 2678, 819, 24, 52, "Input",ExpressionUUID->"75a93425-0a18-453f-96b1-794cca68b83e"],
Cell[100065, 2704, 315, 6, 34, "Output",ExpressionUUID->"2501f8f5-f109-4eae-b9a4-60eec97ab81d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100417, 2715, 933, 27, 66, "Input",ExpressionUUID->"66c065dc-6857-45c1-ab8e-20435d77d6c3"],
Cell[101353, 2744, 420, 8, 34, "Output",ExpressionUUID->"6145bc88-bf73-491c-b736-37823111caf3"],
Cell[101776, 2754, 461, 11, 34, "Output",ExpressionUUID->"4e178646-7324-4f9e-99fc-2e7756575701"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102274, 2770, 537, 12, 52, "Input",ExpressionUUID->"7cf325a5-3919-47ae-8cf2-95d6cd2e3f2d"],
Cell[102814, 2784, 1137, 30, 40, "Print",ExpressionUUID->"1dcc7e29-4e7d-45ee-8bf7-ab7666a71cd8"]
}, Open  ]],
Cell[103966, 2817, 260, 5, 30, "Input",ExpressionUUID->"8aaad236-e7a2-455a-9605-a1ca4905421d"],
Cell[CellGroupData[{
Cell[104251, 2826, 506, 11, 52, "Input",ExpressionUUID->"798b9221-7b82-4c54-a06b-bc6c29e67f00"],
Cell[104760, 2839, 400, 7, 34, "Output",ExpressionUUID->"10ffb014-63af-45d8-b644-c6b3f90e7cb0"],
Cell[105163, 2848, 405, 8, 34, "Output",ExpressionUUID->"4cf719db-7761-4d02-b0a0-6c20a619f7e3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105617, 2862, 165, 3, 69, "Chapter",ExpressionUUID->"48fdc53d-d94c-4b53-9874-1e893d2ba3ab"],
Cell[CellGroupData[{
Cell[105807, 2869, 2041, 57, 262, "Input",ExpressionUUID->"77b6bb2e-222d-4820-9559-9c74a5e48dec"],
Cell[107851, 2928, 1352, 37, 53, "Output",ExpressionUUID->"47c2e90e-85f2-4ebc-a6fd-53636bcbb908"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109240, 2970, 293, 7, 67, "Section",ExpressionUUID->"16c384d5-502f-4a3e-9625-f8ff14da4e55"],
Cell[109536, 2979, 1020, 27, 73, "Input",ExpressionUUID->"89ae072f-6597-418e-b2f5-f8c237326af6"],
Cell[CellGroupData[{
Cell[110581, 3010, 2047, 54, 94, "Input",ExpressionUUID->"1180867e-28a9-455a-99c4-e91d6683fcf8"],
Cell[112631, 3066, 42348, 748, 238, "Output",ExpressionUUID->"1fa5c0e8-e5f6-4946-99d6-8baa9307821d"],
Cell[154982, 3816, 43068, 757, 242, "Output",ExpressionUUID->"1bf060a6-26d2-443b-ac83-493d31c56215"],
Cell[198053, 4575, 43426, 763, 238, "Output",ExpressionUUID->"8e5b6db1-e5ce-41e7-b318-305f8f6d35b8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[241552, 5346, 157, 3, 98, "Title",ExpressionUUID->"dec26376-7597-4fc5-b705-2892e22d8b54"],
Cell[241712, 5351, 201, 4, 30, "Input",ExpressionUUID->"2770c619-508c-40b2-8e14-339cddb7a103"],
Cell[CellGroupData[{
Cell[241938, 5359, 174, 3, 69, "Chapter",ExpressionUUID->"d8ac9945-e837-45ef-8068-082d64e0d4e0"],
Cell[CellGroupData[{
Cell[242137, 5366, 230, 4, 54, "Subsection",ExpressionUUID->"bb5c1425-bc10-44c8-a39e-871181c98ebf"],
Cell[CellGroupData[{
Cell[242392, 5374, 997, 32, 111, "Input",ExpressionUUID->"54d953ff-1988-41e9-a3b4-f09081c093d9"],
Cell[243392, 5408, 1001, 28, 27, "Print",ExpressionUUID->"91c2a447-cea4-45c6-8095-f84718f695db"],
Cell[244396, 5438, 907, 28, 52, "Output",ExpressionUUID->"15008e02-95dd-4f64-94f9-262b9e51be25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245340, 5471, 626, 14, 30, "Input",ExpressionUUID->"35c6c775-9ef2-4e7b-8856-017acf34aa3b"],
Cell[245969, 5487, 670, 18, 44, "Print",ExpressionUUID->"0009acf5-8b17-4561-888a-66809bfd9452"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[246688, 5511, 164, 3, 54, "Subsection",ExpressionUUID->"148b22b2-451f-495d-b79c-fb27bfc82699"],
Cell[246855, 5516, 550, 18, 53, "Text",ExpressionUUID->"2b239223-1faa-421a-9083-106f8fcd1d8b"],
Cell[CellGroupData[{
Cell[247430, 5538, 587, 13, 30, "Input",ExpressionUUID->"56b49c97-b210-4032-8435-96456f80d518"],
Cell[248020, 5553, 1614, 38, 100, "Output",ExpressionUUID->"d338d1ae-f752-41f5-8154-a823fc1a8ab5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249671, 5596, 338, 6, 45, "Subsubsection",ExpressionUUID->"b7a6b6fa-84d1-473e-a6ed-18ccd5c46d48"],
Cell[250012, 5604, 830, 36, 35, "Text",ExpressionUUID->"84715eec-0317-4723-b362-b2f4dd6112a6"],
Cell[CellGroupData[{
Cell[250867, 5644, 25714, 655, 1064, "Input",ExpressionUUID->"6a12a0ee-f05a-408a-8d4f-b1e413efcbda",
 InitializationCell->True],
Cell[276584, 6301, 419, 10, 28, "Message",ExpressionUUID->"05bda47c-5bcf-448d-b0cc-bcefeff7bbca"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277064, 6318, 187, 3, 54, "Subsection",ExpressionUUID->"969593d9-b0ba-405e-94b7-b930718f8583"],
Cell[CellGroupData[{
Cell[277276, 6325, 1299, 37, 138, "Input",ExpressionUUID->"266e69b5-9083-4237-90bd-fe603656647a"],
Cell[278578, 6364, 1209, 28, 96, "Output",ExpressionUUID->"2dcbe472-a452-4941-8f62-30f8fbb2b50d"],
Cell[279790, 6394, 951, 18, 27, "Print",ExpressionUUID->"d22833fb-1767-49cb-81f9-6c61cf786bbf"]
}, Open  ]],
Cell[280756, 6415, 521, 13, 61, "Text",ExpressionUUID->"e6f5a9e9-2b62-4c35-b23b-7fde908b659d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281314, 6433, 329, 5, 54, "Subsection",ExpressionUUID->"6ef83d0d-a693-4b17-8425-4dd7df65ffa3"],
Cell[CellGroupData[{
Cell[281668, 6442, 501, 9, 30, "Input",ExpressionUUID->"654434f0-88d5-4605-bf4c-f19ffc830b33"],
Cell[282172, 6453, 1120, 23, 27, "Print",ExpressionUUID->"bff56334-2204-456b-85ca-6851ceafaee0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283329, 6481, 1812, 46, 120, "Input",ExpressionUUID->"f5947b63-3205-4c96-918f-1e1cb01d7bbd"],
Cell[285144, 6529, 1893, 44, 27, "Print",ExpressionUUID->"b207668b-72e6-40da-aec9-8fd698e7ccd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287074, 6578, 565, 20, 45, "Subsubsection",ExpressionUUID->"b7be06e5-c607-4991-8fd0-9dee16bc8d39"],
Cell[CellGroupData[{
Cell[287664, 6602, 548, 14, 30, "Input",ExpressionUUID->"13680301-7bc1-4caf-aa28-e3a6ab5f45ac"],
Cell[288215, 6618, 971, 19, 24, "Print",ExpressionUUID->"10e0deec-a291-4b47-8c00-2379477bd016"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289223, 6642, 818, 23, 55, "Input",ExpressionUUID->"d9ac7a2e-4071-422b-99d7-0700ccc6f0f1"],
Cell[290044, 6667, 895, 17, 37, "Output",ExpressionUUID->"ca6570be-c2b3-438b-b0f5-2002f6f2eac3"],
Cell[290942, 6686, 912, 17, 37, "Output",ExpressionUUID->"148a74ee-5d8b-466c-96ea-1327be8c0710"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291891, 6708, 1193, 34, 73, "Input",ExpressionUUID->"87983dd2-3f2b-49ba-8775-d5858573830b"],
Cell[293087, 6744, 1069, 21, 24, "Print",ExpressionUUID->"5e5120a6-6e11-4f71-aa11-f1920ad2c8a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294193, 6770, 362, 8, 30, "Input",ExpressionUUID->"42eef8af-116f-45bc-b229-3b90a656c2be"],
Cell[294558, 6780, 574, 11, 37, "Output",ExpressionUUID->"a2ba120f-7747-46e1-878c-030c62350173"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[295181, 6797, 665, 17, 47, "Subsubsection",ExpressionUUID->"2cdf9d55-7e1b-473f-b0a2-5b53ac8de0fb"],
Cell[CellGroupData[{
Cell[295871, 6818, 2396, 58, 117, "Input",ExpressionUUID->"e3f0e4f8-be44-4659-ad74-755c8d7feda5"],
Cell[298270, 6878, 1718, 37, 26, "Print",ExpressionUUID->"5834aa5c-deaf-4649-874f-acd3be2c824c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[300037, 6921, 232, 5, 45, "Subsubsection",ExpressionUUID->"aafff173-ffed-49e7-bbf8-5026437334fc"],
Cell[300272, 6928, 602, 14, 52, "Input",ExpressionUUID->"a3071a5c-ac15-47cc-9340-b83c5718ac21"],
Cell[300877, 6944, 1863, 41, 73, "Input",ExpressionUUID->"2b81a5e9-3ba5-4eb5-b0e6-f7ab4ab15c0b"],
Cell[CellGroupData[{
Cell[302765, 6989, 660, 13, 30, "Input",ExpressionUUID->"9f175437-04bd-4378-99cf-ecd8868d5199"],
Cell[303428, 7004, 2702, 76, 56, "Print",ExpressionUUID->"410a63ed-2c5e-4a85-bf97-6101495a7034"]
}, Open  ]],
Cell[306145, 7083, 175, 3, 35, "Text",ExpressionUUID->"8d47b183-667f-4ad5-99fe-8c26b7eb2df6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[306369, 7092, 461, 7, 54, "Subsection",ExpressionUUID->"ed41723c-c870-45ed-974c-aba300f9fe50"],
Cell[306833, 7101, 1324, 33, 73, "Input",ExpressionUUID->"d1da30e5-99cf-4748-b061-332bb8acdc5e"],
Cell[CellGroupData[{
Cell[308182, 7138, 1006, 27, 52, "Input",ExpressionUUID->"15a69907-0d09-4c4f-ab47-e231871697a5"],
Cell[309191, 7167, 2252, 52, 71, "Output",ExpressionUUID->"c5689769-af51-4d45-aabe-b716d82ddf3a"],
Cell[311446, 7221, 1991, 46, 71, "Output",ExpressionUUID->"8c09215a-6dfa-4132-baa8-6e2fc53bfe01"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[313498, 7274, 254, 4, 69, "Chapter",ExpressionUUID->"b9d2fb6a-fdff-45c9-a28d-ab69a53080b5"],
Cell[CellGroupData[{
Cell[313777, 7282, 286, 7, 81, "Subsection",ExpressionUUID->"b710bb56-2cf8-4103-b4d3-abbeca17cd3c"],
Cell[CellGroupData[{
Cell[314088, 7293, 712, 15, 73, "Input",ExpressionUUID->"89992dee-edfa-424d-a78c-e2af0b555fbb"],
Cell[314803, 7310, 669, 15, 34, "Output",ExpressionUUID->"89f83943-adfc-415f-9631-f172af67f441"],
Cell[315475, 7327, 483, 9, 34, "Output",ExpressionUUID->"c3a4938b-2ed0-4b5f-820c-83cdf8726ebb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315995, 7341, 1315, 26, 73, "Input",ExpressionUUID->"f425ff9f-9310-4a36-81fc-96e1ae89c643"],
Cell[317313, 7369, 2635, 68, 56, "Print",ExpressionUUID->"63ee5047-fa2b-47b8-a9d0-b4f69bee8734"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[319997, 7443, 380, 6, 54, "Subsection",ExpressionUUID->"8109086a-4729-45e3-bd0b-b8a294fe7af8"],
Cell[CellGroupData[{
Cell[320402, 7453, 1381, 38, 73, "Input",ExpressionUUID->"ae42017b-a196-4bec-bab8-6824d34eb0a6"],
Cell[321786, 7493, 1469, 42, 37, "Output",ExpressionUUID->"ecc9e95a-e3c5-4628-bdc5-512c643740db"],
Cell[323258, 7537, 6032, 176, 83, "Output",ExpressionUUID->"e862a898-4bf5-4da1-8cb3-d4a56a17f341"]
}, Open  ]],
Cell[329305, 7716, 191, 3, 35, "Text",ExpressionUUID->"f70d0120-6001-43ea-b978-488620b26b4e"],
Cell[329499, 7721, 160, 3, 30, "Input",ExpressionUUID->"273b3633-2a63-44cf-8802-5ca3131af706"],
Cell[CellGroupData[{
Cell[329684, 7728, 181, 3, 45, "Subsubsection",ExpressionUUID->"b2b2ec74-1162-4cd0-9955-f0685a899b47"],
Cell[CellGroupData[{
Cell[329890, 7735, 2571, 56, 136, "Input",ExpressionUUID->"14d321d9-7ef8-46e9-a54c-fbd4046c90ac"],
Cell[332464, 7793, 7911, 182, 126, "Print",ExpressionUUID->"b19951c4-d35d-43e8-8f31-37774f7fcdd6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[340424, 7981, 309, 5, 45, "Subsubsection",ExpressionUUID->"90e5a4ed-b458-481a-a050-23a46ee7d4c8"],
Cell[340736, 7988, 4227, 82, 52, "Input",ExpressionUUID->"515ac02e-2a23-4bbf-a096-a7751c45cbf9"],
Cell[CellGroupData[{
Cell[344988, 8074, 2728, 68, 73, "Input",ExpressionUUID->"47dbc55e-46e7-4416-9ad6-35172ee2bbc8"],
Cell[347719, 8144, 77821, 1376, 138, "Output",ExpressionUUID->"e7d2e836-157d-4142-9db6-942855612983"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[425589, 9526, 218, 4, 45, "Subsubsection",ExpressionUUID->"acc376e0-72a5-465a-8766-a01ef32b1fe6"],
Cell[CellGroupData[{
Cell[425832, 9534, 2008, 41, 94, "Input",ExpressionUUID->"1239c0f2-500d-40bc-a95c-68a7240cfc6d"],
Cell[427843, 9577, 2038, 38, 37, "Output",ExpressionUUID->"d959eb50-4edb-4034-8c8e-7d1b8074d75e"],
Cell[429884, 9617, 44067, 782, 234, "Output",ExpressionUUID->"89f85a31-7c59-430d-946f-11ad1a774c7e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[474012, 10406, 189, 3, 54, "Subsection",ExpressionUUID->"5afa4180-254b-468b-a330-aca23dab9c4c"],
Cell[CellGroupData[{
Cell[474226, 10413, 2104, 40, 73, "Input",ExpressionUUID->"1e887f4e-6757-47df-947a-e46e71e211e7"],
Cell[476333, 10455, 3257, 75, 73, "Output",ExpressionUUID->"183cc296-0ad1-4a75-b280-51325f156dbb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[479639, 10536, 211, 4, 54, "Subsection",ExpressionUUID->"b6a21c1a-91b7-43ac-8ee1-37b7bc45f2ec"],
Cell[CellGroupData[{
Cell[479875, 10544, 3209, 81, 136, "Input",ExpressionUUID->"80ebe1a4-0f8a-46ed-81d3-d91793dcfe84"],
Cell[483087, 10627, 4145, 95, 77, "Output",ExpressionUUID->"1ac43f5d-5330-490d-b97c-563180c72a88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487269, 10727, 245, 4, 45, "Subsubsection",ExpressionUUID->"43ed54a3-134a-46b9-85a4-7075cecf7951"],
Cell[CellGroupData[{
Cell[487539, 10735, 2454, 64, 115, "Input",ExpressionUUID->"8efe5b4d-eb69-4bf5-b8a4-e14cca56797e"],
Cell[489996, 10801, 1858, 47, 58, "Print",ExpressionUUID->"e7ae28bd-e0f2-4ae8-b6dd-1ce061851c69"],
Cell[491857, 10850, 3847, 91, 77, "Output",ExpressionUUID->"2d3cdf74-2645-4386-94a3-5dfb4a6116c5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[495777, 10949, 356, 6, 69, "Chapter",ExpressionUUID->"4523b170-3f55-407b-8d0c-e9194a62731c"],
Cell[496136, 10957, 180, 3, 35, "Text",ExpressionUUID->"f82248a2-bdfe-48d9-a59b-2e96f5136843"],
Cell[CellGroupData[{
Cell[496341, 10964, 2013, 54, 73, "Input",ExpressionUUID->"5b0f938a-504a-4e0b-b067-df5ae66398c7"],
Cell[498357, 11020, 81853, 1397, 223, "Output",ExpressionUUID->"deec5cf7-3940-48ee-a89d-c8a00eddc3ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[580247, 12422, 257, 4, 54, "Subsection",ExpressionUUID->"a49d0800-dd1d-4dd6-bdbf-b9dec2b1abee"],
Cell[CellGroupData[{
Cell[580529, 12430, 2741, 70, 73, "Input",ExpressionUUID->"055904fa-4111-4809-9fc5-910cb694ebb3"],
Cell[583273, 12502, 81587, 1390, 147, "Output",ExpressionUUID->"6141c369-c5f4-424d-a147-9f6df1b2631a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[664909, 13898, 210, 4, 54, "Subsection",ExpressionUUID->"0c8c5a93-d1af-4a0a-b075-c61b0e5ed382"],
Cell[665122, 13904, 406, 9, 30, "Input",ExpressionUUID->"2ce65620-d3b6-4088-ac32-798113881da5"],
Cell[CellGroupData[{
Cell[665553, 13917, 1444, 29, 30, "Input",ExpressionUUID->"3600a2b7-8250-4e6e-b1d2-3fa996b2e79d"],
Cell[667000, 13948, 58387, 1009, 238, "Output",ExpressionUUID->"227223b4-afe3-4142-bf43-9cd46a2c098d"]
}, Open  ]],
Cell[725402, 14960, 158, 3, 35, "Text",ExpressionUUID->"65114da1-99bc-4b4f-884c-6eea83e11c25"],
Cell[CellGroupData[{
Cell[725585, 14967, 850, 24, 30, "Input",ExpressionUUID->"11162450-01a7-4ac3-b607-6adbae157cce"],
Cell[726438, 14993, 58450, 1012, 234, "Output",ExpressionUUID->"34796f2b-f80b-44e8-92af-d2b30ee86fbf"]
}, Open  ]],
Cell[784903, 16008, 159, 3, 35, "Text",ExpressionUUID->"38813cf9-51cc-4f70-b6ee-9e06eeac02da"],
Cell[CellGroupData[{
Cell[785087, 16015, 851, 24, 30, "Input",ExpressionUUID->"000f589a-ea6e-4b38-8f29-da11d5dcab93"],
Cell[785941, 16041, 57741, 1001, 234, "Output",ExpressionUUID->"4e23a329-94ee-431b-a4ab-f9bfbae136da"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[843731, 17048, 247, 4, 54, "Subsection",ExpressionUUID->"859dfbd4-c4db-4b06-afb9-8d88327a255d"],
Cell[CellGroupData[{
Cell[844003, 17056, 812, 20, 30, "Input",ExpressionUUID->"68cfdd1a-bf2d-4c61-b339-68228a61b932"],
Cell[844818, 17078, 21598, 373, 357, "Output",ExpressionUUID->"f2305500-07a0-4567-9b26-7a030bcdf814"]
}, Open  ]],
Cell[866431, 17454, 193, 3, 41, "Text",ExpressionUUID->"1bfc065d-23d4-419b-a321-a49cd6820b25"],
Cell[CellGroupData[{
Cell[866649, 17461, 690, 19, 30, "Input",ExpressionUUID->"3b43afd7-ea62-46ed-854f-3d9d1e82c079"],
Cell[867342, 17482, 26067, 448, 249, "Output",ExpressionUUID->"8973557e-a27e-44b6-85a3-02ba724a2ab3"]
}, Open  ]],
Cell[893424, 17933, 195, 3, 41, "Text",ExpressionUUID->"0175167d-3be6-48b9-8d0c-6dda52ca7a85"],
Cell[CellGroupData[{
Cell[893644, 17940, 693, 19, 30, "Input",ExpressionUUID->"4ef6dc07-f931-4047-be84-af28790395ce"],
Cell[894340, 17961, 26628, 457, 246, "Output",ExpressionUUID->"31f1370c-c02a-42ca-b3b5-8dc41cb9ea64"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[921017, 18424, 234, 4, 67, "Section",ExpressionUUID->"6db09681-5292-4d46-949c-9f7959fbf9a9"],
Cell[921254, 18430, 170, 3, 35, "Text",ExpressionUUID->"77a760b7-7405-44fc-9cde-4c9dcf643b92"],
Cell[CellGroupData[{
Cell[921449, 18437, 1362, 34, 70, "Input",ExpressionUUID->"ca28dbb3-f48c-4ca8-a838-23e3f7192b05"],
Cell[922814, 18473, 646, 10, 34, "Output",ExpressionUUID->"7bc1561f-546c-4a5e-81ca-e793d552c98b"]
}, Open  ]],
Cell[923475, 18486, 274, 6, 45, "Subsubsection",ExpressionUUID->"be096724-6e80-46a7-b895-a9fd41bfe6e3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

